{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\order_list.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FadeIn from \"react-fade-in\";\nimport axios from \"axios\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport swal from 'sweetalert';\nimport $ from 'jquery';\n$.DataTable = require('datatables.net');\n\nvar OrderListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderListPage, _React$Component);\n\n  function OrderListPage(props) {\n    var _this;\n\n    _classCallCheck(this, OrderListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderListPage).call(this, props));\n\n    _this.deleteItem = function (id) {\n      console.log(id);\n      var playersRef = firebase.database().ref(\"/orders/\".concat(id));\n      playersRef.remove();\n    };\n\n    _this.dateChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onChange = function (event) {\n      console.log(event.target.value);\n      console.log(event.target.id);\n      var orderId = event.target.id;\n      var orderStatusValue = event.target.value;\n      var orderRid = event.target.getAttribute('data-rid');\n      var emailId = event.target.getAttribute('data-email');\n      var name = event.target.getAttribute('data-name');\n      var username = name ? name : emailId;\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do your really want to  change the status?\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willChange) {\n        if (willChange) {\n          var dbCon = firebase.database().ref(\"/orders/\".concat(orderId));\n          var trackingNumber = '';\n          var deliveredBy = '';\n          var headers = {\n            'Content-Type': 'application/json'\n          };\n\n          if (orderStatusValue == 'Dispatched') {\n            trackingNumber = '6245454784';\n            deliveredBy = 'Fedex';\n          }\n\n          var user = {\n            \"orderStatus\": orderStatusValue,\n            \"username\": username,\n            \"to\": emailId,\n            \"orderId\": orderRid,\n            \"trackingNumber\": trackingNumber,\n            \"deliveredBy\": deliveredBy\n          };\n          axios.post(\"http://testingmadesimple.org/training_app/api/Service/sendEmail\", user, {\n            headers: headers\n          }).then(function (res) {\n            console.log(res);\n          });\n          dbCon.update({\n            status: orderStatusValue\n          });\n        } else {// window\n          //     .location\n          //     .reload();\n        }\n      });\n    };\n\n    _this.state = {\n      orderList: [],\n      loading: false,\n      count: 1,\n      activePage: \"1\",\n      countPage: \"\",\n      orderStatusList: [],\n      validFrom: \"\",\n      validTo: \"\"\n    };\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(OrderListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pathname = this.props.location.pathname;\n      var pageName = pathname.substr(8);\n      this.setState({\n        loading: true\n      });\n      var sessionId = sessionStorage.getItem(\"RoleId\");\n      var userRole = sessionStorage.getItem(\"userRole\");\n\n      if (userRole == \"Merchant\") {\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"merchantId\").equalTo(sessionId);\n      } else {\n        var ref = firebase.database().ref(\"orders/\");\n      }\n\n      ref.once('value', function (snapshot) {\n        var data = [];\n        console.log(snapshot.val());\n        snapshot.forEach(function (childSnapShot) {\n          var Merchants = {\n            fireorderId: childSnapShot.key.toString(),\n            orderId: childSnapShot.val().orderId,\n            customerName: childSnapShot.val().first_name + \" \" + childSnapShot.val().last_name,\n            items: childSnapShot.val().cartDataItems.length,\n            status: childSnapShot.val().status,\n            created_on: childSnapShot.val().created_on,\n            emailId: childSnapShot.val().email_id\n          };\n          data.push(Merchants);\n        });\n\n        if (pageName != \"All\") {\n          var sortedKeys = data.filter(function (res) {\n            console.log(res);\n            return res.status == pageName;\n          });\n        } else {\n          var sortedKeys = data;\n        }\n\n        console.log(sortedKeys);\n\n        _this2.setState({\n          orderList: sortedKeys,\n          countPage: data.length,\n          loading: false\n        });\n\n        console.log(_this2.state.orderList);\n        _this2.interval = setTimeout(function () {\n          return $('.paginationTable').DataTable();\n        }, 1000);\n      });\n      var ref = firebase.database().ref(\"orderStatus\");\n      ref.on('value', function (snapshot) {\n        var data = [];\n        snapshot.forEach(function (childSnapShot) {\n          var orderStatus = {\n            categoryId: childSnapShot.key.toString(),\n            orderStatus: childSnapShot.val().orderStatus\n          };\n          data.push(orderStatus);\n        });\n\n        _this2.setState({\n          orderStatusList: data,\n          loading: false\n        });\n\n        console.log(_this2.state.orderStatusList);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.interval);\n    }\n  }, {\n    key: \"handlePageChange\",\n    value: function handlePageChange(pageNumber) {\n      console.log(\"active page is \".concat(pageNumber));\n      this.setState({\n        activePage: pageNumber\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var pathName = this.props.location.pathname;\n      var ordersPath = pathName.substr(8);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Orders\")))))))))), React.createElement(\"div\", {\n        className: \"product-status mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-status-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \" \", ordersPath, \" Orders List\"), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        type: \"date\",\n        onChange: this.dateChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.dateChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }))), \" \", React.createElement(\"button\", {\n        type: \"button\",\n        title: \"download\",\n        className: \"pd-setting-ed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"download excel\"), React.createElement(CSVLink, {\n        data: this.state.orderList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Download me\"), \";\", React.createElement(\"table\", {\n        className: \"table table-bordered paginationTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"S.no\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"CustomerName\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Items(Count)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Order Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.state.orderList && this.state.orderList.map(function (data, index) {\n        var _React$createElement;\n\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, data.customerName && data.customerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, data.orderId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, data.items), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"select\", (_React$createElement = {\n          name: \"select\",\n          className: \"form-control pro-edt-select form-control-primary\"\n        }, _defineProperty(_React$createElement, \"name\", \"orderStatus\"), _defineProperty(_React$createElement, \"value\", data.orderStatus), _defineProperty(_React$createElement, \"id\", data.fireorderId), _defineProperty(_React$createElement, \"data-rid\", data.orderId), _defineProperty(_React$createElement, \"data-email\", data.emailId && data.emailId), _defineProperty(_React$createElement, \"data-name\", data.customerName && data.customerName), _defineProperty(_React$createElement, \"onChange\", _this3.onChange), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"option\", {\n          value: data.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, data.status), _this3.state.orderStatusList.map(function (data, index) {\n          return React.createElement(\"option\", {\n            value: data.orderStatus,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350\n            },\n            __self: this\n          }, data.orderStatus);\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, data.created_on), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/ViewInvoice/\".concat(data.fireorderId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          \"data-toggle\": \"tooltip\",\n          title: \"Edit\",\n          className: \"pd-setting-ed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        })))));\n      }))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OrderListPage;\n}(React.Component);\n\nexport default OrderListPage;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\order_list.js"],"names":["React","Link","FadeIn","axios","HeaderPage","FooterPage","SidebarPage","firebase","moment","CSVLink","CSVDownload","swal","$","DataTable","require","OrderListPage","props","deleteItem","id","console","log","playersRef","database","ref","remove","dateChange","event","setState","target","name","value","onChange","orderId","orderStatusValue","orderRid","getAttribute","emailId","username","title","text","icon","buttons","dangerMode","then","willChange","dbCon","trackingNumber","deliveredBy","headers","user","post","res","update","status","state","orderList","loading","count","activePage","countPage","orderStatusList","validFrom","validTo","bind","pathname","location","pageName","substr","sessionId","sessionStorage","getItem","userRole","orderByChild","equalTo","once","snapshot","data","val","forEach","childSnapShot","Merchants","fireorderId","key","toString","customerName","first_name","last_name","items","cartDataItems","length","created_on","email_id","push","sortedKeys","filter","interval","setTimeout","on","orderStatus","categoryId","clearTimeout","pageNumber","pathName","ordersPath","color","format","map","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport moment from 'moment';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass OrderListPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            orderStatusList: [],\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n        };\r\n        this.deleteItem = this\r\n            .deleteItem\r\n            .bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var pathname = this.props.location.pathname;\r\n\r\n        var pageName = pathname.substr(8);\r\n\r\n        this.setState({loading: true});\r\n        var sessionId = sessionStorage.getItem(\"RoleId\");\r\n        var userRole = sessionStorage.getItem(\"userRole\");\r\n        if (userRole == \"Merchant\") {\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\")\r\n                .orderByChild(\"merchantId\")\r\n                .equalTo(sessionId);\r\n        } else {\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\");\r\n\r\n        }\r\n\r\n        ref.once('value', snapshot => {\r\n            const data = [];\r\n            console.log(snapshot.val());\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const Merchants = {\r\n                    fireorderId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                    orderId: childSnapShot\r\n                        .val()\r\n                        .orderId,\r\n                    customerName: childSnapShot\r\n                        .val()\r\n                        .first_name + \" \" + childSnapShot\r\n                        .val()\r\n                        .last_name,\r\n                    items: childSnapShot\r\n                        .val()\r\n                        .cartDataItems\r\n                        .length,\r\n                    status: childSnapShot\r\n                        .val()\r\n                        .status,\r\n                    created_on: childSnapShot\r\n                        .val()\r\n                        .created_on,\r\n                    emailId: childSnapShot\r\n                        .val()\r\n                        .email_id\r\n                };\r\n\r\n                data.push(Merchants);\r\n            });\r\n            if(pageName!=\"All\"){\r\n                var sortedKeys = data.filter(res => {\r\n                    console.log(res);\r\n    \r\n                    return res.status == pageName;\r\n                });\r\n            }else{\r\n                var sortedKeys = data;\r\n            }\r\n\r\n           \r\n            console.log(sortedKeys);\r\n\r\n            this.setState({orderList: sortedKeys, countPage: data.length, loading: false});\r\n            console.log(this.state.orderList);\r\n             this.interval = setTimeout(() => $('.paginationTable').DataTable(), 1000);\r\n        });\r\n\r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"orderStatus\");\r\n\r\n        ref.on('value', snapshot => {\r\n            const data = [];\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const orderStatus = {\r\n                    categoryId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                    orderStatus: childSnapShot\r\n                        .val()\r\n                        .orderStatus\r\n                };\r\n\r\n                data.push(orderStatus);\r\n            });\r\n\r\n            this.setState({orderStatusList: data, loading: false});\r\n            console.log(this.state.orderStatusList);\r\n        });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        \r\n        clearTimeout(this.interval);\r\n    }\r\n    deleteItem = id => {\r\n\r\n        console.log(id);\r\n        var playersRef = firebase\r\n            .database()\r\n            .ref(`/orders/${id}`);\r\n        playersRef.remove();\r\n\r\n    };\r\n    dateChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    onChange = (event) => {\r\n\r\n        console.log(event.target.value);\r\n        console.log(event.target.id);\r\n        var orderId = event.target.id;\r\n        var orderStatusValue = event.target.value;\r\n        var orderRid = event\r\n            .target\r\n            .getAttribute('data-rid');\r\n        var emailId = event\r\n            .target\r\n            .getAttribute('data-email');\r\n        var name = event\r\n            .target\r\n            .getAttribute('data-name');\r\n        var username = name\r\n            ? name\r\n            : emailId;\r\n\r\n        swal({title: \"Are you sure?\", text: \"Do your really want to  change the status?\", icon: \"warning\", buttons: true, dangerMode: true}).then(willChange => {\r\n            if (willChange) {\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref(`/orders/${orderId}`);\r\n                let trackingNumber = '';\r\n                let deliveredBy = '';\r\n                var headers = {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n\r\n                if (orderStatusValue == 'Dispatched') {\r\n                    trackingNumber = '6245454784';\r\n                    deliveredBy = 'Fedex';\r\n                }\r\n\r\n                let user = {\r\n                    \"orderStatus\": orderStatusValue,\r\n                    \"username\": username,\r\n                    \"to\": emailId,\r\n                    \"orderId\": orderRid,\r\n                    \"trackingNumber\": trackingNumber,\r\n                    \"deliveredBy\": deliveredBy\r\n                };\r\n\r\n                axios\r\n                    .post(`http://testingmadesimple.org/training_app/api/Service/sendEmail`, user, {headers: headers})\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        \r\n                    });\r\n                dbCon.update({status: orderStatusValue});\r\n            } else {\r\n                // window\r\n                //     .location\r\n                //     .reload();\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        console.log(`active page is ${pageNumber}`);\r\n        this.setState({activePage: pageNumber});\r\n    }\r\n    render() {\r\n        const pathName = this.props.location.pathname;\r\n\r\n        const ordersPath = pathName.substr(8);\r\n      \r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Orders</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4> {ordersPath} Orders List</h4>\r\n                                        <div className=\"col-md-6\">\r\n                                       \r\n                                                            {/* <label className=\"col-sm-3 control-label\">From</label> */}\r\n                                                            <div className=\"col-sm-3\">\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                   \r\n                                                                    type=\"date\"\r\n                                                                   \r\n                                                                   \r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                       \r\n                                                      \r\n                                                            {/* <label className=\"col-sm-3 control-label\">To</label> */}\r\n                                                            <div className=\"col-sm-3\">\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                 \r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                       \r\n                                                        </div> <button type=\"button\"  title=\"download\" className=\"pd-setting-ed\">download excel\r\n                                                                         \r\n                                                                         </button>\r\n                                                       \r\n                                        <CSVLink data={this.state.orderList}>Download me</CSVLink>;\r\n\r\n{/* <CSVDownload data={this.state.orderList} target=\"_blank\" />; */}\r\n                                        {/* <div className=\"add-product\">\r\n                            <Link to='/AddMerchantPage'>Add Orders</Link>\r\n                            </div> */}\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                    <th>CustomerName</th>\r\n                                                    <th>Order ID</th>\r\n                                                    <th>Items(Count)</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Order Date</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.orderList && this\r\n                                                    .state\r\n                                                    .orderList\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                {/* <td>{data.customerName ===NaN ?\"\":data.customerName}</td> */}\r\n                                                                <td>{data.customerName && data.customerName}</td>\r\n                                                                <td>{data.orderId}</td>\r\n                                                                <td>{data.items}</td>\r\n                                                                <td>\r\n                                                                    <select\r\n                                                                        name=\"select\"\r\n                                                                        className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                        name=\"orderStatus\"\r\n                                                                        value={data.orderStatus}\r\n                                                                        id={data.fireorderId}\r\n                                                                        data-rid={data.orderId}\r\n                                                                        data-email={data.emailId && data.emailId}\r\n                                                                        data-name={data.customerName && data.customerName}\r\n                                                                        onChange={this.onChange}>\r\n                                                                        <option value={data.status}>{data.status}</option>\r\n                                                                        {this\r\n                                                                            .state\r\n                                                                            .orderStatusList\r\n                                                                            .map((data, index) => {\r\n\r\n                                                                                return (\r\n                                                                                    <option value={data.orderStatus} key={index}>{data.orderStatus}</option>\r\n                                                                                )\r\n\r\n                                                                            })}\r\n\r\n                                                                    </select>\r\n\r\n                                                                </td>\r\n\r\n                                                                <td>{data.created_on}</td>\r\n\r\n                                                                <td>\r\n                                                                    {/* <button data-toggle=\"tooltip\" title=\"View\" className=\"pd-setting-ed\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></button> */}\r\n\r\n                                                                    <Link to={`/ViewInvoice/${data.fireorderId}`}>\r\n                                                                        <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n                                                                            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                                                        </button>\r\n                                                                    </Link>\r\n\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        {/* <div className=\"custom-pagination\">\r\n\r\n                                 <Pagination\r\n                          hideNavigation\r\n                          activePage={this.state.activePage}\r\n                          itemsCountPerPage={10}\r\n                          totalItemsCount={this.state.countPage}\r\n                          pageRangeDisplayed={50}\r\n                          onChange={this.handlePageChange.bind(this)}\r\n                        />\r\n                            </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderListPage;\r\n"]},"metadata":{},"sourceType":"module"}