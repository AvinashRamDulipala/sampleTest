{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\order_list.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FadeIn from \"react-fade-in\";\nimport axios from \"axios\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport swal from 'sweetalert';\nimport $ from 'jquery';\n$.DataTable = require('datatables.net');\nvar webUrl = window.location.origin;\n\nvar OrderListPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderListPage, _React$Component);\n\n  function OrderListPage(props) {\n    var _this;\n\n    _classCallCheck(this, OrderListPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(OrderListPage).call(this, props));\n\n    _this.deleteItem = function (id) {\n      var playersRef = firebase.database().ref(\"/orders/\".concat(id));\n      playersRef.remove();\n    };\n\n    _this.orderSuccess = function (event) {\n      var formData = new FormData();\n      formData.append(\"mobile\", sessionStorage.getItem(\"contact_number\"));\n      formData.append(\"message\", \"Congratulations! Successfully you have placed an order +\" + \" With gootes.+\" + \" For more information about your order, please do track From gootes app+\" + \" Thanks & regards +\" + \" GOOTES TEAM\");\n      var url = 'https://www.idlimachine.com/api/service/sendSMS';\n      axios(url, {\n        method: 'POST',\n        data: formData,\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.status === 200) {\n          _this.props.history.push(\"/MyOrders\");\n        }\n      });\n    };\n\n    _this.dateChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onChange = function (event) {\n      var orderId = event.target.id;\n      var orderStatusValue = event.target.value;\n      var orderRid = event.target.getAttribute('data-rid');\n      var emailId = event.target.getAttribute('data-email');\n      var name = event.target.getAttribute('data-name');\n      var username = name ? name : emailId;\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do your really want to  change the status?\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willChange) {\n        if (willChange) {\n          var dbCon = firebase.database().ref(\"/orders/\".concat(orderId));\n          var trackingNumber = '';\n          var deliveredBy = '';\n          var headers = {\n            'Content-Type': 'application/json'\n          };\n\n          if (orderStatusValue == 'Dispatched') {\n            trackingNumber = '6245454784';\n            deliveredBy = 'Fedex';\n          } // let user = {\n          //     \"orderStatus\": orderStatusValue,\n          //     \"username\": username,\n          //     \"to\": emailId,\n          //     \"orderId\": orderRid,\n          //     \"trackingNumber\": trackingNumber,\n          //     \"deliveredBy\": deliveredBy\n          // };\n          // var message = \"Dear \"+ username+\", Thank you for your business.Order Number : \"+ orderRid+\" Your Gootes Order is \"+ orderStatusValue+\" for shipping. CheersTeam Gootes\"\n\n\n          var message = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> <html xmlns=\"http://www.w3.org/1999/xhtml\">' + '<head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> <title>Gootes</title> </head> ' + '<body style=\"background:#ebe8dd; width: 600px; margin: 0px auto;\"> ' + '<table style=\"width:100%\"> <tr> <td width=\"75%\" style=\"color:#57706d; font-size:28px; font-family:arial; text-align:center; padding-bottom:30px; padding-top:20px; letter-spacing: 2px;\"> ' + ' Thanks for shopping <br> width gootes </td> <td width=\"25%\" style=\"padding-bottom:40px;\">&nbsp;</td> </tr> <tr> <td width=\"75%\" style=\"    color: #ff914d;    font-size: 23px;    font-family: arial;    font-weight: 800;    text-align: center;    line-height: 1.5;    letter-spacing: 1.5px;    padding-bottom:30px;\">' + 'YOUR ORDER GETTING READY<br> TO  ' + orderStatusValue + ' WE WILL KEEP<br> YOU UPDATED ABOUT YOUR<br>ORDER </td> <td width=\"25%\" style=\"padding-bottom:30px;\"><img src=\"' + webUrl + '/img/cart_icon.png\" width=\"150px\" style=\"position: relative;    top: -70px;\"></td>' + '</tr> <tr> <td width=\"75%\" style=\"    color: #57706d;    font-size: 18px;    font-family: arial;    font-weight: 600;    text-align: center;    line-height: 1.5;    letter-spacing: 2px; padding-bottom:30px;\">' + 'Your order number: ' + orderRid + '<br> For more informaion about your order<br> please do track from gootes app </td> <td width=\"25%\" style=\"padding-bottom:30px; text-align:right;\"><img src=\"' + webUrl + '/img/delivey_icon.png\" style=\"position: relative;    top: -60px;\"></td> </tr> </table> ' + '<p style=\"padding-bottom:30px;\"><img src=\"' + webUrl + '/img/logo.png\"></p> <p style=\"color:#aba174; font-size:14px; font-family:arial; font-weight: 600; letter-spacing: 1.5px; text-align:right; padding-bottom:30px;\">TERMS & CONDITIONS APPLY.</p> </body> </html>';\n          var data = {\n            \"subject\": \"Gootes  Order \" + orderRid + \" in  \" + orderStatusValue,\n            \"message\": message,\n            \"to\": emailId,\n            \"username\": username\n          };\n          var url = 'https://www.gootes.com/api/services/sendEmail';\n          axios(url, {\n            method: 'POST',\n            data: data,\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          }).then(function (res) {\n            console.log(res);\n            dbCon.update({\n              status: orderStatusValue\n            });\n\n            _this.orderSuccess();\n          });\n        } else {}\n      });\n    };\n\n    _this.deliverytAssignTo = function (event) {\n      var orderId = event.target.id;\n      var orderStatusValue = event.target.value;\n      var orderRid = event.target.getAttribute('data-rid');\n      var emailId = event.target.getAttribute('data-email');\n      var name = event.target.getAttribute('data-name');\n      var username = name ? name : emailId;\n      swal({\n        title: \"Are you sure?\",\n        text: \"Do your really want to  change the Assign To Delivery Boy?\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willChange) {\n        if (willChange) {\n          var dbCon = firebase.database().ref(\"/orders/\".concat(orderId));\n          dbCon.update({\n            assignTo: orderStatusValue\n          }); // var message = \"Dear \"+ username+\", Thank you for your business.Order Number : \"+ orderRid+\" Your Gootes Order is \"+ orderStatusValue+\" for shipping. CheersTeam Gootes\"\n          //     var message = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> <html xmlns=\"http://www.w3.org/1999/xhtml\">'+\n          //     '<head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> <title>Gootes</title> </head> '+\n          //    '<body style=\"background:#ebe8dd; width: 600px; margin: 0px auto;\"> '+\n          //     '<table style=\"width:100%\"> <tr> <td width=\"75%\" style=\"color:#57706d; font-size:28px; font-family:arial; text-align:center; padding-bottom:30px; padding-top:20px; letter-spacing: 2px;\"> '+\n          //    ' Thanks for shopping <br> width gootes </td> <td width=\"25%\" style=\"padding-bottom:40px;\">&nbsp;</td> </tr> <tr> <td width=\"75%\" style=\"    color: #ff914d;    font-size: 23px;    font-family: arial;    font-weight: 800;    text-align: center;    line-height: 1.5;    letter-spacing: 1.5px;    padding-bottom:30px;\">'+\n          //    'YOUR ORDER GETTING READY<br> TO  '+ orderStatusValue+' WE WILL KEEP<br> YOU UPDATED ABOUT YOUR<br>ORDER </td> <td width=\"25%\" style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/cart_icon.png\" width=\"150px\" style=\"position: relative;    top: -70px;\"></td>'+\n          //     '</tr> <tr> <td width=\"75%\" style=\"    color: #57706d;    font-size: 18px;    font-family: arial;    font-weight: 600;    text-align: center;    line-height: 1.5;    letter-spacing: 2px; padding-bottom:30px;\">'+\n          //   'Your order number: '+ orderRid+'<br> For more informaion about your order<br> please do track from gootes app </td> <td width=\"25%\" style=\"padding-bottom:30px; text-align:right;\"><img src=\"'+webUrl+'/img/delivey_icon.png\" style=\"position: relative;    top: -60px;\"></td> </tr> </table> '+\n          //   '<p style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/logo.png\"></p> <p style=\"color:#aba174; font-size:14px; font-family:arial; font-weight: 600; letter-spacing: 1.5px; text-align:right; padding-bottom:30px;\">TERMs & CONDITIONS APPLY.</p> </body> </html>'\n          //     let data = {\n          //                 \"subject\": \"Gootes  Order \"+ orderRid+\" in  \"+ orderStatusValue,\n          //                 \"message\":message,\n          //                 \"to\": emailId,\n          //                 \"username\": username,\n          //             };\n          //             const url = 'https://www.gootes.com/api/services/sendEmail';\n          //             axios(url, {\n          //                 method: 'POST',\n          //                 data: data,\n          //                 headers: {\n          //                     \"Content-type\": \"application/json; charset=UTF-8\"\n          //                 }\n          //             }).then((res) =>{\n          //                 console.log(res);\n          //             dbCon.update({assignTo: orderStatusValue});\n          //             })\n        } else {}\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var validFrom = new Date(_this.state.validFrom).toLocaleString();\n        var validTo = new Date(_this.state.validTo).toLocaleString();\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"created_on\").startAt(validFrom).endAt(validTo);\n        ref.once('value', function (snapshot) {\n          console.log(snapshot.val());\n\n          if (snapshot.val() == null || snapshot.val() == '') {\n            _this.setState({\n              employer_sevice_message: \"No records are found\"\n            });\n          } else {\n            var data = [];\n            var i = 1;\n            snapshot.forEach(function (childSnapShot) {\n              var Merchants = {\n                Sno: i++,\n                orderId: childSnapShot.val().orderId,\n                customerName: childSnapShot.val().first_name + \" \" + childSnapShot.val().last_name,\n                items: childSnapShot.val().cartDataItems.length,\n                totalAmount: childSnapShot.val().totalAmount,\n                status: childSnapShot.val().status,\n                order_on: childSnapShot.val().created_on,\n                emailId: childSnapShot.val().email_id\n              };\n              data.push(Merchants);\n            });\n\n            _this.setState({\n              orderDateList: data,\n              loading: false,\n              validFrom: '',\n              validTo: ''\n            });\n\n            _this.csvLink.link.click();\n          }\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      orderList: [],\n      loading: false,\n      count: 1,\n      activePage: \"1\",\n      countPage: \"\",\n      orderStatusList: [],\n      validFrom: \"\",\n      validTo: \"\",\n      orderDateList: [],\n      deliveryList: [],\n      employer_sevice_message: ''\n    };\n    _this.deleteItem = _this.deleteItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(OrderListPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pathname = this.props.location.pathname;\n      var pageName = pathname.substr(8);\n      this.setState({\n        loading: true\n      });\n      var sessionId = sessionStorage.getItem(\"RoleId\");\n      var userRole = sessionStorage.getItem(\"userRole\");\n\n      if (userRole == \"Merchant\") {\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"merchantId\").equalTo(sessionId);\n      } else if (userRole == \"Delivery Boy\") {\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"assignTo\").equalTo(sessionId);\n      } else {\n        var ref = firebase.database().ref(\"orders/\");\n      }\n\n      ref.once('value', function (snapshot) {\n        var data = [];\n        snapshot.forEach(function (childSnapShot) {\n          var Merchants = {\n            fireorderId: childSnapShot.key.toString(),\n            orderId: childSnapShot.val().orderId,\n            customerName: childSnapShot.val().first_name + \"\" + childSnapShot.val().last_name,\n            items: childSnapShot.val().cartDataItems.length,\n            totalcart: childSnapShot.val().totalAmount,\n            status: childSnapShot.val().status,\n            assignTo: childSnapShot.val().assignTo,\n            created_on: childSnapShot.val().created_on,\n            emailId: childSnapShot.val().email_id\n          };\n          data.unshift(Merchants);\n        });\n\n        if (pageName != \"All\") {\n          var sortedKeys = data.filter(function (res) {\n            return res.status == pageName;\n          });\n        } else {\n          var sortedKeys = data;\n        }\n\n        _this2.setState({\n          orderList: sortedKeys,\n          countPage: data.length,\n          loading: false\n        });\n\n        _this2.interval = setTimeout(function () {\n          return $('.paginationTable').DataTable();\n        }, 1000);\n      });\n      var ref = firebase.database().ref(\"orderStatus\");\n      ref.on('value', function (snapshot) {\n        var data = [];\n        snapshot.forEach(function (childSnapShot) {\n          var orderStatus = {\n            categoryId: childSnapShot.key.toString(),\n            orderStatus: childSnapShot.val().orderStatus\n          };\n          data.push(orderStatus);\n        });\n\n        _this2.setState({\n          orderStatusList: data,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var ref = firebase.database().ref(\"admin_users\").orderByChild(\"Role\").equalTo(\"Delivery Boy\");\n      ref.on('value', function (snapshot) {\n        var data = [];\n        snapshot.forEach(function (childSnapShot) {\n          var orderStatus = _defineProperty({\n            userId: childSnapShot.key.toString(),\n            fullName: childSnapShot.val().fullName,\n            email: childSnapShot.val().email\n          }, \"email\", childSnapShot.val().email);\n\n          data.push(orderStatus);\n        });\n\n        _this3.setState({\n          deliveryList: data,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var pathName = this.props.location.pathname;\n      var ordersPath = pathName.substr(8); // console.log(window.location.origin);\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Orders\")))))))))), React.createElement(\"div\", {\n        className: \"product-status mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-status-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, ordersPath, \"\\xA0 Orders List\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        min: moment().format(\"2019-06-01\"),\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        onChange: this.dateChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }))), this.validator.message(\"Valid From\", this.state.validFrom, \"required\"))), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.dateChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }))), this.validator.message(\"Valid To\", this.state.validTo, \"required\")))), this.state.employer_sevice_message ? React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, this.state.employer_sevice_message) : \"\", \" \"), React.createElement(\"div\", {\n        className: \"col-sm-6 pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        title: \"download\",\n        className: \"pd-setting-ed mrg_top\",\n        style: {\n          marginTop: \"28px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, \"Export to excel\"))), React.createElement(CSVLink, {\n        data: this.state.orderDateList,\n        ref: function ref(r) {\n          return _this4.csvLink = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-bordered paginationTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"S.no\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, \"Customer Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"Items\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, \"Grand Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Status\"), sessionStorage.getItem(\"userRole\") == \"Admin\" || sessionStorage.getItem(\"userRole\") == \"Super Admin\" ? React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"Assign to\") : '', React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, \"Order Date\"), sessionStorage.getItem(\"userRole\") == \"Admin\" || sessionStorage.getItem(\"userRole\") == \"Super Admin\" ? React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"Action\") : '')), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, this.state.orderList && this.state.orderList.map(function (data, index) {\n        var _React$createElement;\n\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614\n          },\n          __self: this\n        }, data.customerName && data.customerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615\n          },\n          __self: this\n        }, data.orderId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616\n          },\n          __self: this\n        }, data.items), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617\n          },\n          __self: this\n        }, data.totalcart), sessionStorage.getItem(\"userRole\") == \"Admin\" || sessionStorage.getItem(\"userRole\") == \"Super Admin\" || sessionStorage.getItem(\"userRole\") == \"Delivery Boy\" ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 619\n          },\n          __self: this\n        }, React.createElement(\"select\", (_React$createElement = {\n          name: \"select\",\n          className: \"form-control pro-edt-select form-control-primary\"\n        }, _defineProperty(_React$createElement, \"name\", \"orderStatus\"), _defineProperty(_React$createElement, \"defaultValue\", data.status), _defineProperty(_React$createElement, \"id\", data.fireorderId), _defineProperty(_React$createElement, \"data-rid\", data.orderId), _defineProperty(_React$createElement, \"data-email\", data.emailId && data.emailId), _defineProperty(_React$createElement, \"data-name\", data.customerName && data.customerName), _defineProperty(_React$createElement, \"onChange\", _this4.onChange), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630\n          },\n          __self: this\n        }, \"selected\"), sessionStorage.getItem(\"userRole\") == \"Delivery Boy\" ? React.createElement(\"option\", {\n          value: \"Delivered\",\n          selected: data.status == \"Delivered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633\n          },\n          __self: this\n        }, \"Delivered\") : _this4.state.orderStatusList.map(function (data1, index) {\n          return React.createElement(\"option\", {\n            value: data1.orderStatus,\n            key: index,\n            selected: data.status == data1.orderStatus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 641\n            },\n            __self: this\n          }, data1.orderStatus);\n        }))) : React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648\n          },\n          __self: this\n        }, data.status), sessionStorage.getItem(\"userRole\") == \"Admin\" || sessionStorage.getItem(\"userRole\") == \"Super Admin\" ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          className: \"form-control pro-edt-select form-control-primary\",\n          name: \"assignTo\",\n          id: data.fireorderId,\n          \"data-rid\": data.orderId,\n          \"data-email\": data.emailId && data.emailId,\n          \"data-name\": data.customerName && data.customerName,\n          onChange: _this4.deliverytAssignTo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660\n          },\n          __self: this\n        }, \"selected\"), _this4.state.deliveryList.map(function (data1, index) {\n          return React.createElement(\"option\", {\n            value: data1.userId,\n            key: index,\n            selected: data.assignTo == data1.userId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 668\n            },\n            __self: this\n          }, data1.fullName);\n        }))) : '', React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677\n          },\n          __self: this\n        }, data.created_on), sessionStorage.getItem(\"userRole\") == \"Admin\" || sessionStorage.getItem(\"userRole\") == \"Super Admin\" ? React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 680\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/ViewInvoice/\".concat(data.fireorderId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          \"data-toggle\": \"tooltip\",\n          title: \"Edit\",\n          className: \"pd-setting-ed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685\n          },\n          __self: this\n        })))) : '');\n      }))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return OrderListPage;\n}(React.Component);\n\nexport default OrderListPage;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\order_list.js"],"names":["React","Link","FadeIn","axios","HeaderPage","FooterPage","SidebarPage","firebase","moment","CSVLink","CSVDownload","SimpleReactValidator","swal","$","DataTable","require","webUrl","window","location","origin","OrderListPage","props","deleteItem","id","playersRef","database","ref","remove","orderSuccess","event","formData","FormData","append","sessionStorage","getItem","url","method","data","headers","then","res","console","log","status","history","push","dateChange","setState","target","name","value","onChange","orderId","orderStatusValue","orderRid","getAttribute","emailId","username","title","text","icon","buttons","dangerMode","willChange","dbCon","trackingNumber","deliveredBy","message","update","deliverytAssignTo","assignTo","handleSubmit","preventDefault","validator","allValid","validFrom","Date","state","toLocaleString","validTo","orderByChild","startAt","endAt","once","snapshot","val","employer_sevice_message","i","forEach","childSnapShot","Merchants","Sno","customerName","first_name","last_name","items","cartDataItems","length","totalAmount","order_on","created_on","email_id","orderDateList","loading","csvLink","link","click","showMessages","forceUpdate","orderList","count","activePage","countPage","orderStatusList","deliveryList","bind","className","validators","whitespace","rule","params","helpers","testRegex","indexOf","specialChar","specialCharText","pathname","pageName","substr","sessionId","userRole","equalTo","fireorderId","key","toString","totalcart","unshift","sortedKeys","filter","interval","setTimeout","on","orderStatus","categoryId","userId","fullName","email","clearTimeout","pathName","ordersPath","format","marginTop","r","map","index","data1","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport moment from 'moment';\r\nimport {CSVLink, CSVDownload} from \"react-csv\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\n\r\n$.DataTable = require('datatables.net');\r\n const webUrl = window.location.origin;\r\nclass OrderListPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            orderStatusList: [],\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            orderDateList: [],\r\n            deliveryList:[],\r\n            employer_sevice_message:''\r\n        };\r\n        this.deleteItem = this\r\n            .deleteItem\r\n            .bind(this);\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var pathname = this.props.location.pathname;\r\n\r\n        var pageName = pathname.substr(8);\r\n\r\n        this.setState({loading: true});\r\n        var sessionId = sessionStorage.getItem(\"RoleId\");\r\n        var userRole = sessionStorage.getItem(\"userRole\");\r\n        if (userRole == \"Merchant\") {\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\")\r\n                .orderByChild(\"merchantId\")\r\n                .equalTo(sessionId);\r\n        } else if(userRole == \"Delivery Boy\") {\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\").orderByChild(\"assignTo\")\r\n                .equalTo(sessionId);\r\n\r\n        }else{\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\");\r\n\r\n        }\r\n\r\n        ref.once('value', snapshot => {\r\n            const data = [];\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const Merchants = {\r\n                    fireorderId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                    orderId: childSnapShot\r\n                        .val()\r\n                        .orderId,\r\n                    customerName: childSnapShot\r\n                        .val()\r\n                        .first_name + \"\" + childSnapShot\r\n                        .val()\r\n                        .last_name,\r\n                    items: childSnapShot\r\n                        .val()\r\n                        .cartDataItems\r\n                        .length,\r\n                    totalcart: childSnapShot\r\n                        .val()\r\n                        .totalAmount,\r\n                    status: childSnapShot\r\n                        .val()\r\n                        .status,\r\n                        assignTo:childSnapShot\r\n                        .val()\r\n                        .assignTo,\r\n                    created_on: childSnapShot\r\n                        .val()\r\n                        .created_on,\r\n                    emailId: childSnapShot\r\n                        .val()\r\n                        .email_id\r\n                };\r\n\r\n                data.unshift(Merchants);\r\n            });\r\n            if (pageName != \"All\") {\r\n                var sortedKeys = data.filter(res => {\r\n\r\n                    return res.status == pageName;\r\n                });\r\n            } else {\r\n                var sortedKeys = data;\r\n            }\r\n\r\n            this.setState({orderList: sortedKeys, countPage: data.length, loading: false});\r\n\r\n            this.interval = setTimeout(() => $('.paginationTable').DataTable(), 1000);\r\n        });\r\n\r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"orderStatus\");\r\n\r\n        ref.on('value', snapshot => {\r\n            const data = [];\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const orderStatus = {\r\n                    categoryId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                    orderStatus: childSnapShot\r\n                        .val()\r\n                        .orderStatus\r\n                };\r\n\r\n                data.push(orderStatus);\r\n            });\r\n\r\n            this.setState({orderStatusList: data, loading: false});\r\n\r\n        });\r\n\r\n    }\r\n    componentWillMount(){\r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"admin_users\").orderByChild(\"Role\").equalTo(\"Delivery Boy\");\r\n\r\n        ref.on('value', snapshot => {\r\n            const data = [];\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const orderStatus = {\r\n                    userId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                        fullName: childSnapShot\r\n                        .val()\r\n                        .fullName,\r\n                        email: childSnapShot\r\n                        .val()\r\n                        .email,\r\n                        email: childSnapShot\r\n                        .val()\r\n                        .email\r\n                };\r\n\r\n                data.push(orderStatus);\r\n            });\r\n\r\n            this.setState({deliveryList: data, loading: false});\r\n\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n\r\n        clearTimeout(this.interval);\r\n    }\r\n    deleteItem = id => {\r\n\r\n        var playersRef = firebase\r\n            .database()\r\n            .ref(`/orders/${id}`);\r\n        playersRef.remove();\r\n\r\n    };\r\n    orderSuccess= (event) => {\r\n        const formData = new FormData();\r\n                formData.append(\"mobile\", sessionStorage.getItem(\"contact_number\"));\r\n                formData.append(\"message\", \"Congratulations! Successfully you have placed an order +\"\r\n                +\" With gootes.+\"\r\n                +\" For more information about your order, please do track From gootes app+\"\r\n                +\" Thanks & regards +\"\r\n                +\" GOOTES TEAM\");\r\n        \r\n        \r\n        const url = 'https://www.idlimachine.com/api/service/sendSMS';\r\n        axios(url, {\r\n            method: 'POST',\r\n            data: formData,\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then((res) =>{\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                this.props.history.push(\"/MyOrders\");\r\n            }\r\n           \r\n        })\r\n      }\r\n    dateChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    onChange = (event) => {\r\n\r\n        var orderId = event.target.id;\r\n        var orderStatusValue = event.target.value;\r\n        var orderRid = event\r\n            .target\r\n            .getAttribute('data-rid');\r\n        var emailId = event\r\n            .target\r\n            .getAttribute('data-email');\r\n        var name = event\r\n            .target\r\n            .getAttribute('data-name');\r\n        var username = name\r\n            ? name\r\n            : emailId;\r\n\r\n        swal({title: \"Are you sure?\", text: \"Do your really want to  change the status?\", icon: \"warning\", buttons: true, dangerMode: true}).then(willChange => {\r\n            if (willChange) {\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref(`/orders/${orderId}`);\r\n                let trackingNumber = '';\r\n                let deliveredBy = '';\r\n                var headers = {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n\r\n                if (orderStatusValue == 'Dispatched') {\r\n                    trackingNumber = '6245454784';\r\n                    deliveredBy = 'Fedex';\r\n                }\r\n\r\n                // let user = {\r\n                //     \"orderStatus\": orderStatusValue,\r\n                //     \"username\": username,\r\n                //     \"to\": emailId,\r\n                //     \"orderId\": orderRid,\r\n                //     \"trackingNumber\": trackingNumber,\r\n                //     \"deliveredBy\": deliveredBy\r\n                // };\r\n        // var message = \"Dear \"+ username+\", Thank you for your business.Order Number : \"+ orderRid+\" Your Gootes Order is \"+ orderStatusValue+\" for shipping. CheersTeam Gootes\"\r\n        var message = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> <html xmlns=\"http://www.w3.org/1999/xhtml\">'+\r\n        '<head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> <title>Gootes</title> </head> '+\r\n       '<body style=\"background:#ebe8dd; width: 600px; margin: 0px auto;\"> '+\r\n        '<table style=\"width:100%\"> <tr> <td width=\"75%\" style=\"color:#57706d; font-size:28px; font-family:arial; text-align:center; padding-bottom:30px; padding-top:20px; letter-spacing: 2px;\"> '+\r\n       ' Thanks for shopping <br> width gootes </td> <td width=\"25%\" style=\"padding-bottom:40px;\">&nbsp;</td> </tr> <tr> <td width=\"75%\" style=\"    color: #ff914d;    font-size: 23px;    font-family: arial;    font-weight: 800;    text-align: center;    line-height: 1.5;    letter-spacing: 1.5px;    padding-bottom:30px;\">'+\r\n       'YOUR ORDER GETTING READY<br> TO  '+ orderStatusValue+' WE WILL KEEP<br> YOU UPDATED ABOUT YOUR<br>ORDER </td> <td width=\"25%\" style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/cart_icon.png\" width=\"150px\" style=\"position: relative;    top: -70px;\"></td>'+\r\n        '</tr> <tr> <td width=\"75%\" style=\"    color: #57706d;    font-size: 18px;    font-family: arial;    font-weight: 600;    text-align: center;    line-height: 1.5;    letter-spacing: 2px; padding-bottom:30px;\">'+\r\n      'Your order number: '+ orderRid+'<br> For more informaion about your order<br> please do track from gootes app </td> <td width=\"25%\" style=\"padding-bottom:30px; text-align:right;\"><img src=\"'+webUrl+'/img/delivey_icon.png\" style=\"position: relative;    top: -60px;\"></td> </tr> </table> '+\r\n      '<p style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/logo.png\"></p> <p style=\"color:#aba174; font-size:14px; font-family:arial; font-weight: 600; letter-spacing: 1.5px; text-align:right; padding-bottom:30px;\">TERMS & CONDITIONS APPLY.</p> </body> </html>'\r\n\r\n  let data = {\r\n\r\n                    \"subject\": \"Gootes  Order \"+ orderRid+\" in  \"+ orderStatusValue,\r\n                    \"message\":message,\r\n                    \"to\": emailId,\r\n                    \"username\": username,\r\n                   \r\n                };\r\n                const url = 'https://www.gootes.com/api/services/sendEmail';\r\n                axios(url, {\r\n                    method: 'POST',\r\n                    data: data,\r\n                    headers: {\r\n                        \"Content-type\": \"application/json; charset=UTF-8\"\r\n                    }\r\n                }).then((res) =>{\r\n                    console.log(res);\r\n                dbCon.update({status: orderStatusValue});\r\n                this.orderSuccess();\r\n                })\r\n            } else {} \r\n        });\r\n    }\r\n    deliverytAssignTo = (event) => {\r\n\r\n        var orderId = event.target.id;\r\n        var orderStatusValue = event.target.value;\r\n        var orderRid = event\r\n            .target\r\n            .getAttribute('data-rid');\r\n        var emailId = event\r\n            .target\r\n            .getAttribute('data-email');\r\n        var name = event\r\n            .target\r\n            .getAttribute('data-name');\r\n        var username = name\r\n            ? name\r\n            : emailId;\r\n\r\n        swal({title: \"Are you sure?\", text: \"Do your really want to  change the Assign To Delivery Boy?\", icon: \"warning\", buttons: true, dangerMode: true}).then(willChange => {\r\n            if (willChange) {\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref(`/orders/${orderId}`);\r\n                    dbCon.update({assignTo: orderStatusValue});\r\n            \r\n\r\n               \r\n       // var message = \"Dear \"+ username+\", Thank you for your business.Order Number : \"+ orderRid+\" Your Gootes Order is \"+ orderStatusValue+\" for shipping. CheersTeam Gootes\"\r\n    //     var message = '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> <html xmlns=\"http://www.w3.org/1999/xhtml\">'+\r\n    //     '<head> <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /> <title>Gootes</title> </head> '+\r\n    //    '<body style=\"background:#ebe8dd; width: 600px; margin: 0px auto;\"> '+\r\n    //     '<table style=\"width:100%\"> <tr> <td width=\"75%\" style=\"color:#57706d; font-size:28px; font-family:arial; text-align:center; padding-bottom:30px; padding-top:20px; letter-spacing: 2px;\"> '+\r\n    //    ' Thanks for shopping <br> width gootes </td> <td width=\"25%\" style=\"padding-bottom:40px;\">&nbsp;</td> </tr> <tr> <td width=\"75%\" style=\"    color: #ff914d;    font-size: 23px;    font-family: arial;    font-weight: 800;    text-align: center;    line-height: 1.5;    letter-spacing: 1.5px;    padding-bottom:30px;\">'+\r\n    //    'YOUR ORDER GETTING READY<br> TO  '+ orderStatusValue+' WE WILL KEEP<br> YOU UPDATED ABOUT YOUR<br>ORDER </td> <td width=\"25%\" style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/cart_icon.png\" width=\"150px\" style=\"position: relative;    top: -70px;\"></td>'+\r\n    //     '</tr> <tr> <td width=\"75%\" style=\"    color: #57706d;    font-size: 18px;    font-family: arial;    font-weight: 600;    text-align: center;    line-height: 1.5;    letter-spacing: 2px; padding-bottom:30px;\">'+\r\n    //   'Your order number: '+ orderRid+'<br> For more informaion about your order<br> please do track from gootes app </td> <td width=\"25%\" style=\"padding-bottom:30px; text-align:right;\"><img src=\"'+webUrl+'/img/delivey_icon.png\" style=\"position: relative;    top: -60px;\"></td> </tr> </table> '+\r\n    //   '<p style=\"padding-bottom:30px;\"><img src=\"'+webUrl+'/img/logo.png\"></p> <p style=\"color:#aba174; font-size:14px; font-family:arial; font-weight: 600; letter-spacing: 1.5px; text-align:right; padding-bottom:30px;\">TERMs & CONDITIONS APPLY.</p> </body> </html>'\r\n\r\n\r\n        \r\n    //     let data = {\r\n\r\n    //                 \"subject\": \"Gootes  Order \"+ orderRid+\" in  \"+ orderStatusValue,\r\n    //                 \"message\":message,\r\n    //                 \"to\": emailId,\r\n    //                 \"username\": username,\r\n                   \r\n    //             };\r\n    //             const url = 'https://www.gootes.com/api/services/sendEmail';\r\n    //             axios(url, {\r\n    //                 method: 'POST',\r\n    //                 data: data,\r\n    //                 headers: {\r\n    //                     \"Content-type\": \"application/json; charset=UTF-8\"\r\n    //                 }\r\n    //             }).then((res) =>{\r\n    //                 console.log(res);\r\n    //             dbCon.update({assignTo: orderStatusValue});\r\n    //             })\r\n            } else {} \r\n        });\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            var validFrom = new Date(this.state.validFrom).toLocaleString();\r\n            var validTo = new Date(this.state.validTo).toLocaleString();\r\n\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\")\r\n                .orderByChild(\"created_on\")\r\n                .startAt(validFrom)\r\n                .endAt(validTo);\r\n\r\n            ref.once('value', snapshot => {\r\n\r\n\r\n                console.log(snapshot.val());\r\n\r\n                if(snapshot.val()==null||snapshot.val()==''){\r\n\r\n                    this.setState({employer_sevice_message: \"No records are found\"});\r\n\r\n                }else{\r\n\r\n                const data = [];\r\n\r\n                var i = 1;\r\n                snapshot.forEach(childSnapShot => {\r\n\r\n                    const Merchants = {\r\n                        Sno: i++,\r\n                        orderId: childSnapShot\r\n                            .val()\r\n                            .orderId,\r\n                        customerName: childSnapShot\r\n                            .val()\r\n                            .first_name + \" \" + childSnapShot\r\n                            .val()\r\n                            .last_name,\r\n                        items: childSnapShot\r\n                            .val()\r\n                            .cartDataItems\r\n                            .length,\r\n                        totalAmount: childSnapShot\r\n                            .val()\r\n                            .totalAmount,\r\n                        status: childSnapShot\r\n                            .val()\r\n                            .status,\r\n                        order_on: childSnapShot\r\n                            .val()\r\n                            .created_on,\r\n                        emailId: childSnapShot\r\n                            .val()\r\n                            .email_id\r\n                    };\r\n\r\n                    data.push(Merchants);\r\n                });\r\n                this.setState({orderDateList: data, loading: false,validFrom:'',validTo:''});\r\n                this\r\n                .csvLink\r\n                .link\r\n                .click();\r\n            \r\n            }\r\n                \r\n\r\n            });\r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n    render() {\r\n        const pathName = this.props.location.pathname;\r\n\r\n        const ordersPath = pathName.substr(8);\r\n// console.log(window.location.origin);\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Orders</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4>\r\n                                            {ordersPath}&nbsp;\r\n                                            Orders List</h4>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className='col-sm-6'>\r\n                                                <div className=\"row\">\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>From</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    min={moment().format(\"2019-06-01\")}\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid From\", this.state.validFrom, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>To</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid To\", this.state.validTo, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                {this.state.employer_sevice_message\r\n                                            ? (\r\n                                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                                    {this.state.employer_sevice_message}\r\n                                                </div>\r\n                                            )\r\n                                            : (\"\")}{\" \"}\r\n                                            </div>\r\n                                            <div className='col-sm-6 pull-right'>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={this.handleSubmit}\r\n                                                    title=\"download\"\r\n                                                    className=\"pd-setting-ed mrg_top\"\r\n                                                    style={{\r\n                                                    marginTop: \"28px\"\r\n                                                }}>\r\n                                                    Export to excel\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <CSVLink data={this.state.orderDateList} ref={(r) => this.csvLink = r}></CSVLink>\r\n\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                    <th>Customer Name</th>\r\n                                                    <th>Order ID</th>\r\n                                                    <th>Items</th>\r\n                                                    <th >Grand Total\r\n                                                    </th>\r\n                                                    <th>Status</th>\r\n                                                    {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"\r\n                                                                    ? <th>Assign to</th>:''}\r\n                                                    <th>Order Date</th>\r\n                                                    {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"\r\n                                                                    ? <th>Action</th>:''}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.orderList && this\r\n                                                    .state\r\n                                                    .orderList\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                {/* <td>{data.customerName ===NaN ?\"\":data.customerName}</td> */}\r\n                                                                <td>{data.customerName && data.customerName}</td>\r\n                                                                <td>{data.orderId}</td>\r\n                                                                <td>{data.items}</td>\r\n                                                                <td>{data.totalcart}</td>\r\n                                                                {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"||sessionStorage.getItem(\"userRole\") == \"Delivery Boy\"\r\n                                                                    ?   <td>\r\n                                                                    <select\r\n                                                                        name=\"select\"\r\n                                                                        className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                        name=\"orderStatus\"\r\n                                                                        defaultValue={data.status}\r\n                                                                        id={data.fireorderId}\r\n                                                                        data-rid={data.orderId}\r\n                                                                        data-email={data.emailId && data.emailId}\r\n                                                                        data-name={data.customerName && data.customerName}\r\n                                                                        onChange={this.onChange}>\r\n                                                                             <option >selected</option> \r\n                                                                        {sessionStorage.getItem(\"userRole\") == \"Delivery Boy\"\r\n                                                                                ?\r\n                                                                                <option value=\"Delivered\" selected={data.status == \"Delivered\"}>Delivered</option>\r\n                                                                              \r\n                                                                            : this\r\n                                                                            .state\r\n                                                                            .orderStatusList\r\n                                                                            .map((data1, index) => {\r\n                                                                               \r\n                                                                                return (\r\n                                                                                    <option value={data1.orderStatus} key={index} selected={data.status == data1.orderStatus}>{data1.orderStatus}</option>\r\n                                                                                )\r\n\r\n                                                                            })}\r\n\r\n                                                                    </select>\r\n\r\n                                                                </td>:<td>{data.status}</td>}\r\n                                                                {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"\r\n                                                                    ?   <td>\r\n                                                                    <select\r\n                                                                        className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                        name=\"assignTo\"\r\n                                                                       \r\n                                                                        id={data.fireorderId}\r\n                                                                        data-rid={data.orderId}\r\n                                                                        data-email={data.emailId && data.emailId}\r\n                                                                        data-name={data.customerName && data.customerName}\r\n                                                                        onChange={this.deliverytAssignTo}>\r\n                                                                              <option >selected</option> \r\n                                                                        \r\n                                                                        {this\r\n                                                                            .state\r\n                                                                            .deliveryList\r\n                                                                            .map((data1, index) => {\r\n\r\n                                                                                return (\r\n                                                                                    <option value={data1.userId} key={index} selected={data.assignTo == data1.userId}>{data1.fullName}</option>\r\n                                                                                )\r\n\r\n                                                                            })}\r\n\r\n                                                                    </select>\r\n\r\n                                                                </td>:''}\r\n\r\n                                                                <td>{data.created_on}</td>\r\n\r\n                                                                {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"\r\n                                                                    ?<td>\r\n                                                                    \r\n\r\n                                                                    <Link to={`/ViewInvoice/${data.fireorderId}`}>\r\n                                                                        <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n                                                                            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                                                        </button>\r\n                                                                    </Link>\r\n\r\n                                                                </td>:''}\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderListPage;\r\n"]},"metadata":{},"sourceType":"module"}