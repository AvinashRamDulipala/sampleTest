{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\addseopage.js\";\nimport React from \"react\";\nimport { Form, Input, Button, Alert } from 'reactstrap';\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nvar AddSEOPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddSEOPage, _React$Component);\n\n  function AddSEOPage(props) {\n    var _this;\n\n    _classCallCheck(this, AddSEOPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSEOPage).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleUploadStart = function () {\n      return _this.setState({\n        isUploading: true,\n        progress: 0\n      });\n    };\n\n    _this.handleProgress = function (progress) {\n      return _this.setState({\n        progress: progress\n      });\n    };\n\n    _this.handleUploadError = function (error) {\n      _this.setState({\n        isUploading: false\n      });\n\n      console.error(error);\n    };\n\n    _this.handleUploadSuccess = function (filename) {\n      _this.setState({\n        avatar: filename,\n        progress: 100,\n        isUploading: false\n      });\n\n      console.log(_this.state.avatar);\n      firebase.storage().ref(\"images\").child(filename).getDownloadURL().then(function (url) {\n        return _this.setState({\n          avatarURL: url\n        });\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log(_this.state); // if (this.validator.allValid()) {\n\n      event.preventDefault();\n\n      _this.addNotification();\n\n      var dbCon = firebase.database().ref('/SEOPages');\n      dbCon.push({\n        pageTitle: _this.state.pageTitle,\n        title: _this.state.title,\n        charset: _this.state.charset,\n        keywords: _this.state.keywords,\n        description: _this.state.description,\n        viewport: _this.state.viewport,\n        robots: _this.state.robots,\n        domainverify: _this.state.domainverify,\n        twittersite: _this.state.twittersite,\n        twittercreator: _this.state.twittercreator,\n        twittercard: _this.state.twittercard,\n        twitterplayer: _this.state.twitterplayer,\n        twittertitle: _this.state.twittertitle,\n        twitterimage: _this.state.twitterimage,\n        twitterdescription: _this.state.twitterdescription,\n        geoplacename: _this.state.geoplacename,\n        geoposition: _this.state.geoposition,\n        georegion: _this.state.georegion,\n        ICBM: _this.state.ICBM,\n        oglocale: _this.state.oglocale,\n        ogsitename: _this.state.ogsitename,\n        ogtitle: _this.state.ogtitle,\n        ogdescription: _this.state.ogdescription,\n        ogtype: _this.state.ogtype,\n        ogurl: _this.state.ogurl,\n        ogimage: _this.state.avatarURL,\n        created_on: _this.state.date\n      });\n\n      _this.setState({});\n\n      _this.props.history.push(\"/SEOPages\"); // } else {\n      //     this\n      //         .validator\n      //         .showMessages();\n      //     this.forceUpdate();\n      // }\n\n    };\n\n    _this.state = {\n      pageTitle: '',\n      date: new Date().toLocaleString(),\n      description: '',\n      theme: 'snow',\n      avatar: \"\",\n      isUploading: false,\n      progress: 0,\n      avatarURL: \"\",\n      title: '',\n      charset: '',\n      keywords: '',\n      viewport: '',\n      robots: '',\n      domainverify: '',\n      twittersite: '',\n      twittercreator: '',\n      twittercard: '',\n      twitterplayer: '',\n      twittertitle: '',\n      twitterimage: '',\n      twitterdescription: '',\n      geoplacename: '',\n      geoposition: '',\n      georegion: '',\n      ICBM: '',\n      oglocale: '',\n      ogsitename: '',\n      ogtitle: '',\n      ogdescription: '',\n      ogtype: '',\n      ogurl: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNotification = _this.addNotification.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.notificationDOMRef = React.createRef();\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        url: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            //return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) && params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(AddSEOPage, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState({\n        description: value\n      });\n    }\n  }, {\n    key: \"addNotification\",\n    value: function addNotification() {\n      this.notificationDOMRef.current.addNotification({\n        title: \"Success\",\n        message: \"Succesfully added!\",\n        type: \"success\",\n        insert: \"bottom\",\n        container: \"top-center\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000\n        },\n        dismissable: {\n          click: true\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        'height': '300px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Settings\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Add SEO Page\"), React.createElement(ReactNotification, {\n        ref: this.notificationDOMRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-horizontal\",\n        onSubmit: this.handleSubmit,\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Page Name\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Page Title\",\n        id: \"add_GST\",\n        name: \"pageTitle\",\n        onChange: this.onChange,\n        value: this.state.pageTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Page Name\", this.state.pageTitle, \"required\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" \", this.state.employer_sevice_message), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        onChange: this.onChange,\n        value: this.state.title,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), \" \", this.validator.message(\"title\", this.state.title, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"charset\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"charset\",\n        id: \"charset\",\n        onChange: this.onChange,\n        value: this.state.charset,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), \" \", this.validator.message(\"charset\", this.state.charset, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Keywords\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"keywords\",\n        id: \"keywords\",\n        onChange: this.onChange,\n        value: this.state.keywords,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), \" \", this.validator.message(\"keywords\", this.state.keywords, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(ReactQuill, {\n        theme: this.state.theme,\n        value: this.state.description,\n        placeholder: \"Enter Text\",\n        onChange: this.handleChange,\n        className: \"add-new-post__editor mb-1\",\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), \" \", this.validator.message(\"description\", this.state.description, \"required\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"viewport\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"viewport\",\n        id: \"viewport\",\n        onChange: this.onChange,\n        value: this.state.viewport,\n        className: \"required form-control\",\n        placeholder: \"viewport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }), \" \", this.validator.message(\"viewport\", this.state.viewport, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \"Domain Verify\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"domainverify\",\n        id: \"domainverify\",\n        onChange: this.onChange,\n        value: this.state.domainverify,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), \" \", this.validator.message(\"domainverify\", this.state.domainverify, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"twitter:site\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittersite\",\n        id: \"twittersite\",\n        onChange: this.onChange,\n        value: this.state.twittersite,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittersite\", this.state.twittersite, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"twitter:creator\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittercreator\",\n        id: \"twittercreator\",\n        onChange: this.onChange,\n        value: this.state.twittercreator,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittercreator\", this.state.twittercreator, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"twitter:card\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittercard\",\n        id: \"twittercard\",\n        onChange: this.onChange,\n        value: this.state.twittercard,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittercard\", this.state.twittercard, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"robots\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"robots\",\n        id: \"robots\",\n        onChange: this.onChange,\n        value: this.state.robots,\n        className: \"required form-control\",\n        placeholder: \"INDEX, FOLLOW\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), \" \", this.validator.message(\"robots\", this.state.robots, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"twitter:player\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterplayer\",\n        id: \"twitterplayer\",\n        onChange: this.onChange,\n        value: this.state.twitterplayer,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterplayer\", this.state.twitterplayer, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"twitter:title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittertitle\",\n        id: \"twittertitle\",\n        onChange: this.onChange,\n        value: this.state.twittertitle,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittertitle\", this.state.twittertitle, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"twitter:description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterdescription\",\n        id: \"twitterdescription\",\n        onChange: this.onChange,\n        value: this.state.twitterdescription,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterdescription\", this.state.twitterdescription, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, \"twitter:image URL\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterimage\",\n        id: \"twitterimage\",\n        onChange: this.onChange,\n        value: this.state.twitterimage,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterimage Url\", this.state.twitterimage, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, \"geo.placename\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"geoplacename\",\n        id: \"geoplacename\",\n        onChange: this.onChange,\n        value: this.state.geoplacename,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }), \" \", this.validator.message(\"geoplacename\", this.state.geoplacename, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, \"geo.position\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"geoposition\",\n        id: \"geoposition\",\n        onChange: this.onChange,\n        value: this.state.geoposition,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }), \" \", this.validator.message(\"geoposition\", this.state.geoposition, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, \"geo.region\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"georegion\",\n        id: \"georegion\",\n        onChange: this.onChange,\n        value: this.state.georegion,\n        className: \"required form-control\",\n        placeholder: \"IN-Telangana\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }), \" \", this.validator.message(\"georegion\", this.state.georegion, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \"ICBM\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ICBM\",\n        id: \"ICBM\",\n        onChange: this.onChange,\n        value: this.state.ICBM,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ICBM\", this.state.ICBM, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, \"og:locale\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"oglocale\",\n        id: \"oglocale\",\n        onChange: this.onChange,\n        value: this.state.oglocale,\n        className: \"required form-control\",\n        placeholder: \"en_US\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }), \" \", this.validator.message(\"oglocale\", this.state.oglocale, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, \"og:site_name\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogsitename\",\n        id: \"ogsitename\",\n        onChange: this.onChange,\n        value: this.state.ogsitename,\n        className: \"required form-control\",\n        placeholder: \"edibyl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogsitename\", this.state.ogsitename, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, \"og:title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogtitle\",\n        id: \"ogtitle\",\n        onChange: this.onChange,\n        value: this.state.ogtitle,\n        className: \"required form-control\",\n        placeholder: \"ogtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogtitle\", this.state.ogtitle, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, \"og:description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogdescription\",\n        id: \"ogdescription\",\n        onChange: this.onChange,\n        value: this.state.ogdescription,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogdescription\", this.state.ogdescription, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, \"og:type\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogtype\",\n        id: \"ogtype\",\n        onChange: this.onChange,\n        value: this.state.ogtype,\n        className: \"required form-control\",\n        placeholder: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogtype\", this.state.ogtype, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, \"og:image\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, this.state.isUploading && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, \"Progress: \", this.state.progress), this.state.avatarURL && React.createElement(\"img\", {\n        src: this.state.avatarURL,\n        style: {\n          height: \"200px\",\n          width: \"250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }), React.createElement(FileUploader, {\n        accept: \"image/*\",\n        name: \"avatar\",\n        randomizeFilename: true,\n        storageRef: firebase.storage().ref(\"images\"),\n        onUploadStart: this.handleUploadStart,\n        onUploadError: this.handleUploadError,\n        onUploadSuccess: this.handleUploadSuccess,\n        onProgress: this.handleProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Upload Product Image\", this.state.avatarURL, \"required\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, \"og:url\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogurl\",\n        id: \"ogurl\",\n        onChange: this.onChange,\n        value: this.state.ogurl,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Upload Product Image\", this.state.ogurl, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766\n        },\n        __self: this\n      }, \"Save\")))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddSEOPage;\n}(React.Component);\n\nexport default AddSEOPage;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\addseopage.js"],"names":["React","Form","Input","Button","Alert","HeaderPage","FooterPage","SidebarPage","firebase","ReactQuill","FileUploader","ReactNotification","SimpleReactValidator","AddSEOPage","props","onChange","event","setState","target","name","value","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","error","console","handleUploadSuccess","filename","avatar","log","state","storage","ref","child","getDownloadURL","then","url","avatarURL","handleSubmit","preventDefault","addNotification","dbCon","database","push","pageTitle","title","charset","keywords","description","viewport","robots","domainverify","twittersite","twittercreator","twittercard","twitterplayer","twittertitle","twitterimage","twitterdescription","geoplacename","geoposition","georegion","ICBM","oglocale","ogsitename","ogtitle","ogdescription","ogtype","ogurl","ogimage","created_on","date","history","Date","toLocaleString","theme","handleChange","bind","notificationDOMRef","createRef","validator","className","validators","whitespace","message","rule","val","params","helpers","testRegex","indexOf","specialChar","specialCharText","current","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","divStyle","employer_sevice_message","color","height","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Form, Input, Button, Alert} from 'reactstrap';\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nclass AddSEOPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageTitle: '',\r\n            date: new Date().toLocaleString(),\r\n            description: '',\r\n            theme: 'snow',\r\n            avatar: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            avatarURL: \"\",\r\n            title: '',\r\n            charset: '',\r\n            keywords: '',\r\n            viewport: '',\r\n            robots: '',\r\n            domainverify: '',\r\n            twittersite: '',\r\n            twittercreator: '',\r\n            twittercard: '',\r\n            twitterplayer: '',\r\n            twittertitle: '',\r\n            twitterimage: '',\r\n            twitterdescription: '',\r\n            geoplacename: '',\r\n            geoposition: '',\r\n            georegion: '',\r\n            ICBM: '',\r\n            oglocale: '',\r\n            ogsitename: '',\r\n            ogtitle: '',\r\n            ogdescription: '',\r\n            ogtype: '',\r\n            ogurl: '',\r\n        }\r\n        this.handleChange = this\r\n            .handleChange\r\n            .bind(this);\r\n        this.onChange = this\r\n            .onChange\r\n            .bind(this);\r\n        this.addNotification = this\r\n            .addNotification\r\n            .bind(this);\r\n        this.notificationDOMRef = React.createRef();\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                url: {\r\n                  message: \"The Url should be example.com \",\r\n                  rule: function(val, params, validator) {\r\n                    //return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) && params.indexOf(val) === -1\r\n                    return (\r\n                      validator.helpers.testRegex(\r\n                        val,\r\n                        /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g\r\n                      ) && params.indexOf(val) === -1\r\n                    );\r\n                  }\r\n                },\r\n            }\r\n        });\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({description: value})\r\n    };\r\n    onChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    addNotification() {\r\n        this\r\n            .notificationDOMRef\r\n            .current\r\n            .addNotification({\r\n                title: \"Success\",\r\n                message: \"Succesfully added!\",\r\n                type: \"success\",\r\n                insert: \"bottom\",\r\n                container: \"top-center\",\r\n                animationIn: [\r\n                    \"animated\", \"fadeIn\"\r\n                ],\r\n                animationOut: [\r\n                    \"animated\", \"fadeOut\"\r\n                ],\r\n                dismiss: {\r\n                    duration: 2000\r\n                },\r\n                dismissable: {\r\n                    click: true\r\n                }\r\n            });\r\n    }\r\n    handleUploadStart = () => this.setState({isUploading: true, progress: 0});\r\n    handleProgress = progress => this.setState({progress});\r\n    handleUploadError = error => {\r\n        this.setState({isUploading: false});\r\n        console.error(error);\r\n    };\r\n    handleUploadSuccess = filename => {\r\n        this.setState({avatar: filename, progress: 100, isUploading: false});\r\n        console.log(this.state.avatar);\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({avatarURL: url}));\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        console.log(this.state);\r\n        // if (this.validator.allValid()) {\r\n\r\n           \r\n                event.preventDefault();\r\n                this.addNotification();\r\n\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref('/SEOPages');\r\n\r\n                dbCon.push({\r\n                    pageTitle: this.state.pageTitle,\r\n                    title: this.state.title,\r\n                    charset: this.state.charset,\r\n                    keywords: this.state.keywords,\r\n                    description: this.state.description,\r\n                    viewport: this.state.viewport,\r\n                    robots: this.state.robots,\r\n                    domainverify: this.state.domainverify,\r\n                    twittersite: this.state.twittersite,\r\n                    twittercreator: this.state.twittercreator,\r\n                    twittercard: this.state.twittercard,\r\n                    twitterplayer: this.state.twitterplayer,\r\n                    twittertitle: this.state.twittertitle,\r\n                    twitterimage: this.state.twitterimage,\r\n                    twitterdescription: this.state.twitterdescription,\r\n                    geoplacename: this.state.geoplacename,\r\n                    geoposition: this.state.geoposition,\r\n                    georegion: this.state.georegion,\r\n                    ICBM: this.state.ICBM,\r\n                    oglocale: this.state.oglocale,\r\n                    ogsitename: this.state.ogsitename,\r\n                    ogtitle: this.state.ogtitle,\r\n                    ogdescription: this.state.ogdescription,\r\n                    ogtype: this.state.ogtype,\r\n                    ogurl: this.state.ogurl,\r\n                    ogimage: this.state.avatarURL,\r\n                    created_on: this.state.date\r\n                });\r\n\r\n                this.setState({});\r\n                this\r\n                    .props\r\n                    .history\r\n                    .push(\"/SEOPages\");\r\n            \r\n\r\n        // } else {\r\n        //     this\r\n        //         .validator\r\n        //         .showMessages();\r\n        //     this.forceUpdate();\r\n        // }\r\n    };\r\n\r\n    render() {\r\n\r\n        const divStyle = {\r\n            'height': '300px'\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Settings</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add SEO Page</h4>\r\n                                            <ReactNotification ref={this.notificationDOMRef}/>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <div>\r\n                                                    <form className=\"form-horizontal\" onSubmit={this.handleSubmit} role=\"form\">\r\n                                                        <div className=\"box-body\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Page Name</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        className=\"form-control\"\r\n                                                                        placeholder=\"Page Title\"\r\n                                                                        id=\"add_GST\"\r\n                                                                        name=\"pageTitle\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.pageTitle}/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"Page Name\", this.state.pageTitle, \"required\")}\r\n                                                                    <div className=\"text-danger\">\r\n                                                                        {\" \"}\r\n                                                                        {this.state.employer_sevice_message}\r\n                                                                    </div>\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Title</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"title\"\r\n                                                                        id=\"title\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.title}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"title\", this.state.title, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">charset</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"charset\"\r\n                                                                        id=\"charset\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.charset}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"charset\", this.state.charset, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Keywords</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"keywords\"\r\n                                                                        id=\"keywords\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.keywords}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"keywords\", this.state.keywords, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Description</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <ReactQuill\r\n                                                                        theme={this.state.theme}\r\n                                                                        value={this.state.description}\r\n                                                                        placeholder='Enter Text'\r\n                                                                        onChange={this.handleChange}\r\n                                                                        className=\"add-new-post__editor mb-1\"\r\n                                                                        style={divStyle}/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"description\", this.state.description, \"required\")}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">viewport</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"viewport\"\r\n                                                                        id=\"viewport\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.viewport}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"viewport\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"viewport\", this.state.viewport, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Domain Verify</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"domainverify\"\r\n                                                                        id=\"domainverify\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.domainverify}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"domainverify\", this.state.domainverify, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:site</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twittersite\"\r\n                                                                        id=\"twittersite\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twittersite}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twittersite\", this.state.twittersite, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:creator</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twittercreator\"\r\n                                                                        id=\"twittercreator\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twittercreator}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twittercreator\", this.state.twittercreator, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:card</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twittercard\"\r\n                                                                        id=\"twittercard\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twittercard}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twittercard\", this.state.twittercard, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">robots</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"robots\"\r\n                                                                        id=\"robots\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.robots}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"INDEX, FOLLOW\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"robots\", this.state.robots, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:player</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twitterplayer\"\r\n                                                                        id=\"twitterplayer\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twitterplayer}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twitterplayer\", this.state.twitterplayer, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:title</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twittertitle\"\r\n                                                                        id=\"twittertitle\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twittertitle}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twittertitle\", this.state.twittertitle, \"required\")}\r\n\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:description</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twitterdescription\"\r\n                                                                        id=\"twitterdescription\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twitterdescription}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twitterdescription\", this.state.twitterdescription, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:image URL</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"twitterimage\"\r\n                                                                        id=\"twitterimage\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.twitterimage}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"twitterimage Url\", this.state.twitterimage, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.placename</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"geoplacename\"\r\n                                                                        id=\"geoplacename\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.geoplacename}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"geoplacename\", this.state.geoplacename, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.position</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"geoposition\"\r\n                                                                        id=\"geoposition\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.geoposition}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"geoposition\", this.state.geoposition, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.region</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"georegion\"\r\n                                                                        id=\"georegion\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.georegion}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"IN-Telangana\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"georegion\", this.state.georegion, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">ICBM</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ICBM\"\r\n                                                                        id=\"ICBM\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ICBM}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"ICBM\", this.state.ICBM, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:locale</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"oglocale\"\r\n                                                                        id=\"oglocale\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.oglocale}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"en_US\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"oglocale\", this.state.oglocale, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:site_name</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ogsitename\"\r\n                                                                        id=\"ogsitename\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ogsitename}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"edibyl\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"ogsitename\", this.state.ogsitename, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:title</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ogtitle\"\r\n                                                                        id=\"ogtitle\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ogtitle}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"ogtitle\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"ogtitle\", this.state.ogtitle, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:description</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ogdescription\"\r\n                                                                        id=\"ogdescription\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ogdescription}\r\n                                                                        className=\"required form-control\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"ogdescription\", this.state.ogdescription, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:type</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ogtype\"\r\n                                                                        id=\"ogtype\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ogtype}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"Website\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"ogtype\", this.state.ogtype, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:image</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    {/* <input type=\"file\" name=\"ogimage\" id=\"ogimage\" onChange={ this.onChange } value={ this.state.ogimage }  className=\"required form-control\"  />\r\n                <span style={{color: 'red'}} />  */}\r\n                                                                    {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                                                                    {this.state.avatarURL && <img\r\n                                                                        src={this.state.avatarURL}\r\n                                                                        style={{\r\n                                                                        height: \"200px\",\r\n                                                                        width: \"250px\"\r\n                                                                    }}/>}\r\n                                                                    <FileUploader\r\n                                                                        accept=\"image/*\"\r\n                                                                        name=\"avatar\"\r\n                                                                        randomizeFilename\r\n                                                                        storageRef={firebase\r\n                                                                        .storage()\r\n                                                                        .ref(\"images\")}\r\n                                                                        onUploadStart={this.handleUploadStart}\r\n                                                                        onUploadError={this.handleUploadError}\r\n                                                                        onUploadSuccess={this.handleUploadSuccess}\r\n                                                                        onProgress={this.handleProgress}/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"Upload Product Image\", this.state.avatarURL, \"required\")}\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:url</label>\r\n                                                                <div className=\"col-sm-10\">\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"ogurl\"\r\n                                                                        id=\"ogurl\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value={this.state.ogurl}\r\n                                                                        className=\"required form-control\"\r\n                                                                        placeholder=\"\"/> {this\r\n                                                                        .validator\r\n                                                                        .message(\"Upload Product Image\", this.state.ogurl, \"required\")}\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}/>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                                <div className=\"text-left custom-pro-edt-ds\">\r\n                                                                    <button type=\"submit\" className=\"btn btn-ctl-bt waves-effect waves-light\">Save\r\n                                                                    </button>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </form>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSEOPage;\r\n"]},"metadata":{},"sourceType":"module"}