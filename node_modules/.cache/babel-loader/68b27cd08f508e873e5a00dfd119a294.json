{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\MerchantPaymentsList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FadeIn from \"react-fade-in\";\nimport axios from \"axios\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport readXlsxFile from 'read-excel-file';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\n$.DataTable = require('datatables.net');\n\nvar MerchantPaymentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MerchantPaymentsList, _React$Component);\n\n  function MerchantPaymentsList(props) {\n    var _this;\n\n    _classCallCheck(this, MerchantPaymentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MerchantPaymentsList).call(this, props));\n\n    _this.onChange = function (event) {\n      readXlsxFile(event.type.value).then(function (rows) {\n        console.log(rows); // `rows` is an array of rows each row being an array of cells.\n      });\n    };\n\n    _this.fileHandler = function (event) {\n      var fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        console.log(resp);\n\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n\n          var data = [];\n          resp.rows.forEach(function (childSnapShot) {\n            var ServiceData = {\n              orderId: childSnapShot[1],\n              merchantName: childSnapShot[2],\n              items: childSnapShot[3],\n              status: childSnapShot[4],\n              total: childSnapShot[5],\n              emailId: childSnapShot[6]\n            };\n            data.push(ServiceData);\n          });\n          var dbCon = firebase.database().ref('merchantPayments');\n          dbCon.set({\n            data: data\n          }).then(function (result) {\n            _this.setState({\n              paymentList: data,\n              loading: false\n            });\n\n            console.log(_this.state.paymentList);\n          });\n        }\n      });\n    };\n\n    _this.dateChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var validFrom = new Date(_this.state.validFrom).toLocaleString();\n        var validTo = new Date(_this.state.validTo).toLocaleString();\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"created_on\").startAt(validFrom).endAt(validTo);\n        ref.once('value', function (snapshot) {\n          var data = [];\n          console.log(snapshot.val());\n          var i = 1;\n          snapshot.forEach(function (childSnapShot) {\n            var Merchants = {\n              Sno: i++,\n              orderId: childSnapShot.val().orderId,\n              customerName: childSnapShot.val().first_name + \" \" + childSnapShot.val().last_name,\n              items: childSnapShot.val().cartDataItems.length,\n              totalAmount: childSnapShot.val().totalAmount,\n              status: childSnapShot.val().status,\n              order_on: childSnapShot.val().created_on,\n              emailId: childSnapShot.val().email_id\n            };\n            data.push(Merchants);\n          });\n\n          _this.setState({\n            orderDateList: data,\n            loading: false\n          });\n\n          console.log(_this.state.orderDateList);\n\n          _this.csvLink.link.click();\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      orderList: [],\n      loading: false,\n      count: 1,\n      activePage: \"1\",\n      countPage: \"\",\n      orderStatusList: [],\n      validFrom: \"\",\n      validTo: \"\",\n      orderDateList: [],\n      cols: '',\n      rows: '',\n      paymentList: []\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MerchantPaymentsList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pathName = this.props.location.pathname;\n      var ordersPath = pathName.substr(8);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Orders\")))))))))), React.createElement(\"div\", {\n        className: \"product-status mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-status-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, ordersPath, \"Orders List\"), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.fileHandler.bind(this),\n        style: {\n          \"padding\": \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        min: moment().format(\"2019-06-01\"),\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        onChange: this.dateChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }))), this.validator.message(\"Valid From\", this.state.validFrom, \"required\"))), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.dateChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }))), this.validator.message(\"Valid To\", this.state.validTo, \"required\"))))), React.createElement(\"div\", {\n        className: \"col-sm-6 pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        title: \"download\",\n        className: \"pd-setting-ed mrg_top\",\n        style: {\n          marginTop: \"28px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Export to excel\"))), React.createElement(CSVLink, {\n        data: this.state.orderDateList,\n        ref: function ref(r) {\n          return _this2.csvLink = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-bordered paginationTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, \"S.no\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"MerchantName\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Items(Count)\"), React.createElement(\"th\", {\n        className: \"li-product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Grand Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Order Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, this.state.paymentList && this.state.paymentList.map(function (data, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, data.merchantName && data.merchantName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, data.orderId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, data.items), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, data.totalcart), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, data.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, data.created_on), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/ViewInvoice/\".concat(data.fireorderId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          \"data-toggle\": \"tooltip\",\n          title: \"Edit\",\n          className: \"pd-setting-ed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        })))));\n      }))), this.state.rows ? React.createElement(OutTable, {\n        data: this.state.rows,\n        columns: this.state.cols,\n        tableClassName: \"ExcelTable2007\",\n        tableHeaderRowClass: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }) : '')))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MerchantPaymentsList;\n}(React.Component);\n\nexport default MerchantPaymentsList;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\MerchantPaymentsList.js"],"names":["React","Link","FadeIn","axios","HeaderPage","FooterPage","SidebarPage","firebase","moment","CSVLink","CSVDownload","SimpleReactValidator","swal","$","readXlsxFile","OutTable","ExcelRenderer","DataTable","require","MerchantPaymentsList","props","onChange","event","type","value","then","rows","console","log","fileHandler","fileObj","target","files","err","resp","setState","cols","data","forEach","childSnapShot","ServiceData","orderId","merchantName","items","status","total","emailId","push","dbCon","database","ref","set","result","paymentList","loading","state","dateChange","name","handleSubmit","preventDefault","validator","allValid","validFrom","Date","toLocaleString","validTo","orderByChild","startAt","endAt","once","snapshot","val","i","Merchants","Sno","customerName","first_name","last_name","cartDataItems","length","totalAmount","order_on","created_on","email_id","orderDateList","csvLink","link","click","showMessages","forceUpdate","orderList","count","activePage","countPage","orderStatusList","className","validators","whitespace","message","rule","params","helpers","testRegex","indexOf","specialChar","specialCharText","clearTimeout","interval","pathName","location","pathname","ordersPath","substr","bind","format","marginTop","r","map","index","totalcart","fireorderId","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport moment from 'moment';\r\nimport {CSVLink, CSVDownload} from \"react-csv\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass MerchantPaymentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            orderStatusList: [],\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            orderDateList: [],\r\n            cols: '',\r\n            rows: '',\r\n            paymentList:[],\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onChange = (event) => {\r\n        readXlsxFile(event.type.value).then((rows) => {\r\n\r\n            console.log(rows);\r\n            // `rows` is an array of rows each row being an array of cells.\r\n        })\r\n    }\r\n    fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            console.log(resp);\r\n\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n\r\n                this.setState({cols: resp.cols, rows: resp.rows});\r\n\r\n                const data = [];\r\n\r\n                resp\r\n                    .rows\r\n                    .forEach(childSnapShot => {\r\n\r\n                        const ServiceData = {\r\n                            orderId: childSnapShot[1],\r\n                            merchantName: childSnapShot[2],\r\n                            items: childSnapShot[3],\r\n                            status: childSnapShot[4],\r\n                            total: childSnapShot[5],\r\n                            emailId: childSnapShot[6],\r\n                          \r\n                        };\r\n\r\n                        data.push(ServiceData);\r\n                    });\r\n                    let dbCon = firebase\r\n                    .database()\r\n                    .ref('merchantPayments');\r\n                  dbCon.set({data }).then(result => {\r\n                    this.setState({ paymentList:data,loading:false });\r\n                    console.log(this.state.paymentList);\r\n                });\r\n                \r\n\r\n                \r\n            }\r\n        });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    dateChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            var validFrom = new Date(this.state.validFrom).toLocaleString();\r\n            var validTo = new Date(this.state.validTo).toLocaleString();\r\n\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\")\r\n                .orderByChild(\"created_on\")\r\n                .startAt(validFrom)\r\n                .endAt(validTo);\r\n\r\n            ref.once('value', snapshot => {\r\n                const data = [];\r\n                console.log(snapshot.val());\r\n                var i = 1;\r\n                snapshot.forEach(childSnapShot => {\r\n\r\n                    const Merchants = {\r\n                        Sno: i++,\r\n                        orderId: childSnapShot\r\n                            .val()\r\n                            .orderId,\r\n                        customerName: childSnapShot\r\n                            .val()\r\n                            .first_name + \" \" + childSnapShot\r\n                            .val()\r\n                            .last_name,\r\n                        items: childSnapShot\r\n                            .val()\r\n                            .cartDataItems\r\n                            .length,\r\n                        totalAmount: childSnapShot\r\n                            .val()\r\n                            .totalAmount,\r\n                        status: childSnapShot\r\n                            .val()\r\n                            .status,\r\n                        order_on: childSnapShot\r\n                            .val()\r\n                            .created_on,\r\n                        emailId: childSnapShot\r\n                            .val()\r\n                            .email_id\r\n                    };\r\n\r\n                    data.push(Merchants);\r\n                });\r\n                this.setState({orderDateList: data, loading: false});\r\n                console.log(this.state.orderDateList);\r\n\r\n                this\r\n                    .csvLink\r\n                    .link\r\n                    .click();\r\n\r\n            });\r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n    render() {\r\n        const pathName = this.props.location.pathname;\r\n\r\n        const ordersPath = pathName.substr(8);\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Orders</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4>\r\n                                            {ordersPath}\r\n                                            Orders List</h4>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            onChange={this\r\n                                            .fileHandler\r\n                                            .bind(this)}\r\n                                            style={{\r\n                                            \"padding\": \"10px\"\r\n                                        }}/>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className='col-sm-6'>\r\n                                                <div className=\"row\">\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>From</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    min={moment().format(\"2019-06-01\")}\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid From\", this.state.validFrom, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>To</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid To\", this.state.validTo, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-sm-6 pull-right'>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={this.handleSubmit}\r\n                                                    title=\"download\"\r\n                                                    className=\"pd-setting-ed mrg_top\"\r\n                                                    style={{\r\n                                                    marginTop: \"28px\"\r\n                                                }}>\r\n                                                    Export to excel\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <CSVLink data={this.state.orderDateList} ref={(r) => this.csvLink = r}></CSVLink>\r\n\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                    <th>MerchantName</th>\r\n                                                    <th>Order ID</th>\r\n                                                    <th>Items(Count)</th>\r\n                                                    <th className=\"li-product-price\">Grand Total\r\n                                                    </th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Order Date</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.paymentList && this\r\n                                                    .state\r\n                                                    .paymentList\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                {/* <td>{data.customerName ===NaN ?\"\":data.customerName}</td> */}\r\n                                                                <td>{data.merchantName && data.merchantName}</td>\r\n                                                                <td>{data.orderId}</td>\r\n                                                                <td>{data.items}</td>\r\n                                                                <td>{data.totalcart}</td>\r\n                                                                <td>{data.status}</td>\r\n\r\n                                                                <td>{data.created_on}</td>\r\n\r\n                                                                <td>\r\n                                                                    {/* <button data-toggle=\"tooltip\" title=\"View\" className=\"pd-setting-ed\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></button> */}\r\n\r\n                                                                    <Link to={`/ViewInvoice/${data.fireorderId}`}>\r\n                                                                        <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n                                                                            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                                                        </button>\r\n                                                                    </Link>\r\n\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        {this.state.rows\r\n                                            ? <OutTable\r\n                                                    data={this.state.rows}\r\n                                                    columns={this.state.cols}\r\n                                                    tableClassName=\"ExcelTable2007\"\r\n                                                    tableHeaderRowClass=\"heading\"/>\r\n                                            : ''}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MerchantPaymentsList;\r\n"]},"metadata":{},"sourceType":"module"}