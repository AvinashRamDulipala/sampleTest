{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\MerchantPaymentsList.js\";\nimport React from \"react\";\nimport '../fileType.css';\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport $ from 'jquery';\nimport readXlsxFile from 'read-excel-file';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\n$.DataTable = require('datatables.net');\n\nvar MerchantPaymentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MerchantPaymentsList, _React$Component);\n\n  function MerchantPaymentsList(props) {\n    var _this;\n\n    _classCallCheck(this, MerchantPaymentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MerchantPaymentsList).call(this, props));\n\n    _this.onChange = function (event) {\n      readXlsxFile(event.type.value).then(function (rows) {\n        console.log(rows); // `rows` is an array of rows each row being an array of cells.\n      });\n    };\n\n    _this.fileHandler = function (event) {\n      var fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        console.log(resp);\n\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n\n          var data = [];\n          resp.rows.forEach(function (childSnapShot) {\n            var ServiceData = {\n              orderId: childSnapShot[1],\n              merchantName: childSnapShot[2],\n              items: childSnapShot[3],\n              totalAmount: childSnapShot[4],\n              status: childSnapShot[5],\n              order_on: childSnapShot[6],\n              emailId: childSnapShot[7]\n            };\n            data.push(ServiceData);\n          });\n          var dbCon = firebase.database().ref('merchantPayments');\n          dbCon.set({\n            data: data\n          }).then(function (result) {\n            _this.setState({\n              paymentList: data,\n              loading: false\n            });\n\n            console.log(_this.state.paymentList);\n          });\n        }\n      });\n    };\n\n    _this.dateChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var validFrom = new Date(_this.state.validFrom).toLocaleString();\n        var validTo = new Date(_this.state.validTo).toLocaleString();\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"created_on\").startAt(validFrom).endAt(validTo);\n        ref.once('value', function (snapshot) {\n          var data = [];\n          console.log(snapshot.val());\n          var i = 1;\n          snapshot.forEach(function (childSnapShot) {\n            var Merchants = {\n              Sno: i++,\n              orderId: childSnapShot.val().orderId,\n              customerName: childSnapShot.val().first_name + \" \" + childSnapShot.val().last_name,\n              items: childSnapShot.val().cartDataItems.length,\n              totalAmount: childSnapShot.val().totalAmount,\n              status: childSnapShot.val().status,\n              order_on: childSnapShot.val().created_on,\n              emailId: childSnapShot.val().email_id\n            };\n            data.push(Merchants);\n          });\n\n          _this.setState({\n            orderDateList: data,\n            loading: false\n          });\n\n          console.log(_this.state.orderDateList);\n\n          _this.csvLink.link.click();\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      orderList: [],\n      loading: false,\n      count: 1,\n      activePage: \"1\",\n      countPage: \"\",\n      orderStatusList: [],\n      validFrom: \"\",\n      validTo: \"\",\n      orderDateList: [],\n      cols: '',\n      rows: '',\n      paymentList: []\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MerchantPaymentsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ref = firebase.database().ref(\"merchantPayments/data\");\n      ref.once('value', function (snapshot) {\n        var data = [];\n        console.log(snapshot.val());\n        snapshot.forEach(function (childSnapShot) {\n          var Merchants = {\n            orderId: childSnapShot.val().orderId,\n            merchantName: childSnapShot.val().merchantName,\n            items: childSnapShot.val().items,\n            totalAmount: childSnapShot.val().totalAmount,\n            status: childSnapShot.val().status,\n            order_on: childSnapShot.val().order_on,\n            emailId: childSnapShot.val().emailId\n          };\n          data.push(Merchants);\n        });\n\n        _this2.setState({\n          paymentList: data,\n          countPage: data.length,\n          loading: false\n        });\n\n        _this2.interval = setTimeout(function () {\n          return $('.paginationTable').DataTable();\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Orders\")))))))))), React.createElement(\"div\", {\n        className: \"product-status mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-status-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Merchant Payment List\"), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"control-fileupload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"file1\",\n        class: \"text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Please choose a file on your computer.\"), React.createElement(\"input\", {\n        type: \"file\",\n        id: \"file1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        class: \"col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"icon-upload icon-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), \" Upload\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        min: moment().format(\"2019-06-01\"),\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        onChange: this.dateChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }))), this.validator.message(\"Valid From\", this.state.validFrom, \"required\"))), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.dateChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }))), this.validator.message(\"Valid To\", this.state.validTo, \"required\"))))), React.createElement(\"div\", {\n        className: \"col-sm-6 pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        title: \"download\",\n        className: \"pd-setting-ed mrg_top\",\n        style: {\n          marginTop: \"28px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Export to excel\"))), React.createElement(CSVLink, {\n        data: this.state.orderDateList,\n        ref: function ref(r) {\n          return _this3.csvLink = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(\"table\", {\n        className: \"table table-bordered paginationTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"S.no\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"Merchant Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Email Id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Items(Count)\"), React.createElement(\"th\", {\n        className: \"li-product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Grand Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Order Date\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.state.paymentList && this.state.paymentList.map(function (data, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, data.merchantName && data.merchantName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, data.emailId && data.emailId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, data.orderId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, data.items), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, data.totalAmount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }, data.status), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, data.order_on));\n      }))), this.state.rows ? React.createElement(OutTable, {\n        data: this.state.rows,\n        columns: this.state.cols,\n        tableClassName: \"ExcelTable2007\",\n        tableHeaderRowClass: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }) : '')))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MerchantPaymentsList;\n}(React.Component);\n\nexport default MerchantPaymentsList;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\MerchantPaymentsList.js"],"names":["React","HeaderPage","FooterPage","SidebarPage","firebase","moment","CSVLink","CSVDownload","SimpleReactValidator","$","readXlsxFile","OutTable","ExcelRenderer","DataTable","require","MerchantPaymentsList","props","onChange","event","type","value","then","rows","console","log","fileHandler","fileObj","target","files","err","resp","setState","cols","data","forEach","childSnapShot","ServiceData","orderId","merchantName","items","totalAmount","status","order_on","emailId","push","dbCon","database","ref","set","result","paymentList","loading","state","dateChange","name","handleSubmit","preventDefault","validator","allValid","validFrom","Date","toLocaleString","validTo","orderByChild","startAt","endAt","once","snapshot","val","i","Merchants","Sno","customerName","first_name","last_name","cartDataItems","length","created_on","email_id","orderDateList","csvLink","link","click","showMessages","forceUpdate","orderList","count","activePage","countPage","orderStatusList","className","validators","whitespace","message","rule","params","helpers","testRegex","indexOf","interval","setTimeout","clearTimeout","format","marginTop","r","map","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../fileType.css';\r\n\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport moment from 'moment';\r\nimport {CSVLink, CSVDownload} from \"react-csv\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport $ from 'jquery';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass MerchantPaymentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            orderStatusList: [],\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            orderDateList: [],\r\n            cols: '',\r\n            rows: '',\r\n            paymentList:[],\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n               \r\n               \r\n            }\r\n        });\r\n\r\n    }\r\n    componentDidMount() {\r\n       \r\n   var ref = firebase.database().ref(\"merchantPayments/data\");\r\n    ref.once('value', snapshot => {\r\n            const data = [];\r\n            console.log(snapshot.val());\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const Merchants = {\r\n                   \r\n                        orderId: childSnapShot.val().orderId,\r\n                        merchantName: childSnapShot.val().merchantName,\r\n                        items: childSnapShot.val().items,\r\n                        totalAmount: childSnapShot.val().totalAmount,\r\n                        status: childSnapShot.val().status,\r\n                        order_on: childSnapShot.val().order_on,\r\n                        emailId: childSnapShot.val().emailId,\r\n                };\r\n\r\n                data.push(Merchants);\r\n            });\r\n        \r\n\r\n            this.setState({paymentList: data, countPage: data.length, loading: false});\r\n           \r\n             this.interval = setTimeout(() => $('.paginationTable').DataTable(), 1000);\r\n        });\r\n    }\r\n    onChange = (event) => {\r\n        readXlsxFile(event.type.value).then((rows) => {\r\n\r\n            console.log(rows);\r\n            // `rows` is an array of rows each row being an array of cells.\r\n        })\r\n    }\r\n    fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            console.log(resp);\r\n\r\n            if (err) {\r\n                console.log(err);\r\n            } else {\r\n\r\n                this.setState({cols: resp.cols, rows: resp.rows});\r\n\r\n                const data = [];\r\n\r\n                resp\r\n                    .rows\r\n                    .forEach(childSnapShot => {\r\n\r\n                        const ServiceData = {\r\n                            orderId: childSnapShot[1],\r\n                            merchantName: childSnapShot[2],\r\n                            items: childSnapShot[3],\r\n                            totalAmount: childSnapShot[4],\r\n                            status: childSnapShot[5],\r\n                            order_on: childSnapShot[6],\r\n                            emailId: childSnapShot[7],\r\n                          \r\n                        };\r\n\r\n                        data.push(ServiceData);\r\n                    });\r\n                    let dbCon = firebase\r\n                    .database()\r\n                    .ref('merchantPayments');\r\n                  dbCon.set({data }).then(result => {\r\n                    this.setState({ paymentList:data,loading:false });\r\n                    console.log(this.state.paymentList);\r\n                });\r\n                \r\n\r\n                \r\n            }\r\n        });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    dateChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            var validFrom = new Date(this.state.validFrom).toLocaleString();\r\n            var validTo = new Date(this.state.validTo).toLocaleString();\r\n\r\n            var ref = firebase\r\n                .database()\r\n                .ref(\"orders/\")\r\n                .orderByChild(\"created_on\")\r\n                .startAt(validFrom)\r\n                .endAt(validTo);\r\n\r\n            ref.once('value', snapshot => {\r\n                const data = [];\r\n                console.log(snapshot.val());\r\n                var i = 1;\r\n                snapshot.forEach(childSnapShot => {\r\n\r\n                    const Merchants = {\r\n                        Sno: i++,\r\n                        orderId: childSnapShot\r\n                            .val()\r\n                            .orderId,\r\n                        customerName: childSnapShot\r\n                            .val()\r\n                            .first_name + \" \" + childSnapShot\r\n                            .val()\r\n                            .last_name,\r\n                        items: childSnapShot\r\n                            .val()\r\n                            .cartDataItems\r\n                            .length,\r\n                        totalAmount: childSnapShot\r\n                            .val()\r\n                            .totalAmount,\r\n                        status: childSnapShot\r\n                            .val()\r\n                            .status,\r\n                        order_on: childSnapShot\r\n                            .val()\r\n                            .created_on,\r\n                        emailId: childSnapShot\r\n                            .val()\r\n                            .email_id\r\n                    };\r\n\r\n                    data.push(Merchants);\r\n                });\r\n                this.setState({orderDateList: data, loading: false});\r\n                console.log(this.state.orderDateList);\r\n\r\n                this\r\n                    .csvLink\r\n                    .link\r\n                    .click();\r\n\r\n            });\r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n    render() {\r\n        \r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Orders</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4>\r\n                                           \r\n                                            Merchant Payment List</h4>\r\n                                        {/*\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            onChange={this\r\n                                            .fileHandler\r\n                                            .bind(this)}\r\n                                            /> */}\r\n\r\n<div class=\"row\">\r\n            <div class=\"col-sm-10\">\r\n              <span class=\"control-fileupload\">\r\n                <label for=\"file1\" class=\"text-left\">Please choose a file on your computer.</label>\r\n                <input type=\"file\" id=\"file1\"/>\r\n              </span>\r\n            </div>\r\n            <div class=\"col-sm-2\">  \r\n              <button type=\"button\" class=\"btn btn-primary btn-block\">\r\n                <i class=\"icon-upload icon-white\"></i> Upload\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className='col-sm-6'>\r\n                                                <div className=\"row\">\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>From</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    min={moment().format(\"2019-06-01\")}\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid From\", this.state.validFrom, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className='col-sm-6'>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label>To</label>\r\n                                                            <div className='input-group date' id='datetimepicker2'>\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span className=\"input-group-addon\">\r\n                                                                    <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                                                                </span>\r\n\r\n                                                            </div>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Valid To\", this.state.validTo, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='col-sm-6 pull-right'>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={this.handleSubmit}\r\n                                                    title=\"download\"\r\n                                                    className=\"pd-setting-ed mrg_top\"\r\n                                                    style={{\r\n                                                    marginTop: \"28px\"\r\n                                                }}>\r\n                                                    Export to excel\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <CSVLink data={this.state.orderDateList} ref={(r) => this.csvLink = r}></CSVLink>\r\n\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                    <th>Merchant Name</th>\r\n                                                    <th>Email Id</th>\r\n                                                    <th>Order ID</th>\r\n                                                    <th>Items(Count)</th>\r\n                                                    <th className=\"li-product-price\">Grand Total\r\n                                                    </th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Order Date</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.paymentList && this\r\n                                                    .state\r\n                                                    .paymentList\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                {/* <td>{data.customerName ===NaN ?\"\":data.customerName}</td> */}\r\n                                                                <td>{data.merchantName && data.merchantName}</td>\r\n                                                                <td>{data.emailId && data.emailId}</td>\r\n                                                                <td>{data.orderId}</td>\r\n                                                                <td>{data.items}</td>\r\n                                                                <td>{data.totalAmount}</td>\r\n                                                                <td>{data.status}</td>\r\n\r\n                                                                <td>{data.order_on}</td>\r\n\r\n                                                               \r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                        {this.state.rows\r\n                                            ? <OutTable\r\n                                                    data={this.state.rows}\r\n                                                    columns={this.state.cols}\r\n                                                    tableClassName=\"ExcelTable2007\"\r\n                                                    tableHeaderRowClass=\"heading\"/>\r\n                                            : ''}\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MerchantPaymentsList;\r\n"]},"metadata":{},"sourceType":"module"}