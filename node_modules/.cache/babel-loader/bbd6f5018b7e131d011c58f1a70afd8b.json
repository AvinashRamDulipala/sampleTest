{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\im-possibillion\\\\src\\\\component\\\\add_employee.js\";\nimport React from \"react\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport { Form } from 'reactstrap';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport { Link } from \"react-router-dom\";\n\nvar AddEmployee =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddEmployee, _React$Component);\n\n  function AddEmployee(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, AddEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEmployee).call(this, props));\n\n    _this.handleChange = function (event) {\n      // console.log(event.target.value);\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid() && _this.state.validError == true) {\n        console.log(_this.state.avatar); // var sessionId = sessionStorage.getItem(\"RoleId\");\n        // var userName = sessionStorage.getItem(\"userName\");\n\n        var dbCon = firebase.database().ref('/Employees');\n        dbCon.push({\n          first_name: _this.state.first_name,\n          last_name: _this.state.last_name,\n          email: _this.state.email,\n          designation: _this.state.designation,\n          mobile_number: _this.state.mobile_number,\n          department: _this.state.department,\n          location: _this.state.location,\n          uploadImage: _this.state.uploadImage,\n          address: _this.state.address,\n          phone_emergency: _this.state.phone_emergency,\n          reporting_manager: _this.state.reporting_manager,\n          date: _this.state.date\n        });\n\n        _this.props.history.push(\"/EmployeeList/Added\");\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = (_this$state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      designation: '',\n      mobile_number: '',\n      department: '',\n      location: '',\n      uploadImage: '',\n      address: '',\n      phone_emergency: '',\n      reporting_manager: '',\n      EmployeesList: [],\n      isUploading: false,\n      error_message: '',\n      date: new Date().toLocaleString(),\n      validError: true\n    }, _defineProperty(_this$state, \"uploadImage\", ''), _defineProperty(_this$state, \"avatar\", \"\"), _defineProperty(_this$state, \"progress\", 0), _defineProperty(_this$state, \"avatarURL\", \"\"), _this$state);\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        passwordvalid: {\n          message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" + \"ter and 1 alphabet.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1;\n          }\n        },\n        passwordMismatch: {\n          message: \"confirm password must match with password field.\",\n          rule: function rule(val, params, validator) {\n            return document.getElementById(\"password_input\").value === val ? true : false;\n          }\n        },\n        AlertquantityStock: {\n          message: \"alert quantity should be less than quantity Instock.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('quantity_stock').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        priceCostValid: {\n          message: \"Selling price should be less than original price.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('price_cost').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        zip: {\n          message: \"Invalid Pin Code\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1;\n          }\n        },\n        website: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        },\n        Fax: {\n          message: \"Invalid fax number \",\n          rule: function rule(val, params, validator) {\n            return validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  } // componentDidMount() {\n  //     this.setState({loading: true});\n  //     var ref = firebase\n  //         .database()\n  //         .ref(\"category/\");\n  //     ref.on('value', snapshot => {\n  //         const data = [];\n  //         snapshot.forEach(childSnapShot => {\n  //             const Categories = {\n  //                 categoryId: childSnapShot\n  //                     .key\n  //                     .toString(),\n  //                 category: childSnapShot\n  //                     .val()\n  //                     .category,\n  //                 created_on: childSnapShot\n  //                     .val()\n  //                     .created_on\n  //             };\n  //             data.push(Categories);\n  //         });\n  //         this.setState({categoryList: data, loading: false});\n  //         console.log(this.state.categoryList);\n  //     });\n  //     var GstData = firebase\n  //         .database()\n  //         .ref(\"GST/\");\n  //     GstData.on('value', snapshot => {\n  //         const data = [];\n  //         snapshot.forEach(childSnapShot => {\n  //             const GSTList = {\n  //                 gstId: childSnapShot\n  //                     .key\n  //                     .toString(),\n  //                 gst: childSnapShot\n  //                     .val()\n  //                     .gst,\n  //                 created_on: childSnapShot\n  //                     .val()\n  //                     .created_on\n  //             };\n  //             data.push(GSTList);\n  //         });\n  //         this.setState({GSTList: data, loading: false});\n  //         console.log(this.state.GSTList);\n  //     });\n  // }\n  // productNameChange = (event) => {\n  //     this.setState({\n  //         [event.target.name]: event.target.value\n  //     });\n  //     var ref = firebase\n  //         .database()\n  //         .ref('products/')\n  //         .orderByChild(\"productName\")\n  //         .equalTo(event.target.value);\n  //     ref.on('value', snapshot => {\n  //         var user_exist = snapshot.numChildren();\n  //         console.log(user_exist);\n  //         if (user_exist > 0) {\n  //             this.setState({error_message: \"Product Name is already exist\", validError: false});\n  //         } else {\n  //             this.setState({error_message: \"\", validError: true});\n  //         }\n  //     })\n  // };\n  // setCategoryName = (e) => {\n  //     console.log(e.target.value);\n  //     let selectedCategoryName = e.target.value;\n  //     var ref = firebase\n  //         .database()\n  //         .ref(\"sub_category\")\n  //         .orderByChild(\"category\")\n  //         .equalTo(selectedCategoryName);\n  //     ref.on('value', snapshot => {\n  //         const data = [];\n  //         snapshot.forEach(childSnapShot => {\n  //             const GSTList = {\n  //                 subCategoryId: childSnapShot\n  //                     .key\n  //                     .toString(),\n  //                 subCategory: childSnapShot\n  //                     .val()\n  //                     .subCategory\n  //             };\n  //             data.push(GSTList);\n  //         });\n  //         this.setState({subcategoryList: data, category: selectedCategoryName, loading: false});\n  //         console.log(this.state.subcategoryList);\n  //     });\n  // };\n\n\n  _createClass(AddEmployee, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, \"Employees\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, \"Add Employees\"), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"Add-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"First Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"first_name\",\n        onChange: this.handleChange,\n        value: this.state.first_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \" \", this.state.error_message)), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Last Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"last_name\",\n        onChange: this.handleChange,\n        value: this.state.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \" \", this.state.error_message)), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"E-mail Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"email\",\n        id: \"price_cost\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), \" \", this.validator.message(\"E-mail Address\", this.state.email, \"required|min:1|max:20\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Department\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"department\",\n        value: this.state.department,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        label: \"Select\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"option\", {\n        value: \"1\",\n        label: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        label: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        label: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"3\")), \" \", this.validator.message(\" Department\", this.state.department, \"required\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"Designation\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"designation\",\n        value: this.state.designation,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        label: \"Select\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"option\", {\n        value: \"1\",\n        label: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        label: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        label: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"3\")), \" \", this.validator.message(\" Designation\", this.state.designation, \"required\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Location\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"location\",\n        value: this.state.location,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        label: \"Select\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"option\", {\n        value: \"1\",\n        label: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        label: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        label: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, \"3\")), \" \", this.validator.message(\" Location\", this.state.location, \"required\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Mobile Number\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"mobile_number\",\n        onChange: this.handleChange,\n        value: this.state.mobile_number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), \" \", this.validator.message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"Phone Number (For emergency conatact)\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"phone_emergency\",\n        onChange: this.handleChange,\n        id: \"phone_emergency\",\n        value: this.state.phone_emergency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }), \" \", this.validator.message(\" Phone Number\", this.state.phone_emergency, \"required|numeric|min:1|max:10\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Reporting Manager\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"reporting_manager\",\n        value: this.state.reporting_manager,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        label: \"Select\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Select\"), React.createElement(\"option\", {\n        value: \"1\",\n        label: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        value: \"2\",\n        label: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        value: \"3\",\n        label: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"3\")), this.validator.message(\" Reporting Manager\", this.state.reporting_manager, \"required\")), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, \"Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"textarea\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\",\n        name: \"address\",\n        onChange: this.handleChange,\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Addresss\", this.state.address, \"required|min:5|max:20\"))), React.createElement(\"div\", {\n        className: \"row m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/EmployeeList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, \"Cancel\")))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddEmployee;\n}(React.Component);\n\nexport default AddEmployee;","map":{"version":3,"sources":["D:\\Git\\im-possibillion\\src\\component\\add_employee.js"],"names":["React","HeaderPage","FooterPage","SidebarPage","firebase","Form","FileUploader","SimpleReactValidator","ReactQuill","Link","AddEmployee","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","validator","allValid","state","validError","console","log","avatar","dbCon","database","ref","push","first_name","last_name","email","designation","mobile_number","department","location","uploadImage","address","phone_emergency","reporting_manager","date","history","showMessages","forceUpdate","EmployeesList","isUploading","error_message","Date","toLocaleString","className","validators","passwordvalid","message","rule","val","params","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","AlertquantityStock","qty","Number","priceCostValid","whitespace","specialChar","specialCharText","zip","website","Fax","color","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            designation: '',\r\n            mobile_number: '',\r\n            department: '',\r\n            location: '',\r\n            uploadImage: '',\r\n            address: '',\r\n            phone_emergency:'',\r\n            reporting_manager:'',\r\n            EmployeesList: [],\r\n           \r\n            isUploading: false,\r\n            error_message: '',\r\n            date: new Date().toLocaleString(),\r\n            validError: true,\r\n            uploadImage: '',\r\n            avatar: \"\",\r\n           \r\n            progress: 0,\r\n            avatarURL: \"\",\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                priceCostValid: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('price_cost')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.setState({loading: true});\r\n    //     var ref = firebase\r\n    //         .database()\r\n    //         .ref(\"category/\");\r\n\r\n    //     ref.on('value', snapshot => {\r\n    //         const data = [];\r\n\r\n    //         snapshot.forEach(childSnapShot => {\r\n\r\n    //             const Categories = {\r\n    //                 categoryId: childSnapShot\r\n    //                     .key\r\n    //                     .toString(),\r\n    //                 category: childSnapShot\r\n    //                     .val()\r\n    //                     .category,\r\n    //                 created_on: childSnapShot\r\n    //                     .val()\r\n    //                     .created_on\r\n    //             };\r\n\r\n    //             data.push(Categories);\r\n    //         });\r\n\r\n    //         this.setState({categoryList: data, loading: false});\r\n    //         console.log(this.state.categoryList);\r\n    //     });\r\n\r\n    //     var GstData = firebase\r\n    //         .database()\r\n    //         .ref(\"GST/\");\r\n\r\n    //     GstData.on('value', snapshot => {\r\n    //         const data = [];\r\n\r\n    //         snapshot.forEach(childSnapShot => {\r\n\r\n    //             const GSTList = {\r\n    //                 gstId: childSnapShot\r\n    //                     .key\r\n    //                     .toString(),\r\n    //                 gst: childSnapShot\r\n    //                     .val()\r\n    //                     .gst,\r\n    //                 created_on: childSnapShot\r\n    //                     .val()\r\n    //                     .created_on\r\n    //             };\r\n\r\n    //             data.push(GSTList);\r\n    //         });\r\n\r\n    //         this.setState({GSTList: data, loading: false});\r\n    //         console.log(this.state.GSTList);\r\n    //     });\r\n    // }\r\n\r\n   \r\n    // productNameChange = (event) => {\r\n    //     this.setState({\r\n    //         [event.target.name]: event.target.value\r\n    //     });\r\n\r\n    //     var ref = firebase\r\n    //         .database()\r\n    //         .ref('products/')\r\n    //         .orderByChild(\"productName\")\r\n    //         .equalTo(event.target.value);\r\n    //     ref.on('value', snapshot => {\r\n    //         var user_exist = snapshot.numChildren();\r\n    //         console.log(user_exist);\r\n\r\n    //         if (user_exist > 0) {\r\n\r\n    //             this.setState({error_message: \"Product Name is already exist\", validError: false});\r\n    //         } else {\r\n    //             this.setState({error_message: \"\", validError: true});\r\n\r\n    //         }\r\n\r\n    //     })\r\n\r\n    // };\r\n    // setCategoryName = (e) => {\r\n    //     console.log(e.target.value);\r\n\r\n    //     let selectedCategoryName = e.target.value;\r\n\r\n    //     var ref = firebase\r\n    //         .database()\r\n    //         .ref(\"sub_category\")\r\n    //         .orderByChild(\"category\")\r\n    //         .equalTo(selectedCategoryName);\r\n\r\n    //     ref.on('value', snapshot => {\r\n\r\n    //         const data = [];\r\n\r\n    //         snapshot.forEach(childSnapShot => {\r\n\r\n    //             const GSTList = {\r\n    //                 subCategoryId: childSnapShot\r\n    //                     .key\r\n    //                     .toString(),\r\n    //                 subCategory: childSnapShot\r\n    //                     .val()\r\n    //                     .subCategory\r\n    //             };\r\n\r\n    //             data.push(GSTList);\r\n    //         });\r\n\r\n    //         this.setState({subcategoryList: data, category: selectedCategoryName, loading: false});\r\n    //         console.log(this.state.subcategoryList);\r\n    //     });\r\n\r\n    // };\r\n    handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    // handleUploadStart = () => {\r\n\r\n    //     this.setState({isUploading: true, uploadProgress: 0});\r\n\r\n    // }\r\n    // handleFrontImageUploadStart = () => this.setState({isUploading: true, uploadProgress: 0, avatarURL: ''});\r\n    // handleProgress = progress => this.setState({uploadProgress: progress});\r\n\r\n    // handleUploadError = error => {\r\n    //     this.setState({\r\n    //         isUploading: false\r\n    //         // Todo: handle error\r\n    //     });\r\n    //     console.error(error);\r\n    // };\r\n    // handleFrontImageUploadSuccess = filename => {\r\n    //     this.setState({avatar: filename, progress: 100, isUploading: false});\r\n    //     firebase\r\n    //         .storage()\r\n    //         .ref(\"images\")\r\n    //         .child(filename)\r\n    //         .getDownloadURL()\r\n    //         .then(url => this.setState({avatarURL: url}));\r\n    // };\r\n    // handleUploadSuccess = async filename => {\r\n    //     const downloadURL = await firebase\r\n    //         .storage()\r\n    //         .ref(\"images\")\r\n    //         .child(filename)\r\n    //         .getDownloadURL();\r\n\r\n    //     this.setState(oldState => ({\r\n    //         filenames: [\r\n    //             ...oldState.filenames,\r\n    //             filename\r\n    //         ],\r\n    //         downloadURLs: [\r\n    //             ...oldState.downloadURLs,\r\n    //             downloadURL\r\n    //         ],\r\n    //         uploadProgress: 100,\r\n    //         isUploading: false\r\n    //     }));\r\n    // };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid() && this.state.validError == true) {\r\n            console.log(this.state.avatar);\r\n            // var sessionId = sessionStorage.getItem(\"RoleId\");\r\n            // var userName = sessionStorage.getItem(\"userName\");\r\n\r\n            let dbCon = firebase\r\n                .database()\r\n                .ref('/Employees');\r\n            dbCon.push({\r\n               \r\n                first_name: this.state.first_name,\r\n                last_name: this.state.last_name,\r\n                email: this.state.email,\r\n                designation: this.state.designation,\r\n                mobile_number: this.state.mobile_number,\r\n                department: this.state.department,\r\n                location: this.state.location,\r\n                uploadImage: this.state.uploadImage,\r\n                address: this.state.address,\r\n                phone_emergency:this.state.phone_emergency,\r\n                reporting_manager:this.state.reporting_manager,\r\n                date: this.state.date,\r\n               \r\n            });\r\n            this\r\n                .props\r\n                .history\r\n                .push(\"/EmployeeList/Added\");\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Employees</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add Employees</h4>\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>First Name<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"first_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.first_name}/> {this\r\n                                                                .validator\r\n                                                                .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Last Name<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"last_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.last_name}/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                                <div className=\"text-danger\">\r\n                                                                    {\" \"}\r\n                                                                    {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>E-mail Address<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"email\"\r\n                                                                id=\"price_cost\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.email}/> {this\r\n                                                                .validator\r\n                                                                .message(\"E-mail Address\", this.state.email, \"required|min:1|max:20\")}\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Department<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                          \r\n                                                                 <select\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"department\"\r\n                                                                value={this.state.department}\r\n                                                                onChange={this.handleChange}>\r\n                                                                <option value=\"\" label=\"Select\" selected=\"selected\">Select</option>\r\n                                                                \r\n                                       \r\n                                                                <option value=\"1\" label=\"1\">1</option>\r\n                                                                <option value=\"2\" label=\"2\">2</option>\r\n                                                                <option value=\"3\" label=\"3\">3</option>\r\n                                                               \r\n                                                            </select> {this\r\n                                                                .validator\r\n                                                                .message(\" Department\", this.state.department, \"required\")}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Designation<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                          \r\n                                                                 <select\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"designation\"\r\n                                                                value={this.state.designation}\r\n                                                                onChange={this.handleChange}>\r\n                                                                <option value=\"\" label=\"Select\" selected=\"selected\">Select</option>\r\n                                                                \r\n                                       \r\n                                                                <option value=\"1\" label=\"1\">1</option>\r\n                                                                <option value=\"2\" label=\"2\">2</option>\r\n                                                                <option value=\"3\" label=\"3\">3</option>\r\n                                                               \r\n                                                            </select> {this\r\n                                                                .validator\r\n                                                                .message(\" Designation\", this.state.designation, \"required\")}\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Location<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                          \r\n                                                                 <select\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"location\"\r\n                                                                value={this.state.location}\r\n                                                                onChange={this.handleChange}>\r\n                                                                <option value=\"\" label=\"Select\" selected=\"selected\">Select</option>\r\n                                                                \r\n                                       \r\n                                                                <option value=\"1\" label=\"1\">1</option>\r\n                                                                <option value=\"2\" label=\"2\">2</option>\r\n                                                                <option value=\"3\" label=\"3\">3</option>\r\n                                                               \r\n                                                            </select> {this\r\n                                                                .validator\r\n                                                                .message(\" Location\", this.state.location, \"required\")}\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Mobile Number<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"mobile_number\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.mobile_number}/> {this\r\n                                                                .validator\r\n                                                                .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n\r\n                                                        </div>\r\n\r\n                                                        {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>E_Mail<span style={{ color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            <select\r\n                                                                className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                name=\"category\"\r\n                                                                value={this.state.category}\r\n                                                                onChange={this.setCategoryName}>\r\n                                                                <option>Select Category</option>j\r\n                                                                {this\r\n                                                                    .state\r\n                                                                    .categoryList\r\n                                                                    .map((data, index) => {\r\n\r\n                                                                        return (\r\n                                                                            <option value={data.category} key={index}>{data.category}</option>\r\n                                                                        )\r\n                                                                       \r\n\r\n                                                                    })}\r\n \r\n                                                            </select>\r\n                                                            {\r\n                                                                            this\r\n                                                                                .validator\r\n                                                                                .message(\"Select category\", this.state.category, \"required\")\r\n                                                                        }\r\n                                                        </div> */}\r\n                                                         <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Phone Number (For emergency conatact)<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"phone_emergency\"\r\n                                                                onChange={this.handleChange}\r\n                                                                id=\"phone_emergency\"\r\n                                                                value={this.state.phone_emergency}/> {this\r\n                                                                .validator\r\n                                                                .message(\" Phone Number\", this.state.phone_emergency, \"required|numeric|min:1|max:10\")}\r\n\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Reporting Manager<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                               <select\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"reporting_manager\"\r\n                                                                value={this.state.reporting_manager}\r\n                                                                onChange={this.handleChange}>\r\n                                                                <option value=\"\" label=\"Select\" selected=\"selected\">Select</option>\r\n                                                                \r\n                                       \r\n                                                                <option value=\"1\" label=\"1\">1</option>\r\n                                                                <option value=\"2\" label=\"2\">2</option>\r\n                                                                <option value=\"3\" label=\"3\">3</option>\r\n                                                               \r\n                                                            </select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  {this\r\n                                                                .validator\r\n                                                                .message(\" Reporting Manager\", this.state.reporting_manager, \"required\")}\r\n\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Address<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <textarea\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"address\"\r\n                                                                onChange={this.handleChange}\r\n                                                               \r\n                                                                value={this.state.address}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Addresss\", this.state.address, \"required|min:5|max:20\")}\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                     <div className=\"row m-b-20\">\r\n                                                        {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n\r\n                                                            <div className=\"dz-message needsclick download-custom\">\r\n\r\n                                                                <i className=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\r\n                                                                <h2>Front Image Upload\r\n                                                                    <span className=\"size_clr\">(512x512px)</span>\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                        color: 'red'\r\n                                                                    }}>*</span>\r\n                                                                </h2>\r\n\r\n                                                            </div>\r\n                                                            {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                                                            {this.state.avatarURL && <img src={this.state.avatarURL} />}\r\n                                                            {this.state.avatarURL && <img\r\n                                                                src={this.state.avatarURL}\r\n                                                                style={{\r\n                                                                height: \"200px\",\r\n                                                                width: \"200px\"\r\n                                                            }}/>}\r\n                                                            <FileUploader\r\n                                                                accept=\"image/*\"\r\n                                                                name=\"avatar\"\r\n                                                                randomizeFilename\r\n                                                                storageRef={firebase\r\n                                                                .storage()\r\n                                                                .ref(\"images\")}\r\n                                                                onUploadStart={this.handleFrontImageUploadStart}\r\n                                                                onUploadError={this.handleUploadError}\r\n                                                                onUploadSuccess={this.handleFrontImageUploadSuccess}\r\n                                                                onProgress={this.handleProgress}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Front Image Upload\", this.state.avatarURL, \"required\")}\r\n\r\n                                                        </div> */}\r\n\r\n                                                      \r\n\r\n                                                    </div> \r\n\r\n                                                   \r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"text-center custom-pro-edt-ds\">\r\n                                                                <button\r\n                                                                    type=\"submit\"\r\n                                                                    className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                                </button>\r\n                                                                <Link to=\"/EmployeeList\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEmployee;\r\n"]},"metadata":{},"sourceType":"module"}