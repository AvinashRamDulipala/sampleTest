{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\im-possibillion\\\\src\\\\auth\\\\Login.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form } from 'reactstrap';\nimport firebase from '../config';\nimport SimpleReactValidator from \"simple-react-validator\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var _this$state = _this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n        firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n          var user = result.user;\n          var ref = firebase.database().ref(\"admin_users/\".concat(user.uid));\n          ref.on('value', function (snapshot) {\n            var gstData = snapshot.val();\n\n            if (gstData.status == \"Active\") {\n              sessionStorage.setItem(\"RoleId\", user.uid);\n              sessionStorage.setItem(\"email\", email);\n              sessionStorage.setItem(\"userRole\", gstData.Role); // sessionStorage.setItem(\"last_name\", gstData.last_name);\n\n              _this.props.history.push(\"/Dashboard\");\n            } else {\n              _this.setState({\n                employer_sevice_message: \"Invalid username/Password\"\n              });\n            }\n          });\n        }).catch(function (error) {\n          _this.setState({\n            error: error\n          });\n\n          console.log(_this.state.error);\n\n          _this.setState({\n            employer_sevice_message: _this.state.error.message\n          });\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      error: null,\n      employer_sevice_message: \"\",\n      showLoading: false\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        passwordvalid: {\n          message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" + \"ter and 1 alphabet.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1;\n          }\n        },\n        passwordMismatch: {\n          message: \"confirm password must match with password field.\",\n          rule: function rule(val, params, validator) {\n            return document.getElementById(\"password_input\").value === val ? true : false;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"color-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center m-b-md custom-login m-t-80 m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Shopality - Login\"))), React.createElement(\"div\", {\n        className: \"hpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        id: \"username\",\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        placeholder: \"example@gmail.com\",\n        title: \"Please enter you username\",\n        required: true,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Email\", this.state.email, \"required|email|min:6|max:70\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"Password\",\n        name: \"password\",\n        value: password,\n        onChange: this.onChange,\n        title: \"Please enter your password\",\n        placeholder: \"******\",\n        className: \"form-control\",\n        id: \"password_input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")), React.createElement(\"button\", {\n        className: \"btn btn-success btn-block loginbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Login\"), this.state.employer_sevice_message ? React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, this.state.employer_sevice_message) : \"\", \" \"))), React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["D:\\Git\\im-possibillion\\src\\auth\\Login.js"],"names":["React","Link","Form","firebase","SimpleReactValidator","Login","props","handleSubmit","event","preventDefault","validator","allValid","state","email","password","auth","signInWithEmailAndPassword","then","result","user","ref","database","uid","on","snapshot","gstData","val","status","sessionStorage","setItem","Role","history","push","setState","employer_sevice_message","catch","error","console","log","message","showMessages","forceUpdate","onChange","target","name","value","showLoading","className","validators","passwordvalid","rule","params","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form} from 'reactstrap';\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: null,\r\n            employer_sevice_message: \"\",\r\n            showLoading: false\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.validator.allValid()) {\r\n\r\n            const {email, password} = this.state;\r\n\r\n            firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then((result) => {\r\n                     var user = result.user;\r\n                    var ref = firebase\r\n                    .database()\r\n                    .ref(`admin_users/${user.uid}`);\r\n                    ref.on('value', snapshot => {\r\n                        var gstData = snapshot.val();\r\n                      \r\n                        if(gstData.status == \"Active\"){\r\n\r\n                            sessionStorage.setItem(\"RoleId\", user.uid);\r\n                             sessionStorage.setItem(\"email\", email);\r\n                             sessionStorage.setItem(\"userRole\", gstData.Role);\r\n                            // sessionStorage.setItem(\"last_name\", gstData.last_name);\r\n                            this\r\n                            .props\r\n                            .history\r\n                            .push(\"/Dashboard\");\r\n    \r\n                        }else{\r\n                            this.setState({employer_sevice_message: \"Invalid username/Password\"});\r\n                        }\r\n                       \r\n                       \r\n                    });\r\n\r\n                   \r\n                })\r\n                .catch(error => {\r\n                    this.setState({error});\r\n                    console.log(this.state.error);\r\n                    this.setState({employer_sevice_message: this.state.error.message});\r\n                });\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {email, password, error} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"color-line\"></div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <Form onSubmit={this.handleSubmit} id=\"login-form\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n                            <div className=\"col-md-4 col-md-4 col-sm-4 col-xs-12\">\r\n                                <div className=\"text-center m-b-md custom-login m-t-80 m-b-20\">\r\n                                    <h1>\r\n                                        <b>Shopality - Login</b>\r\n                                    </h1>\r\n                                </div>\r\n                                <div className=\"hpanel\">\r\n                                    <div className=\"panel-body\">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Email</label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                id=\"username\"\r\n                                                name=\"email\"\r\n                                                value={email}\r\n                                                onChange={this.onChange}\r\n                                                placeholder=\"example@gmail.com\"\r\n                                                title=\"Please enter you username\"\r\n                                                required\r\n                                                className=\"form-control\"/> {this\r\n                                                .validator\r\n                                                .message(\"Email\", this.state.email, \"required|email|min:6|max:70\")}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Password</label>\r\n                                            <input\r\n                                                type=\"Password\"\r\n                                                name=\"password\"\r\n                                                value={password}\r\n                                                onChange={this.onChange}\r\n                                                title=\"Please enter your password\"\r\n                                                placeholder=\"******\"\r\n                                                className=\"form-control\"\r\n                                                id=\"password_input\"/> {this\r\n                                                .validator\r\n                                                .message(\"Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")}\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success btn-block loginbtn\">Login</button>\r\n\r\n                                        {this.state.employer_sevice_message\r\n                                            ? (\r\n                                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                                    {this.state.employer_sevice_message}\r\n                                                </div>\r\n                                            )\r\n                                            : (\"\")}{\" \"}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}