{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\editseopage.js\";\nimport React from \"react\";\nimport { Form } from 'reactstrap';\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nvar EditSEOPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditSEOPage, _React$Component);\n\n  function EditSEOPage(props) {\n    var _this;\n\n    _classCallCheck(this, EditSEOPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditSEOPage).call(this, props));\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleUploadStart = function () {\n      return _this.setState({\n        isUploading: true,\n        progress: 0\n      });\n    };\n\n    _this.handleProgress = function (progress) {\n      return _this.setState({\n        progress: progress\n      });\n    };\n\n    _this.handleUploadError = function (error) {\n      _this.setState({\n        isUploading: false\n      });\n\n      console.error(error);\n    };\n\n    _this.handleUploadSuccess = function (filename) {\n      _this.setState({\n        avatar: filename,\n        progress: 100,\n        isUploading: false\n      });\n\n      console.log(_this.state.avatar);\n      firebase.storage().ref(\"images\").child(filename).getDownloadURL().then(function (url) {\n        return _this.setState({\n          avatarURL: url\n        });\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        event.preventDefault();\n\n        _this.addNotification();\n\n        var CMSID = _this.props.match.params.CMSID;\n        var dbCon = firebase.database().ref(\"/SEOPages/\".concat(CMSID));\n        console.log(dbCon);\n        dbCon.update({\n          pageTitle: _this.state.pageTitle,\n          title: _this.state.title,\n          charset: _this.state.charset,\n          keywords: _this.state.keywords,\n          description: _this.state.description,\n          viewport: _this.state.viewport,\n          robots: _this.state.robots,\n          domainverify: _this.state.domainverify,\n          twittersite: _this.state.twittersite,\n          twittercreator: _this.state.twittercreator,\n          twittercard: _this.state.twittercard,\n          twitterplayer: _this.state.twitterplayer,\n          twittertitle: _this.state.twittertitle,\n          twitterimage: _this.state.twitterimage,\n          twitterdescription: _this.state.twitterdescription,\n          geoplacename: _this.state.geoplacename,\n          geoposition: _this.state.geoposition,\n          georegion: _this.state.georegion,\n          ICBM: _this.state.ICBM,\n          oglocale: _this.state.oglocale,\n          ogsitename: _this.state.ogsitename,\n          ogtitle: _this.state.ogtitle,\n          ogdescription: _this.state.ogdescription,\n          ogtype: _this.state.ogtype,\n          ogurl: _this.state.ogurl,\n          ogimage: _this.state.avatarURL,\n          created_on: _this.state.date\n        });\n\n        _this.setState({});\n\n        _this.props.history.push(\"/SEOPages\");\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      pageTitle: '',\n      date: new Date().toLocaleString(),\n      description: '',\n      theme: 'snow',\n      avatar: \"\",\n      isUploading: false,\n      progress: 0,\n      avatarURL: \"\",\n      title: '',\n      charset: '',\n      keywords: '',\n      viewport: '',\n      robots: '',\n      domainverify: '',\n      twittersite: '',\n      twittercreator: '',\n      twittercard: '',\n      twitterplayer: '',\n      twittertitle: '',\n      twitterimage: '',\n      twitterdescription: '',\n      geoplacename: '',\n      geoposition: '',\n      georegion: '',\n      ICBM: '',\n      oglocale: '',\n      ogsitename: '',\n      ogtitle: '',\n      ogdescription: '',\n      ogtype: '',\n      ogurl: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNotification = _this.addNotification.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.notificationDOMRef = React.createRef();\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        url: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(EditSEOPage, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.setState({\n        description: value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var CMSID = this.props.match.params.CMSID;\n      console.log(CMSID);\n      var ref = firebase.database().ref(\"SEOPages/\".concat(CMSID));\n      ref.on('value', function (snapshot) {\n        var gstData = snapshot.val();\n        console.log(gstData);\n\n        _this2.setState({\n          pageTitle: gstData.pageTitle,\n          title: gstData.title,\n          charset: gstData.charset,\n          keywords: gstData.keywords,\n          description: gstData.description,\n          viewport: gstData.viewport,\n          domainverify: gstData.domainverify,\n          twittersite: gstData.twittersite,\n          twittercreator: gstData.twittercreator,\n          twittercard: gstData.twittercard,\n          twitterplayer: gstData.twitterplayer,\n          twittertitle: gstData.twittertitle,\n          twitterimage: gstData.twitterimage,\n          geoplacename: gstData.geoplacename,\n          geoposition: gstData.geoposition,\n          georegion: gstData.georegion,\n          ICBM: gstData.ICBM,\n          oglocale: gstData.oglocale,\n          ogsitename: gstData.ogsitename,\n          ogtitle: gstData.ogtitle,\n          ogdescription: gstData.ogdescription,\n          ogtype: gstData.ogtype,\n          ogurl: gstData.ogurl,\n          created_on: gstData.date,\n          robots: gstData.robots,\n          twitterdescription: gstData.twitterdescription,\n          avatarURL: gstData.ogimage,\n          ogimage: gstData.ogimage,\n          loading: false\n        }); //console.log(this.state.pageTitle);\n\n      });\n    }\n  }, {\n    key: \"addNotification\",\n    value: function addNotification() {\n      this.notificationDOMRef.current.addNotification({\n        title: \"Success\",\n        message: \"Succesfully added!\",\n        type: \"success\",\n        insert: \"bottom\",\n        container: \"top-center\",\n        animationIn: [\"animated\", \"fadeIn\"],\n        animationOut: [\"animated\", \"fadeOut\"],\n        dismiss: {\n          duration: 2000\n        },\n        dismissable: {\n          click: true\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        'height': '300px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Settings\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Edit SEO Page\"), React.createElement(ReactNotification, {\n        ref: this.notificationDOMRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form-horizontal\",\n        onSubmit: this.handleSubmit,\n        role: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"Page Name\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Page Title\",\n        id: \"add_GST\",\n        name: \"pageTitle\",\n        onChange: this.onChange,\n        value: this.state.pageTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Page Name\", this.state.pageTitle, \"required\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \" \", this.state.employer_sevice_message), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        onChange: this.onChange,\n        value: this.state.title,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }), \" \", this.validator.message(\"title\", this.state.title, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"charset\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"charset\",\n        id: \"charset\",\n        onChange: this.onChange,\n        value: this.state.charset,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), \" \", this.validator.message(\"charset\", this.state.charset, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Keywords\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"keywords\",\n        id: \"keywords\",\n        onChange: this.onChange,\n        value: this.state.keywords,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), \" \", this.validator.message(\"keywords\", this.state.keywords, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(ReactQuill, {\n        theme: this.state.theme,\n        value: this.state.description,\n        placeholder: \"Enter Text\",\n        onChange: this.handleChange,\n        className: \"add-new-post__editor mb-1\",\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), \" \", this.validator.message(\"description\", this.state.description, \"required\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"viewport\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"viewport\",\n        id: \"viewport\",\n        onChange: this.onChange,\n        value: this.state.viewport,\n        className: \"required form-control\",\n        placeholder: \"viewport\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), \" \", this.validator.message(\"viewport\", this.state.viewport, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Domain Verify\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"domainverify\",\n        id: \"domainverify\",\n        onChange: this.onChange,\n        value: this.state.domainverify,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), \" \", this.validator.message(\"domainverify\", this.state.domainverify, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"twitter:site\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittersite\",\n        id: \"twittersite\",\n        onChange: this.onChange,\n        value: this.state.twittersite,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittersite\", this.state.twittersite, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"twitter:creator\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittercreator\",\n        id: \"twittercreator\",\n        onChange: this.onChange,\n        value: this.state.twittercreator,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittercreator\", this.state.twittercreator, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"twitter:card\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittercard\",\n        id: \"twittercard\",\n        onChange: this.onChange,\n        value: this.state.twittercard,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittercard\", this.state.twittercard, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"robots\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"robots\",\n        id: \"robots\",\n        onChange: this.onChange,\n        value: this.state.robots,\n        className: \"required form-control\",\n        placeholder: \"INDEX, FOLLOW\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }), \" \", this.validator.message(\"robots\", this.state.robots, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"twitter:player\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterplayer\",\n        id: \"twitterplayer\",\n        onChange: this.onChange,\n        value: this.state.twitterplayer,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterplayer\", this.state.twitterplayer, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"twitter:title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twittertitle\",\n        id: \"twittertitle\",\n        onChange: this.onChange,\n        value: this.state.twittertitle,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twittertitle\", this.state.twittertitle, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"twitter:description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterdescription\",\n        id: \"twitterdescription\",\n        onChange: this.onChange,\n        value: this.state.twitterdescription,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterdescription\", this.state.twitterdescription, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"twitter:image URL\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"twitterimage\",\n        id: \"twitterimage\",\n        onChange: this.onChange,\n        value: this.state.twitterimage,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }), \" \", this.validator.message(\"twitterimage Url\", this.state.twitterimage, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \"geo.placename\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"geoplacename\",\n        id: \"geoplacename\",\n        onChange: this.onChange,\n        value: this.state.geoplacename,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }), \" \", this.validator.message(\"geoplacename\", this.state.geoplacename, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, \"geo.position\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"geoposition\",\n        id: \"geoposition\",\n        onChange: this.onChange,\n        value: this.state.geoposition,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }), \" \", this.validator.message(\"geoposition\", this.state.geoposition, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, \"geo.region\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"georegion\",\n        id: \"georegion\",\n        onChange: this.onChange,\n        value: this.state.georegion,\n        className: \"required form-control\",\n        placeholder: \"IN-Telangana\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }), \" \", this.validator.message(\"georegion\", this.state.georegion, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, \"ICBM\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ICBM\",\n        id: \"ICBM\",\n        onChange: this.onChange,\n        value: this.state.ICBM,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ICBM\", this.state.ICBM, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, \"og:locale\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"oglocale\",\n        id: \"oglocale\",\n        onChange: this.onChange,\n        value: this.state.oglocale,\n        className: \"required form-control\",\n        placeholder: \"en_US\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }), \" \", this.validator.message(\"oglocale\", this.state.oglocale, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, \"og:site_name\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogsitename\",\n        id: \"ogsitename\",\n        onChange: this.onChange,\n        value: this.state.ogsitename,\n        className: \"required form-control\",\n        placeholder: \"edibyl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogsitename\", this.state.ogsitename, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }, \"og:title\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 701\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogtitle\",\n        id: \"ogtitle\",\n        onChange: this.onChange,\n        value: this.state.ogtitle,\n        className: \"required form-control\",\n        placeholder: \"ogtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogtitle\", this.state.ogtitle, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, \"og:description\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogdescription\",\n        id: \"ogdescription\",\n        onChange: this.onChange,\n        value: this.state.ogdescription,\n        className: \"required form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogdescription\", this.state.ogdescription, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, \"og:type\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogtype\",\n        id: \"ogtype\",\n        onChange: this.onChange,\n        value: this.state.ogtype,\n        className: \"required form-control\",\n        placeholder: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ogtype\", this.state.ogtype, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, \"og:image\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, this.state.isUploading && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, \"Progress: \", this.state.progress), this.state.avatarURL && React.createElement(\"img\", {\n        src: this.state.avatarURL,\n        style: {\n          height: \"200px\",\n          width: \"250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }), React.createElement(FileUploader, {\n        accept: \"image/*\",\n        name: \"avatar\",\n        randomizeFilename: true,\n        storageRef: firebase.storage().ref(\"images\"),\n        onUploadStart: this.handleUploadStart,\n        onUploadError: this.handleUploadError,\n        onUploadSuccess: this.handleUploadSuccess,\n        onProgress: this.handleProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Upload Product Image\", this.state.avatarURL, \"required\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"inputEmail3\",\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, \"og:url\"), React.createElement(\"div\", {\n        className: \"col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"ogurl\",\n        id: \"ogurl\",\n        onChange: this.onChange,\n        value: this.state.ogurl,\n        className: \"required form-control\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Upload Product Image\", this.state.ogurl, \"required\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, \"Save\"))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditSEOPage;\n}(React.Component);\n\nexport default EditSEOPage;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\editseopage.js"],"names":["React","Form","HeaderPage","FooterPage","SidebarPage","firebase","ReactQuill","FileUploader","ReactNotification","SimpleReactValidator","EditSEOPage","props","onChange","event","setState","target","name","value","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","error","console","handleUploadSuccess","filename","avatar","log","state","storage","ref","child","getDownloadURL","then","url","avatarURL","handleSubmit","preventDefault","validator","allValid","addNotification","CMSID","match","params","dbCon","database","update","pageTitle","title","charset","keywords","description","viewport","robots","domainverify","twittersite","twittercreator","twittercard","twitterplayer","twittertitle","twitterimage","twitterdescription","geoplacename","geoposition","georegion","ICBM","oglocale","ogsitename","ogtitle","ogdescription","ogtype","ogurl","ogimage","created_on","date","history","push","showMessages","forceUpdate","Date","toLocaleString","theme","handleChange","bind","notificationDOMRef","createRef","className","validators","whitespace","message","rule","val","helpers","testRegex","indexOf","specialChar","specialCharText","on","snapshot","gstData","loading","current","type","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","divStyle","employer_sevice_message","color","height","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport {Form} from 'reactstrap';\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass EditSEOPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageTitle: '',\r\n            date: new Date().toLocaleString(),\r\n            description: '',\r\n            theme: 'snow',\r\n            avatar: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            avatarURL: \"\",\r\n            title: '',\r\n            charset: '',\r\n            keywords: '',\r\n            viewport: '',\r\n            robots: '',\r\n            domainverify: '',\r\n            twittersite: '',\r\n            twittercreator: '',\r\n            twittercard: '',\r\n            twitterplayer: '',\r\n            twittertitle: '',\r\n            twitterimage: '',\r\n            twitterdescription: '',\r\n            geoplacename: '',\r\n            geoposition: '',\r\n            georegion: '',\r\n            ICBM: '',\r\n            oglocale: '',\r\n            ogsitename: '',\r\n            ogtitle: '',\r\n            ogdescription: '',\r\n            ogtype: '',\r\n            ogurl: ''\r\n        }\r\n        this.handleChange = this\r\n            .handleChange\r\n            .bind(this);\r\n        this.onChange = this\r\n            .onChange\r\n            .bind(this);\r\n        this.addNotification = this\r\n            .addNotification\r\n            .bind(this);\r\n        this.notificationDOMRef = React.createRef();\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                url: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    handleChange(value) {\r\n        this.setState({description: value})\r\n    };\r\n    componentDidMount() {\r\n        const {CMSID} = this.props.match.params;\r\n        console.log(CMSID);\r\n\r\n        var ref = firebase\r\n            .database()\r\n            .ref(`SEOPages/${CMSID}`);\r\n\r\n        ref.on('value', snapshot => {\r\n            var gstData = snapshot.val();\r\n            console.log(gstData)\r\n            this.setState({\r\n                pageTitle: gstData.pageTitle,\r\n                title: gstData.title,\r\n                charset: gstData.charset,\r\n                keywords: gstData.keywords,\r\n                description: gstData.description,\r\n                viewport: gstData.viewport,\r\n                domainverify: gstData.domainverify,\r\n                twittersite: gstData.twittersite,\r\n                twittercreator: gstData.twittercreator,\r\n                twittercard: gstData.twittercard,\r\n                twitterplayer: gstData.twitterplayer,\r\n                twittertitle: gstData.twittertitle,\r\n                twitterimage: gstData.twitterimage,\r\n                geoplacename: gstData.geoplacename,\r\n                geoposition: gstData.geoposition,\r\n                georegion: gstData.georegion,\r\n                ICBM: gstData.ICBM,\r\n                oglocale: gstData.oglocale,\r\n                ogsitename: gstData.ogsitename,\r\n                ogtitle: gstData.ogtitle,\r\n                ogdescription: gstData.ogdescription,\r\n                ogtype: gstData.ogtype,\r\n                ogurl: gstData.ogurl,\r\n                created_on: gstData.date,\r\n                robots: gstData.robots,\r\n                twitterdescription: gstData.twitterdescription,\r\n                avatarURL: gstData.ogimage,\r\n                ogimage: gstData.ogimage,\r\n\r\n                loading: false\r\n            });\r\n            //console.log(this.state.pageTitle);\r\n        });\r\n\r\n    }\r\n    onChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    addNotification() {\r\n        this\r\n            .notificationDOMRef\r\n            .current\r\n            .addNotification({\r\n                title: \"Success\",\r\n                message: \"Succesfully added!\",\r\n                type: \"success\",\r\n                insert: \"bottom\",\r\n                container: \"top-center\",\r\n                animationIn: [\r\n                    \"animated\", \"fadeIn\"\r\n                ],\r\n                animationOut: [\r\n                    \"animated\", \"fadeOut\"\r\n                ],\r\n                dismiss: {\r\n                    duration: 2000\r\n                },\r\n                dismissable: {\r\n                    click: true\r\n                }\r\n            });\r\n    }\r\n    handleUploadStart = () => this.setState({isUploading: true, progress: 0});\r\n    handleProgress = progress => this.setState({progress});\r\n    handleUploadError = error => {\r\n        this.setState({isUploading: false});\r\n        console.error(error);\r\n    };\r\n    handleUploadSuccess = filename => {\r\n        this.setState({avatar: filename, progress: 100, isUploading: false});\r\n        console.log(this.state.avatar);\r\n        firebase\r\n            .storage()\r\n            .ref(\"images\")\r\n            .child(filename)\r\n            .getDownloadURL()\r\n            .then(url => this.setState({avatarURL: url}));\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n         if (this.validator.allValid()) {\r\n\r\n           \r\n                event.preventDefault();\r\n                this.addNotification();\r\n                const {CMSID} = this.props.match.params;\r\n            let dbCon = firebase\r\n                .database()\r\n                .ref(`/SEOPages/${CMSID}`);\r\n            console.log(dbCon);\r\n            dbCon.update({\r\n                pageTitle: this.state.pageTitle,\r\n                title: this.state.title,\r\n                charset: this.state.charset,\r\n                keywords: this.state.keywords,\r\n                description: this.state.description,\r\n                viewport: this.state.viewport,\r\n                robots: this.state.robots,\r\n                domainverify: this.state.domainverify,\r\n                twittersite: this.state.twittersite,\r\n                twittercreator: this.state.twittercreator,\r\n                twittercard: this.state.twittercard,\r\n                twitterplayer: this.state.twitterplayer,\r\n                twittertitle: this.state.twittertitle,\r\n                twitterimage: this.state.twitterimage,\r\n                twitterdescription: this.state.twitterdescription,\r\n                geoplacename: this.state.geoplacename,\r\n                geoposition: this.state.geoposition,\r\n                georegion: this.state.georegion,\r\n                ICBM: this.state.ICBM,\r\n                oglocale: this.state.oglocale,\r\n                ogsitename: this.state.ogsitename,\r\n                ogtitle: this.state.ogtitle,\r\n                ogdescription: this.state.ogdescription,\r\n                ogtype: this.state.ogtype,\r\n                ogurl: this.state.ogurl,\r\n                ogimage: this.state.avatarURL,\r\n                created_on: this.state.date\r\n            });\r\n            this.setState({});\r\n            this\r\n                .props\r\n                .history\r\n                .push(\"/SEOPages\");\r\n        \r\n    } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const divStyle = {\r\n            'height': '300px'\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Settings</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Edit SEO Page</h4>\r\n                                            <ReactNotification ref={this.notificationDOMRef}/>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <form className=\"form-horizontal\" onSubmit={this.handleSubmit} role=\"form\">\r\n                                                    <div className=\"box-body\">\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Page Name</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    placeholder=\"Page Title\"\r\n                                                                    id=\"add_GST\"\r\n                                                                    name=\"pageTitle\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.pageTitle}/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"Page Name\", this.state.pageTitle, \"required\")}\r\n                                                                <div className=\"text-danger\">\r\n                                                                    {\" \"}\r\n                                                                    {this.state.employer_sevice_message}\r\n                                                                </div>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Title</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"title\"\r\n                                                                    id=\"title\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.title}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"title\", this.state.title, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">charset</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"charset\"\r\n                                                                    id=\"charset\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.charset}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"charset\", this.state.charset, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Keywords</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"keywords\"\r\n                                                                    id=\"keywords\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.keywords}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"keywords\", this.state.keywords, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Description</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <ReactQuill\r\n                                                                    theme={this.state.theme}\r\n                                                                    value={this.state.description}\r\n                                                                    placeholder='Enter Text'\r\n                                                                    onChange={this.handleChange}\r\n                                                                    className=\"add-new-post__editor mb-1\"\r\n                                                                    style={divStyle}/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"description\", this.state.description, \"required\")}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">viewport</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"viewport\"\r\n                                                                    id=\"viewport\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.viewport}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"viewport\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"viewport\", this.state.viewport, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">Domain Verify</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"domainverify\"\r\n                                                                    id=\"domainverify\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.domainverify}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"domainverify\", this.state.domainverify, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:site</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twittersite\"\r\n                                                                    id=\"twittersite\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twittersite}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twittersite\", this.state.twittersite, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:creator</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twittercreator\"\r\n                                                                    id=\"twittercreator\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twittercreator}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twittercreator\", this.state.twittercreator, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:card</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twittercard\"\r\n                                                                    id=\"twittercard\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twittercard}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twittercard\", this.state.twittercard, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">robots</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"robots\"\r\n                                                                    id=\"robots\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.robots}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"INDEX, FOLLOW\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"robots\", this.state.robots, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:player</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twitterplayer\"\r\n                                                                    id=\"twitterplayer\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twitterplayer}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twitterplayer\", this.state.twitterplayer, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:title</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twittertitle\"\r\n                                                                    id=\"twittertitle\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twittertitle}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twittertitle\", this.state.twittertitle, \"required\")}\r\n\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:description</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twitterdescription\"\r\n                                                                    id=\"twitterdescription\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twitterdescription}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twitterdescription\", this.state.twitterdescription, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">twitter:image URL</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"twitterimage\"\r\n                                                                    id=\"twitterimage\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.twitterimage}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"twitterimage Url\", this.state.twitterimage, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.placename</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"geoplacename\"\r\n                                                                    id=\"geoplacename\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.geoplacename}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"geoplacename\", this.state.geoplacename, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.position</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"geoposition\"\r\n                                                                    id=\"geoposition\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.geoposition}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"geoposition\", this.state.geoposition, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">geo.region</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"georegion\"\r\n                                                                    id=\"georegion\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.georegion}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"IN-Telangana\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"georegion\", this.state.georegion, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">ICBM</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ICBM\"\r\n                                                                    id=\"ICBM\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ICBM}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"ICBM\", this.state.ICBM, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:locale</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"oglocale\"\r\n                                                                    id=\"oglocale\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.oglocale}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"en_US\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"oglocale\", this.state.oglocale, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:site_name</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ogsitename\"\r\n                                                                    id=\"ogsitename\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ogsitename}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"edibyl\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"ogsitename\", this.state.ogsitename, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:title</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ogtitle\"\r\n                                                                    id=\"ogtitle\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ogtitle}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"ogtitle\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"ogtitle\", this.state.ogtitle, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:description</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ogdescription\"\r\n                                                                    id=\"ogdescription\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ogdescription}\r\n                                                                    className=\"required form-control\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"ogdescription\", this.state.ogdescription, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:type</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ogtype\"\r\n                                                                    id=\"ogtype\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ogtype}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"Website\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"ogtype\", this.state.ogtype, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:image</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                {/* <input type=\"file\" name=\"ogimage\" id=\"ogimage\" onChange={ this.onChange } value={ this.state.ogimage }  className=\"required form-control\"  />\r\n                <span style={{color: 'red'}} />  */}\r\n                                                                {this.state.isUploading && <p>Progress: {this.state.progress}</p>}\r\n                                                                {this.state.avatarURL && <img\r\n                                                                    src={this.state.avatarURL}\r\n                                                                    style={{\r\n                                                                    height: \"200px\",\r\n                                                                    width: \"250px\"\r\n                                                                }}/>}\r\n                                                                <FileUploader\r\n                                                                    accept=\"image/*\"\r\n                                                                    name=\"avatar\"\r\n                                                                    randomizeFilename\r\n                                                                    storageRef={firebase\r\n                                                                    .storage()\r\n                                                                    .ref(\"images\")}\r\n                                                                    onUploadStart={this.handleUploadStart}\r\n                                                                    onUploadError={this.handleUploadError}\r\n                                                                    onUploadSuccess={this.handleUploadSuccess}\r\n                                                                    onProgress={this.handleProgress}/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"Upload Product Image\", this.state.avatarURL, \"required\")}\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"inputEmail3\" className=\"col-sm-2 control-label\">og:url</label>\r\n                                                            <div className=\"col-sm-10\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"ogurl\"\r\n                                                                    id=\"ogurl\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.ogurl}\r\n                                                                    className=\"required form-control\"\r\n                                                                    placeholder=\"\"/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"Upload Product Image\", this.state.ogurl, \"required\")}\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"text-left custom-pro-edt-ds\">\r\n                                                                <button type=\"submit\" className=\"btn btn-ctl-bt waves-effect waves-light\">Save\r\n                                                                </button>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditSEOPage;\r\n"]},"metadata":{},"sourceType":"module"}