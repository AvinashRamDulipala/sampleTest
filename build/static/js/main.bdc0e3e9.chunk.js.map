{"version":3,"sources":["config.js","auth/Login.js","component/header.js","component/footer.js","component/sidebar.js","component/MyProfile.js","component/changepassword.js","component/dashboard.js","component/employee-list.js","component/add_employee.js","component/edit_employee.js","component/tag_list.js","component/add_tag.js","component/edit_tag.js","Routing.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","auth","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","validator","allValid","_this$state","state","email","password","signInWithEmailAndPassword","then","result","user","concat","uid","on","snapshot","gstData","val","console","log","sessionStorage","setItem","history","push","catch","error","setState","employer_sevice_message","message","showMessages","forceUpdate","onChange","defineProperty","target","name","value","showLoading","date","Date","toLocaleString","SimpleReactValidator","className","validators","passwordvalid","rule","params","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","_this$state2","react_default","a","createElement","Form","onSubmit","id","type","placeholder","title","required","role","React","Component","HeaderPage","logout","swal","text","icon","buttons","dangerMode","willDelete","signOut","clear","code","window","location","href","loading","getItem","react_router_dom","to","data-toggle","aria-expanded","aria-hidden","onClick","FooterPage","SidebarPage","userRole","orderStatusList","usePermList","style","height","overflowY","isPathActive","componentMenuOpen","path","pathname","startsWith","withRouter","getCountriesList","require","MyProfile","setCountryName","e","index","selectedIndex","option","childNodes","getAttribute","selectedCountryName","statesList","getStatesByShort","stateName","selectedCountry","country","setStateName","stateValue","cityList","getCities","cityName","setCityName","cityValue","city","handleChange","employeeID","match","sessionId","update","first_name","last_name","mobile_number","address","zip","status","updated_date","designation","countryName","getCountries","error_message","AlertquantityStock","qty","Number","productPriceMismatch","whitespace","specialChar","specialCharText","website","Fax","_this2","data","_this3","sidebar","header","color","readOnly","map","shortName","selected","key","footer","Changepassword","reauthenticate","currentPassword","currentUser","cred","EmailAuthProvider","credential","reauthenticateWithCredential","old_password","updatePassword","confirm_password","old_pass","float","Dashboard","userCount","orsersCount","merchantCount","productsCount","merchantView","productsView","numChildren","$","DataTable","EmployeeList","deleteItem","remove","componentDidMount","cmsId","dbCon","department","uploadImage","phone_emergency","reporting_manager","EmployeesList","isUploading","validError","count","activePage","countPage","once","forEach","element","_usersData","usersData","employeeKey","toString","employeeId","unshift","sort","b","Employees","interval","setTimeout","clearTimeout","updatedDate","data-id","bind","AddEmployee","createUserWithEmailAndPassword","userId","set","priceCostValid","EditEmployee","Tags","datatable","childSnapShot","Categories","tagId","tag","created_on","updated_on","length","locationList","alertName","split","display","data-dismiss","AddTags","response","config","EditTags","avatar","progress","avatarURL","categories","PrivateRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","from","Routing","exact","strict","Routing_PrivateRoute","ChangePassword","App","src_Routing","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","App_App","URL","process","origin","addEventListener","fetch","contentType","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bdc0e3e9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n/*..... Development Mode ------------*/\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCqpwLmhmUH5jAocFyvKfC2Jooe68p8AyM\",\r\n  authDomain: \"assessment-test-75a62.firebaseapp.com\",\r\n  databaseURL: \"https://assessment-test-75a62.firebaseio.com\",\r\n  projectId: \"assessment-test-75a62\",\r\n  storageBucket: \"assessment-test-75a62.appspot.com\",\r\n  messagingSenderId: \"960414607533\",\r\n  appId: \"1:960414607533:web:3e5a53bfe885e7c539be24\",\r\n  measurementId: \"G-W91N66CYGZ\"\r\n};\r\n\r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport const ref = firebase.database().ref();\r\nexport const firebaseAuth = firebase.auth();\r\nexport default firebase;\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form} from 'reactstrap';\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: null,\r\n            employer_sevice_message: \"\",\r\n            showLoading: false,\r\n            date: new Date().toLocaleString()\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (this.validator.allValid()) {\r\n\r\n            const {email, password} = this.state;\r\n\r\n            firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(email, password)\r\n                .then((result) => {\r\n                     var user = result.user;\r\n                    var ref = firebase\r\n                    .database()\r\n                    .ref(`Employees/${user.uid}`);\r\n                    ref.on('value', snapshot => {\r\n                        var gstData = snapshot.val();\r\n                      console.log(gstData);\r\n                        // if(gstData.status == \"Active\"){\r\n\r\n                            sessionStorage.setItem(\"RoleId\", user.uid);\r\n                             sessionStorage.setItem(\"email\", email);\r\n                            //  sessionStorage.setItem(\"userRole\", gstData.role);\r\n                             \r\n                            this\r\n                            .props\r\n                            .history\r\n                            .push(\"/Dashboard\");\r\n    \r\n                        // }else{\r\n                        //     this.setState({employer_sevice_message: \"Invalid username/Password or In Active Account\"});\r\n                        // }\r\n                       \r\n                       \r\n                    });\r\n\r\n                   \r\n                })\r\n                .catch(error => {\r\n                    this.setState({error});\r\n                    console.log(this.state.error);\r\n                    this.setState({employer_sevice_message: this.state.error.message});\r\n                });\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {email, password, error} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"color-line\"></div>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <Form onSubmit={this.handleSubmit} id=\"login-form\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n                            <div className=\"col-md-4 col-md-4 col-sm-4 col-xs-12\">\r\n                                <div className=\"text-center m-b-md custom-login m-t-80 m-b-20\">\r\n                                    <h1>\r\n                                        <b>Sample Assignment - Login</b>\r\n                                    </h1>\r\n                                </div>\r\n                                <div className=\"hpanel\">\r\n                                    <div className=\"panel-body\">\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Email</label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                id=\"username\"\r\n                                                name=\"email\"\r\n                                                value={email}\r\n                                                onChange={this.onChange}\r\n                                                placeholder=\"example@gmail.com\"\r\n                                                title=\"Please enter you username\"\r\n                                                required\r\n                                                className=\"form-control\"/> {this\r\n                                                .validator\r\n                                                .message(\"Email\", this.state.email, \"required|email|min:6|max:70\")}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"control-label\">Password</label>\r\n                                            <input\r\n                                                type=\"Password\"\r\n                                                name=\"password\"\r\n                                                value={password}\r\n                                                onChange={this.onChange}\r\n                                                title=\"Please enter your password\"\r\n                                                placeholder=\"******\"\r\n                                                className=\"form-control\"\r\n                                                id=\"password_input\"/> {this\r\n                                                .validator\r\n                                                .message(\"Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")}\r\n                                        </div>\r\n\r\n                                        <button className=\"btn btn-success btn-block loginbtn\">Login</button>\r\n\r\n                                        {this.state.employer_sevice_message\r\n                                            ? (\r\n                                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                                    {this.state.employer_sevice_message}\r\n                                                </div>\r\n                                            )\r\n                                            : (\"\")}{\" \"}\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport firebase from '../config';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\nclass HeaderPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    var sessionId = sessionStorage.getItem(\"RoleId\");\r\n    if(sessionId){\r\n       \r\n//   console.log(sessionId);\r\n    \r\n//         firebase\r\n//             .database().ref('admin_users/' + sessionId).on('value', snapshot => {\r\n//          var Users = snapshot.val();\r\n//          console.log(Users);\r\n//          sessionStorage.setItem(\"userName\", Users.fullName);\r\n//          sessionStorage.setItem(\"userRole\", Users.Role);\r\n       \r\n//         this.setState({\r\n//           userRole:Users.Role,loading: false\r\n            \r\n            \r\n//           });\r\n         \r\n         \r\n//         });\r\n    }\r\n       \r\n       \r\n        \r\n      \r\n    \r\n  }\r\n  logout = () => {\r\n    swal({\r\n        title: \"Are you sure?\",\r\n        text: \"Do your really want to log out your account?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true\r\n      }).then(willDelete => {\r\n        if (willDelete) {\r\n            firebase.auth().signOut().then(function() {\r\n                console.log(\"Logged out!\");\r\n                sessionStorage.clear();\t\r\n             }, function(error) {\r\n                console.log(error.code);\r\n             });\r\n          sessionStorage.clear();\r\n          window.location.href = '/login';\r\n        //   this.props.history.push('/');\r\n        } else {\r\n        }\r\n      });\r\n\r\n   \r\n  };\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n  \r\n  <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <div className=\"logo-pro\">\r\n                    <h1><b>Sample Assignment</b></h1>\r\n                       </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"header-advance-area\">\r\n            <div className=\"header-top-area\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                            <div className=\"header-top-wraper\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-1 col-md-0 col-sm-1 col-xs-12\">\r\n                                        <div className=\"menu-switcher-pro\">\r\n                                            <button type=\"button\" id=\"sidebarCollapse\" className=\"btn bar-button-pro header-drl-controller-btn btn-info navbar-btn\">\r\n                                                    <i className=\"icon nalika-menu-task\"></i>\r\n                                                </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-lg-6 col-md-7 col-sm-6 col-xs-12\">\r\n                                        <div className=\"header-top-menu tabl-d-n\">\r\n                                            <div className=\"breadcome-heading\">\r\n                                                {/* <form role=\"search\" className=\"\">\r\n                                                    <input type=\"text\" placeholder=\"Search...\" className=\"form-control\" />\r\n                                                    <Link to=\"\"><i className=\"fa fa-search\"></i></Link>\r\n                                                </form> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                 \r\n\r\n                                 <div className=\"col-lg-5 col-md-5 col-sm-12 col-xs-12\">\r\n                                        <div className=\"header-right-info\">\r\n                                            <ul className=\"nav navbar-nav mai-top-nav header-right-menu\">\r\n                                               \r\n                                               {/* <li className=\"nav-item dropdown\">\r\n                                               <Link to=\"\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle\"><i className=\"icon nalika-mail\" aria-hidden=\"true\"></i><span className=\"indicator-ms\"></span></Link>\r\n                                                    <div role=\"menu\" className=\"author-message-top dropdown-menu animated zoomIn\">\r\n                                                        <div className=\"message-single-top\">\r\n                                                            <h1>Message</h1>\r\n                                                        </div>\r\n                                                        <ul className=\"message-menu\">\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"message-img\">\r\n                                                                        <img src=\"img/contact/1.jpg\" alt=\"\"/>\r\n                                                                    </div>\r\n                                                                    <div className=\"message-content\">\r\n                                                                        <span className=\"message-date\">16 Sept</span>\r\n                                                                        <h2>Advanda Cro</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"message-img\">\r\n                                                                        <img src=\"img/contact/4.jpg\" alt=\"\"/>\r\n                                                                    </div>\r\n                                                                    <div className=\"message-content\">\r\n                                                                        <span className=\"message-date\">16 Sept</span>\r\n                                                                        <h2>Sulaiman din</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"message-img\">\r\n                                                                        <img src=\"img/contact/3.jpg\" alt=\"\"/>\r\n                                                                    </div>\r\n                                                                    <div className=\"message-content\">\r\n                                                                        <span className=\"message-date\">16 Sept</span>\r\n                                                                        <h2>Victor Jara</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"message-img\">\r\n                                                                        <img src=\"img/contact/2.jpg\" alt=\"\"/>\r\n                                                                    </div>\r\n                                                                    <div className=\"message-content\">\r\n                                                                        <span className=\"message-date\">16 Sept</span>\r\n                                                                        <h2>Victor Jara</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <div className=\"message-view\">\r\n                                                        <Link to=\"\">View All Messages</Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li> */}\r\n                                                \r\n                                                {/* <li className=\"nav-item\"><a href=\"#\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle\"><i className=\"icon nalika-alarm\" aria-hidden=\"true\"></i><span className=\"indicator-nt\"></span></a>\r\n                                                    <div role=\"menu\" className=\"notification-author dropdown-menu animated zoomIn\">\r\n                                                        <div className=\"notification-single-top\">\r\n                                                            <h1>Notifications</h1>\r\n                                                        </div>\r\n                                                        <ul className=\"notification-menu\">\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"notification-icon\">\r\n                                                                        <i className=\"icon nalika-tick\" aria-hidden=\"true\"></i>\r\n                                                                    </div>\r\n                                                                    <div className=\"notification-content\">\r\n                                                                        <span className=\"notification-date\">16 Sept</span>\r\n                                                                        <h2>Advanda Cro</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                               </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"notification-icon\">\r\n                                                                        <i className=\"icon nalika-cloud\" aria-hidden=\"true\"></i>\r\n                                                                    </div>\r\n                                                                    <div className=\"notification-content\">\r\n                                                                        <span className=\"notification-date\">16 Sept</span>\r\n                                                                        <h2>Sulaiman din</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                               </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"notification-icon\">\r\n                                                                        <i className=\"icon nalika-folder\" aria-hidden=\"true\"></i>\r\n                                                                    </div>\r\n                                                                    <div className=\"notification-content\">\r\n                                                                        <span className=\"notification-date\">16 Sept</span>\r\n                                                                        <h2>Victor Jara</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                               </Link>\r\n                                                            </li>\r\n                                                            <li>\r\n                                                            <Link to=\"\">\r\n                                                                    <div className=\"notification-icon\">\r\n                                                                        <i className=\"icon nalika-bar-chart\" aria-hidden=\"true\"></i>\r\n                                                                    </div>\r\n                                                                    <div className=\"notification-content\">\r\n                                                                        <span className=\"notification-date\">16 Sept</span>\r\n                                                                        <h2>Victor Jara</h2>\r\n                                                                        <p>Please done this project as soon possible.</p>\r\n                                                                    </div>\r\n                                                               </Link>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <div className=\"notification-view\">\r\n                                                        <Link to=\"\">View All Notification</Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li> */}\r\n                                               \r\n                                               <li className=\"nav-item\">\r\n                                               <Link to=\"\"data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" className=\"nav-link dropdown-toggle\">\r\n                                                          \r\n                                                            <span className=\"admin-name\">{sessionStorage.getItem('email')}      <i className=\"icon nalika-user\" aria-hidden=\"true\"></i></span>\r\n                                                            <i className=\"icon nalika-down-arrow nalika-angle-dw\"></i>\r\n                                                       </Link>\r\n                                                    <ul role=\"menu\" className=\"dropdown-header-top author-log dropdown-menu animated zoomIn\">\r\n                                                    <li> <Link to=\"/MyProfile\"><span className=\"icon nalika-user author-log-ic\"></span>My Profile</Link>\r\n                                                        </li> \r\n                                                        <li> <Link to=\"/ChangePassword\"><span className=\"icon nalika-user author-log-ic\"></span>Change Password</Link>\r\n                                                        </li>                                              \r\n                                                        <li onClick={this.logout}> <a><span className=\"icon nalika-unlocked author-log-ic\"></span>Log Out</a>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </li>\r\n                                               \r\n\r\n                                \r\n\r\n                                           </ul>\r\n                                        </div>\r\n                                    </div>\r\n                              \r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderPage;\r\n","import React from \"react\";\r\n\r\n\r\nclass FooterPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n  \r\n        <div className=\"footer-copyright-area\">\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <div className=\"footer-copy-right\">\r\n                        <p><a>Copyright © 2019 Gootes</a> All rights reserved.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterPage;\r\n","import React from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {Collapse} from 'react-bootstrap';\r\nimport firebase from '../config';\r\n\r\nclass SidebarPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userRole: '',\r\n            loading: false,\r\n            orderStatusList: [],\r\n            usePermList: []\r\n        };\r\n    }\r\n   \r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <div className=\"left-sidebar-pro\">\r\n                    <nav id=\"sidebar\" className=\"\">\r\n                        <div className=\"sidebar-header\">\r\n                            <Link to='/Dashboard'>\r\n                                {/* <img className=\"im_logo\" src=\"/img/logo/logo.png\"/> */}\r\n                                <h1 className=\"im_logo\">Sample Test</h1>\r\n                                </Link>\r\n                         \r\n                        </div>\r\n\r\n                        <div className=\"left-custom-menu-adp-wrap comment-scrollbar\">\r\n                            <nav className=\"sidebar-nav left-sidebar-menu-pro\">\r\n\r\n                                <ul\r\n                                    className=\"nav metismenu\"\r\n                                    style={{\r\n                                    height: \"543px\",\r\n                                    overflowY: \"auto\"\r\n                                }}\r\n                                    id=\"style-2\">\r\n                                    <li\r\n                                                className={this.isPathActive('/Dashboard') || this.state.componentMenuOpen\r\n                                                ? 'active'\r\n                                                : null}>\r\n                                                <Link to=\"/Dashboard\">\r\n                                                    <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i>\r\n                                                    <span className=\"mini-click-non space\">\r\n                                                        Dashboard</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li\r\n                                                className={this.isPathActive('/UsersList') || this.state.componentMenuOpen\r\n                                                ? 'active'\r\n                                                : null}>\r\n                                                <Link to=\"/UsersList\">\r\n                                                    <i className=\"fa fa-tag\" aria-hidden=\"true\"></i>\r\n                                                    <span className=\"mini-click-non space\">\r\n                                                        Manage Users</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li\r\n                                                className={this.isPathActive('/Tags') || this.state.componentMenuOpen\r\n                                                ? 'active'\r\n                                                : null}>\r\n                                                <Link to=\"/Tags\">\r\n                                                    <i className=\"fa fa-file-text\"  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"mini-click-non space\">\r\n                                                    Manage Tags</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li\r\n                                                className={this.isPathActive('/MyProfile') || this.state.componentMenuOpen\r\n                                                ? 'active'\r\n                                                : null}>\r\n                                                <Link to=\"/MyProfile\">\r\n                                                    <i className=\"fa fa-cog\"  aria-hidden=\"true\"></i>\r\n                                                    <span className=\"mini-click-non space\">\r\n                                                       Account Setting</span>\r\n                                                </Link>\r\n                                            </li>\r\n                                            \r\n\r\n                                     \r\n\r\n                                   \r\n                                       \r\n                                   \r\n                                  \r\n                                       \r\n                                   \r\n                                   \r\n                                </ul>\r\n\r\n                            </nav>\r\n                        </div>\r\n\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    isPathActive(path) {\r\n        return this\r\n            .props\r\n            .location\r\n            .pathname\r\n            .startsWith(path);\r\n    }\r\n}\r\n\r\nexport default withRouter(SidebarPage);\r\n","import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {Link} from \"react-router-dom\";\r\nconst getCountriesList = require('countrycitystatejson');\r\n\r\nclass MyProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: 'a@123456',\r\n            status:'Active',\r\n            designation: '',\r\n            mobile_number: '',\r\n            countryName: getCountriesList.getCountries(),\r\n            stateName: [],\r\n            cityName: [],\r\n            selectedCountry: '',\r\n            selectedCountryName: '',\r\n\r\n            city: '',\r\n            state: '',\r\n            country: '',\r\n            address: '',\r\n            zip: '',\r\n            user: 'user',\r\n\r\n            error_message: '',\r\n            date: new Date().toLocaleString()\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                productPriceMismatch: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('product_price')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        var sessionId = sessionStorage.getItem(\"RoleId\");\r\n      \r\n     \r\n      var ref=firebase.database().ref(`Employees/${sessionId}`);\r\n        ref.on('value', snapshot => {\r\n            var data = snapshot.val();\r\n            console.log(data)\r\n            this.setState({\r\n               \r\n                \r\n                first_name: data.first_name,\r\n                last_name: data.last_name,\r\n                email: data.email,\r\n               \r\n                mobile_number: data.mobile_number,\r\n\r\n              \r\n\r\n                city: data.city,\r\n                state: data.state,\r\n                country: data.country,\r\n\r\n                address: data.address,\r\n\r\n              \r\n                zip: data.zip,\r\n \r\n               \r\n            });\r\n           \r\n           \r\n        });\r\n      \r\n}\r\n\r\n\r\n\r\nsetCountryName = (e) => {\r\n    let index = e.target.selectedIndex;\r\n    let el = e.target.childNodes[index]\r\n    let option = el.getAttribute('id');\r\n    let selectedCountryName = e.target.value;\r\n\r\n    const statesList = getCountriesList.getStatesByShort(option);\r\n    // console.log(statesList);\r\n\r\n    this.setState({\r\n        stateName: statesList,\r\n        selectedCountry: option,\r\n        country: selectedCountryName\r\n    }, () => {\r\n        console.log(this.state.stateName, 'stateName');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\nsetStateName = (e) => {\r\n    let stateValue = e.target.value;\r\n    let option = this.state.selectedCountry;\r\n    // console.log(option);\r\n    const cityList = getCountriesList.getCities(option, stateValue);\r\n    // console.log(cityList);\r\n    this.setState({\r\n        cityName: cityList,\r\n        state: stateValue\r\n    }, () => {\r\n        console.log(this.state.cityName, 'stateName');\r\n    });\r\n\r\n    console.log(this.state.state);\r\n\r\n};\r\n\r\nsetCityName = (e) => {\r\n    let cityValue = e.target.value;\r\n\r\n    this.setState({\r\n        city: cityValue\r\n    }, () => {\r\n        console.log(this.state.city, 'city');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\n\r\nhandleChange = (event) => {\r\n    // console.log(event.target.value);\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n    if (this.validator.allValid()) {\r\n\r\n        const {employeeID} = this.props.match.params;\r\n         var sessionId = sessionStorage.getItem(\"RoleId\");\r\n      \r\n\r\n        let dbCon = firebase\r\n            .database()\r\n            .ref(`Employees/${employeeID}`);\r\n        dbCon.update({\r\n            role: this.state.user,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n\r\n            mobile_number: this.state.mobile_number,\r\n\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            country: this.state.country,\r\n\r\n            address: this.state.address,\r\n\r\n            password: this.state.password,\r\n            zip: this.state.zip,\r\n            status: this.state.status,\r\n            sessionId: sessionId,\r\n\r\n            updated_date: this.state.date\r\n        });\r\n\r\n        this\r\n            .props\r\n            .history\r\n            .push(\"/EmployeeList/Updated\");\r\n    } else {\r\n        this\r\n            .validator\r\n            .showMessages();\r\n        this.forceUpdate();\r\n    }\r\n};\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            <SidebarPage/>\r\n\r\n            <div className=\"all-content-wrapper\">\r\n                <HeaderPage/>\r\n\r\n                <div className=\"breadcome-area\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <div className=\"breadcome-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                            <div className=\"breadcomb-wp\">\r\n\r\n                                                <div className=\"breadcomb-ctn\">\r\n                                                    <h2>Users</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                    <div className=\"single-pro-review-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"review-tab-pro-inner\">\r\n\r\n                                        <h4>Edit Users</h4>\r\n                                        <div className=\"product-tab-list tab-pane fade active in\">\r\n                                            <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                <div className=\"row m-b-20\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>First Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            name=\"first_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.first_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>Last Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            name=\"last_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.last_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>E-mail Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"E-mail Address\"\r\n                                                            name=\"email\"\r\n                                                            id=\"price_cost\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.email} readOnly/> {this\r\n                                                            .validator\r\n                                                            .message(\"E-mail Address\", this.state.email, \"required|email\")}\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Country<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"country\"\r\n                                                            value={this.state.country}\r\n                                                            onChange={this.setCountryName}>\r\n\r\n                                                          \r\n                                                            {this\r\n                                                                .state\r\n                                                                .countryName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data.name} id={data.shortName} selected={data.name == this.state.country} key={index}>{data.name}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.country, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>State<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"state\"\r\n                                                            value={this.state.state}\r\n                                                            onChange={this.setStateName}>\r\n\r\n                                                            <option >{this.state.state}</option>\r\n                                                            {this.state.stateName && this\r\n                                                                .state\r\n                                                                .stateName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.state} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.state, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>City<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"city\"\r\n                                                            value={this.state.city}\r\n                                                            onChange={this.setCityName}>\r\n\r\n                                                            <option >{this.state.city}</option>\r\n                                                            {this.state.cityName && this\r\n                                                                .state\r\n                                                                .cityName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.city} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"City\", this.state.city, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Zip<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"ZIP\"\r\n                                                            name=\"zip\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.zip}/> {this\r\n                                                            .validator\r\n                                                            .message(\"ZIP\", this.state.zip, \"required|numeric|min:5|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Mobile Number<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Mobile Number\"\r\n                                                            name=\"mobile_number\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.mobile_number}/> {this\r\n                                                            .validator\r\n                                                            .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <textarea\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Address\"\r\n                                                            name=\"address\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.address}/> {this\r\n                                                            .validator\r\n                                                            .message(\"Address\", this.state.address, \"required|min:5|max:150\")}\r\n\r\n                                                    </div>\r\n                                                    {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <label>Password<span style={{ color: 'red'}}>*</span>\r\n                                                        </label>\r\n                                                        <input\r\n                                                         type=\"Password\"\r\n                                                         name=\"password\"\r\n                                                         value=\"\"\r\n                                                         className=\"form-control\"\r\n\r\n\r\n                                                           />\r\n                                                    </div> */}\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        {/* <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> */}\r\n                                                        <div className=\"text-center custom-pro-edt-ds\">\r\n                                                            <button\r\n                                                                type=\"submit\"\r\n                                                                className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                            </button>\r\n                                                            <Link to=\"/EmployeeList\">\r\n                                                                <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                </button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <FooterPage/>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProfile;\r\n","import React from \"react\";\r\nimport {Form} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Changepassword extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            password: \"\",\r\n            confirm_password: \"\",\r\n            old_password: \"\",\r\n            old_pass: \"\",\r\n            employer_sevice_message: \"\",\r\n\r\n            showLoading: false\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    reauthenticate = (currentPassword) => {\r\n        var user = firebase\r\n            .auth()\r\n            .currentUser;\r\n        var cred = firebase\r\n            .auth\r\n            .EmailAuthProvider\r\n            .credential(user.email, currentPassword);\r\n        return user.reauthenticateWithCredential(cred);\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            this\r\n                .reauthenticate(this.state.old_password)\r\n                .then(() => {\r\n\r\n                    let user = firebase\r\n                        .auth()\r\n                        .currentUser;\r\n                    user\r\n                        .updatePassword(this.state.password)\r\n                        .then((result) => {\r\n                            console.log(result);\r\n                            this.setState({employer_sevice_message: \"Succesfully Password Changed\"});\r\n                        })\r\n                        .catch(error => {\r\n                            this.setState({error});\r\n                            console.log(this.state.error);\r\n                            this.setState({employer_sevice_message: this.state.error.message});\r\n                        });\r\n\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    this.setState({employer_sevice_message: \"The  old password is invalid or the user does not have a password\"});\r\n                });\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    };\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Change Password\r\n                                                        </h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Changepassword</h4>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <Form onSubmit={this.handleSubmit} id=\"login-form\" className=\"widget-form\">\r\n                                                    {this.state.employer_sevice_message\r\n                                                        ? (\r\n                                                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                                                                {this.state.employer_sevice_message}\r\n                                                            </div>\r\n                                                        )\r\n                                                        : (\"\")}{\" \"}\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n\r\n                                                            <input\r\n                                                                type=\"password\"\r\n                                                                name=\"old_password\"\r\n                                                                value={this.state.old_password}\r\n                                                                onChange={this.onChange}\r\n                                                                className=\"form-control  mb-20\"\r\n                                                                placeholder=\"Old Password\"/> {this\r\n                                                                .validator\r\n                                                                .message(\"Old Password\", this.state.old_password, \"required|passwordvalid|min:6|max:30\")}\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n\r\n                                                            <input\r\n                                                                type=\"password\"\r\n                                                                name=\"password\"\r\n                                                                value={this.state.password}\r\n                                                                onChange={this.onChange}\r\n                                                                className=\"form-control  mb-20\"\r\n                                                                placeholder=\"New Password\"\r\n                                                                id=\"password_input\"/> {this\r\n                                                                .validator\r\n                                                                .message(\"New Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")}\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n\r\n                                                            <input\r\n                                                                type=\"password\"\r\n                                                                name=\"confirm_password\"\r\n                                                                className=\"form-control mb-20\"\r\n                                                                placeholder=\"Re-Enter Password\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.confirm_password}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Re-Enter Password\", this.state.confirm_password, \"required|passwordMismatch\")}\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"custom-pro-edt-ds no_mrg_right\">\r\n                                                                <button\r\n                                                                    style={{\r\n                                                                    float: \"right\"\r\n                                                                }}\r\n                                                                    type=\"submit\"\r\n                                                                    value=\"Change Password\"\r\n                                                                    className=\"btn btn-ctl-bt waves-effect waves-light col-lg-4\">Change Password\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Changepassword;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport firebase from '../config';\r\nimport SidebarPage from \"./sidebar\";\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n        date: new Date().toLocaleString(),\r\n        userCount:'',\r\n        orsersCount:'',\r\n        merchantCount:'',\r\n        productsCount:'',\r\n    }\r\n   \r\n\r\n  }\r\n  componentDidMount(){\r\n\r\n   \r\n    this.merchantView();\r\n    this.productsView();\r\n}\r\n\r\nmerchantView(){\r\n  \r\n   \r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"tags/\");\r\n    \r\n\r\n   \r\n    ref.on('value', snapshot => {\r\n    console.log(snapshot.numChildren());\r\n\r\n   this.setState({merchantCount:snapshot.numChildren()})\r\n});\r\n}\r\nproductsView(){\r\n   \r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"Employees/\")\r\n                ref.on('value', snapshot => {\r\n    console.log(snapshot.numChildren());\r\n   this.setState({productsCount:snapshot.numChildren()})\r\n});\r\n}\r\n \r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n     <SidebarPage/>\r\n   \r\n    <div className=\"all-content-wrapper\">\r\n    <HeaderPage/>\r\n   \r\n          \r\n            <div className=\"breadcome-area\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                            <div className=\"breadcome-list\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                        <div className=\"breadcomb-wp\">\r\n                                        \r\n                                            <div className=\"breadcomb-ctn\">\r\n                                                <h2>Dashboard</h2>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                          \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n      \r\n     \r\n            <div className=\"income-order-visit-user-area\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n               \r\n                                    <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                    <Link to='/UsersList'>\r\n                        <div className=\"income-dashone-total reso-mg-b-30 user_bg\">\r\n                            <div className=\"income-dashone-pro\">\r\n                                <div className=\"income-rate-total\">\r\n                                    <div className=\"price-nalika-rate\">\r\n                                        <h3><span className=\"counter\">{this.state.productsCount}</span></h3>\r\n                                    </div>\r\n                                    <div className=\"price-graph\">\r\n                                        <span id=\"sparkline1\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"income-range\">\r\n                                    <p>Manage Users</p>\r\n                                    <span className=\"income-percentange bg-green\"><i className=\"fa fa-user\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                    <Link to='/Tags'>\r\n                        <div className=\"income-dashone-total reso-mg-b-30 order_bg\">\r\n                            <div className=\"income-dashone-pro\">\r\n                                <div className=\"income-rate-total\">\r\n                                    <div className=\"price-nalika-rate\">\r\n                                        <h3><span className=\"counter\">{this.state.merchantCount}</span></h3>\r\n                                    </div>\r\n                                    <div className=\"price-graph\">\r\n                                        <span id=\"sparkline6\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"income-range order-cl\">\r\n                                   <p> Manage Tags</p>\r\n                                    <span className=\"income-percentange bg-red\"><i className=\"fa fa-file-text\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div>\r\n                    {/* {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"?\r\n                    <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                    <Link to='/MerchantAccount'>\r\n                        <div className=\"income-dashone-total reso-mg-b-30 res-mg-t-30 merchant_bg\">\r\n                            <div className=\"income-dashone-pro\">\r\n                                <div className=\"income-rate-total\">\r\n                                    <div className=\"price-nalika-rate\">\r\n                                        <h3><span className=\"counter\">{this.state.merchantCount}</span></h3>\r\n                                    </div>\r\n                                    <div className=\"price-graph\">\r\n                                        <span id=\"sparkline2\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"income-range visitor-cl\">\r\n                                    <p>Merchants</p>\r\n                                    <span className=\"income-percentange bg-blue\"><i className=\"fa fa-cart-arrow-down\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div>:''}\r\n                    {sessionStorage.getItem(\"userRole\") == \"Admin\"||sessionStorage.getItem(\"userRole\") == \"Super Admin\"||sessionStorage.getItem(\"userRole\") == \"Merchant\"?\r\n                    <div className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\r\n                    <Link to='/ProductListPage'>\r\n                        <div className=\"income-dashone-total res-mg-t-30 products_bg\">\r\n                            <div className=\"income-dashone-pro\">\r\n                                <div className=\"income-rate-total\">\r\n                                    <div className=\"price-nalika-rate\">\r\n                                        <h3><span className=\"counter\">{this.state.productsCount}</span></h3>\r\n                                    </div>\r\n                                    <div className=\"price-graph\">\r\n                                        <span id=\"sparkline5\"></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"income-range low-value-cl\">\r\n                                    <p>Products</p>\r\n                                    <span className=\"income-percentange bg-purple\"><i className=\"fa fa-shopping-basket\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                        </Link>\r\n                    </div>:''} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n         </div>\r\n         <FooterPage/>\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass EmployeeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            designation: '',\r\n            mobile_number: '',\r\n            department: '',\r\n            city: '',\r\n            uploadImage: '',\r\n            address: '',\r\n            phone_emergency: '',\r\n            reporting_manager: '',\r\n            EmployeesList: [],\r\n\r\n            isUploading: false,\r\n            error_message: '',\r\n            date: new Date().toLocaleString(),\r\n            validError: true,\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            EmployeesList: []\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var ref = firebase\r\n            .database()\r\n            .ref('Employees/');\r\n        ref.once(\"value\", snapshot => {\r\n            const data = [];\r\n            console.log(snapshot.val());\r\n            snapshot.forEach(element => {\r\n                const usersData = {\r\n                    employeeKey: element\r\n                        .key\r\n                        .toString(),\r\n                        employeeID: element\r\n                        .val()\r\n                        .employeeId,\r\n\r\n                    first_name: element\r\n                        .val()\r\n                        .first_name,\r\n                    last_name: element\r\n                        .val()\r\n                        .last_name,\r\n                    email: element\r\n                        .val()\r\n                        .email,\r\n                        country: element\r\n                        .val()\r\n                        .country,\r\n                        state: element\r\n                        .val()\r\n                        .state,\r\n                        city: element\r\n                        .val()\r\n                        .city,\r\n                    zip: element\r\n                        .val()\r\n                        .zip,\r\n                    mobile_number: element\r\n                        .val()\r\n                        .mobile_number,\r\n                    status: element\r\n                        .val()\r\n                        .status,\r\n                    city: element\r\n                        .val()\r\n                        .city,\r\n                    address: element\r\n                        .val()\r\n                        .address,\r\n                   \r\n                    date: element\r\n                        .val()\r\n                        .date,\r\n                        updatedDate: element\r\n                        .val()\r\n                        .updated_date,\r\n                }\r\n                data.unshift(usersData);\r\n            });\r\n            data.sort(function(a, b){\r\n                if(a.first_name < b.first_name) { return -1; }\r\n                // if(a.first_name > b.first_name) { return 1; }\r\n                return 0;\r\n            })\r\n\r\n            this.setState({\r\n                Employees: data\r\n            }, () => {\r\n                console.log(this.state.Employees, 'Employees');\r\n                \r\n            });\r\n            this.interval = setTimeout(() => $('.paginationTable').DataTable(), 1000);\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        //this.dataTable.destroy(true);\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    deleteItem = id => {\r\n\r\n        swal({title: \"Are you sure?\", text: \"Do your really want to remove?\", icon: \"warning\", buttons: true, dangerMode: true}).then(willDelete => {\r\n            if (willDelete) {\r\n                console.log(id);\r\n                var playersRef = firebase\r\n                    .database()\r\n                    .ref(`/Employees/${id}`);\r\n                playersRef.remove();\r\n\r\n                this\r\n                    .props\r\n                    .history\r\n                    .push(\"/UsersList\");\r\n            } else {}\r\n            // window.location.reload(\"/Home\");\r\n\r\n        });\r\n        this.componentDidMount();\r\n\r\n    };\r\n\r\n\r\n    \r\n    onChange = (event) => {\r\n\r\n        var cmsId = event.target.id;\r\n        console.log(cmsId);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(event.target.value);\r\n\r\n        let dbCon = firebase\r\n            .database()\r\n            .ref(`/Employees/${cmsId}`);\r\n        console.log(dbCon);\r\n        dbCon.update({status: event.target.value});\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Users</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4>Users List</h4>\r\n                                        <div className=\"add-product\">\r\n                                            <Link to='/AddUser'>Add User</Link>\r\n                                        </div>\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                   \r\n                                                    <th>First Name</th>\r\n                                                    <th>Last Name</th>\r\n                                                    <th>Email</th>\r\n                                                    <th>City</th>\r\n                                                    <th>Zip</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Date Created</th>\r\n                                                    <th>Date Updated</th>\r\n                                                  \r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.Employees && this\r\n                                                    .state\r\n                                                    .Employees\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                               \r\n                                                                <td>{data.first_name} </td>\r\n                                                                <td>{data.last_name}</td>\r\n                                                                <td>{data.email}</td>\r\n                                                               \r\n                                                                <td>{data.city}</td>\r\n                                                                <td>{data.zip}</td>\r\n                                                              \r\n                                                               \r\n                                                                <td>\r\n                                                                    <select\r\n                                                                        name=\"status\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        id={data.employeeKey}\r\n                                                                        className=\"form-control pro-edt-select form-control-primary active\">\r\n                                                                        <option\r\n                                                                            value=\"Active\"\r\n                                                                            selected={data.status == \"Active\"\r\n                                                                            ? true\r\n                                                                            : false}>Active</option>\r\n                                                                        <option\r\n                                                                            value=\"InActive\"\r\n                                                                            selected={data.status == \"InActive\"\r\n                                                                            ? true\r\n                                                                            : false}>InActive</option>\r\n\r\n                                                                    </select>\r\n                                                                </td>\r\n                                                                <td>{data.date}</td>\r\n                                                                <td>{data.updatedDate}</td>\r\n\r\n                                                               \r\n  <td>\r\n\r\n  <Link to={`/EditUser/${data.employeeKey}`}>\r\n    <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n        <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n    </button>\r\n</Link>\r\n\r\n<button\r\n    data-toggle=\"tooltip\"\r\n    title=\"Trash\"\r\n    className=\"pd-setting-ed\"\r\n    data-id={data.employeeKey}\r\n    onClick={this\r\n    .deleteItem\r\n    .bind(this, data.employeeKey)}>\r\n    <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n</button>\r\n\r\n</td>\r\n\r\n\r\n\r\n                                                             \r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeList;\r\n","import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {Link} from \"react-router-dom\";\r\nconst getCountriesList = require('countrycitystatejson');\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: 'a@123456',\r\n            status:'Active',\r\n            designation: '',\r\n            mobile_number: '',\r\n            countryName: getCountriesList.getCountries(),\r\n            stateName: [],\r\n            cityName: [],\r\n            selectedCountry: '',\r\n            selectedCountryName: '',\r\n\r\n            city: '',\r\n            state: '',\r\n            country: '',\r\n            address: '',\r\n            zip: '',\r\n            user: '',\r\n\r\n            error_message: '',\r\n            date: new Date().toLocaleString()\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                priceCostValid: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('price_cost')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setCountryName = (e) => {\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let option = el.getAttribute('id');\r\n        let selectedCountryName = e.target.value;\r\n\r\n        const statesList = getCountriesList.getStatesByShort(option);\r\n        // console.log(statesList);\r\n\r\n        this.setState({\r\n            stateName: statesList,\r\n            selectedCountry: option,\r\n            country: selectedCountryName\r\n        }, () => {\r\n            console.log(this.state.stateName, 'stateName');\r\n        });\r\n\r\n        //console.log(this.state.stateName);\r\n\r\n    };\r\n    setStateName = (e) => {\r\n        let stateValue = e.target.value;\r\n        let option = this.state.selectedCountry;\r\n        // console.log(option);\r\n        const cityList = getCountriesList.getCities(option, stateValue);\r\n        // console.log(cityList);\r\n        this.setState({\r\n            cityName: cityList,\r\n            state: stateValue\r\n        }, () => {\r\n            console.log(this.state.cityName, 'stateName');\r\n        });\r\n\r\n        console.log(this.state.state);\r\n\r\n    };\r\n\r\n    setCityName = (e) => {\r\n        let cityValue = e.target.value;\r\n\r\n        this.setState({\r\n            city: cityValue\r\n        }, () => {\r\n            console.log(this.state.city, 'city');\r\n        });\r\n\r\n        //console.log(this.state.stateName);\r\n\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n      \r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            var user = null;\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n                .then((result) => {\r\n                    var userId = result.user;\r\n\r\n                    var sessionId = sessionStorage.getItem(\"RoleId\");\r\n                  \r\n                    let dbCon = firebase\r\n                        .database()\r\n                        .ref('Employees/' + userId.uid);\r\n                    dbCon.set({\r\n\r\n                        role: this.state.user,\r\n                        first_name: this.state.first_name,\r\n                        last_name: this.state.last_name,\r\n                        email: this.state.email,\r\n\r\n                        mobile_number: this.state.mobile_number,\r\n\r\n                        city: this.state.city,\r\n                        state: this.state.state,\r\n                        country: this.state.country,\r\n\r\n                        address: this.state.address,\r\n\r\n                        password: this.state.password,\r\n                        zip: this.state.zip,\r\n                        status: this.state.status,\r\n                        sessionId: sessionId,\r\n\r\n                        date: this.state.date\r\n                    })\r\n                });\r\n            this\r\n                .props\r\n                .history\r\n                .push(\"/UsersList/Created\");\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Users</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add Users</h4>\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                            <label>First Name<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"First Name\"\r\n                                                                name=\"first_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.first_name}/> {this\r\n                                                                .validator\r\n                                                                .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                            <label>Last Name<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Last Name\"\r\n                                                                name=\"last_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.last_name}/> {this\r\n                                                                .validator\r\n                                                                .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>E-mail Address<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"E-mail Address\"\r\n                                                                name=\"email\"\r\n                                                                id=\"price_cost\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.email}/> {this\r\n                                                                .validator\r\n                                                                .message(\"E-mail Address\", this.state.email, \"required|email\")}\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Country<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <select\r\n                                                                className=\"form-control mb-30\"\r\n                                                                name=\"country\"\r\n                                                                value={this.state.country}\r\n                                                                onChange={this.setCountryName}>\r\n\r\n                                                                <option >Select Country</option>\r\n                                                                {this\r\n                                                                    .state\r\n                                                                    .countryName\r\n                                                                    .map((data, index) => {\r\n\r\n                                                                        return (\r\n                                                                            <option value={data.name} id={data.shortName} key={index}>{data.name}</option>\r\n                                                                        )\r\n\r\n                                                                    })}\r\n\r\n                                                            </select>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Country\", this.state.country, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>State<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <select\r\n                                                                className=\"form-control mb-30\"\r\n                                                                name=\"state\"\r\n                                                                value={this.state.state}\r\n                                                                onChange={this.setStateName}>\r\n\r\n                                                                <option >Select State</option>\r\n                                                                {this.state.stateName && this\r\n                                                                    .state\r\n                                                                    .stateName\r\n                                                                    .map((data, index) => {\r\n\r\n                                                                        return (\r\n                                                                            <option value={data} id={data} key={index}>{data}</option>\r\n                                                                        )\r\n\r\n                                                                    })}\r\n\r\n                                                            </select>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"Country\", this.state.state, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>City<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <select\r\n                                                                className=\"form-control mb-30\"\r\n                                                                name=\"city\"\r\n                                                                value={this.state.city}\r\n                                                                onChange={this.setCityName}>\r\n\r\n                                                                <option >Select City</option>\r\n                                                                {this.state.cityName && this\r\n                                                                    .state\r\n                                                                    .cityName\r\n                                                                    .map((data, index) => {\r\n\r\n                                                                        return (\r\n                                                                            <option value={data} id={data} key={index}>{data}</option>\r\n                                                                        )\r\n\r\n                                                                    })}\r\n\r\n                                                            </select>\r\n                                                            {this\r\n                                                                .validator\r\n                                                                .message(\"City\", this.state.city, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Zip<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"ZIP\"\r\n                                                                name=\"zip\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.zip}/> {this\r\n                                                                .validator\r\n                                                                .message(\"ZIP\", this.state.zip, \"required|numeric|min:5|max:10\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Mobile Number<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Mobile Number\"\r\n                                                                name=\"mobile_number\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.mobile_number}/> {this\r\n                                                                .validator\r\n                                                                .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Address<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <textarea\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Address\"\r\n                                                                name=\"address\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.address}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Address\", this.state.address, \"required|min:5|max:150\")}\r\n\r\n                                                        </div>\r\n                                                        {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Password<span style={{ color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                             type=\"Password\"\r\n                                                             name=\"password\"\r\n                                                             value=\"\"\r\n                                                             className=\"form-control\"\r\n\r\n\r\n                                                               />\r\n                                                        </div> */}\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            {/* <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> */}\r\n                                                            <div className=\"text-center custom-pro-edt-ds\">\r\n                                                                <button\r\n                                                                    type=\"submit\"\r\n                                                                    className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                                </button>\r\n                                                                <Link to=\"/EmployeeList\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEmployee;\r\n","import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {Link} from \"react-router-dom\";\r\nconst getCountriesList = require('countrycitystatejson');\r\n\r\nclass EditEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: 'a@123456',\r\n            status:'Active',\r\n            designation: '',\r\n            mobile_number: '',\r\n            countryName: getCountriesList.getCountries(),\r\n            stateName: [],\r\n            cityName: [],\r\n            selectedCountry: '',\r\n            selectedCountryName: '',\r\n\r\n            city: '',\r\n            state: '',\r\n            country: '',\r\n            address: '',\r\n            zip: '',\r\n            user: 'user',\r\n\r\n            error_message: '',\r\n            date: new Date().toLocaleString()\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                productPriceMismatch: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('product_price')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        const {employeeID} = this.props.match.params;\r\n      \r\n      console.log(employeeID);\r\n      var ref=firebase.database().ref(`Employees/${employeeID}`);\r\n        ref.on('value', snapshot => {\r\n            var data = snapshot.val();\r\n            console.log(data)\r\n            this.setState({\r\n               \r\n                \r\n                first_name: data.first_name,\r\n                last_name: data.last_name,\r\n                email: data.email,\r\n               \r\n                mobile_number: data.mobile_number,\r\n\r\n              \r\n\r\n                city: data.city,\r\n                state: data.state,\r\n                country: data.country,\r\n\r\n                address: data.address,\r\n\r\n              \r\n                zip: data.zip,\r\n \r\n               \r\n            });\r\n           \r\n           \r\n        });\r\n      \r\n}\r\n\r\n\r\n\r\nsetCountryName = (e) => {\r\n    let index = e.target.selectedIndex;\r\n    let el = e.target.childNodes[index]\r\n    let option = el.getAttribute('id');\r\n    let selectedCountryName = e.target.value;\r\n\r\n    const statesList = getCountriesList.getStatesByShort(option);\r\n    // console.log(statesList);\r\n\r\n    this.setState({\r\n        stateName: statesList,\r\n        selectedCountry: option,\r\n        country: selectedCountryName\r\n    }, () => {\r\n        console.log(this.state.stateName, 'stateName');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\nsetStateName = (e) => {\r\n    let stateValue = e.target.value;\r\n    let option = this.state.selectedCountry;\r\n    // console.log(option);\r\n    const cityList = getCountriesList.getCities(option, stateValue);\r\n    // console.log(cityList);\r\n    this.setState({\r\n        cityName: cityList,\r\n        state: stateValue\r\n    }, () => {\r\n        console.log(this.state.cityName, 'stateName');\r\n    });\r\n\r\n    console.log(this.state.state);\r\n\r\n};\r\n\r\nsetCityName = (e) => {\r\n    let cityValue = e.target.value;\r\n\r\n    this.setState({\r\n        city: cityValue\r\n    }, () => {\r\n        console.log(this.state.city, 'city');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\n\r\nhandleChange = (event) => {\r\n    // console.log(event.target.value);\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n    if (this.validator.allValid()) {\r\n\r\n        const {employeeID} = this.props.match.params;\r\n         var sessionId = sessionStorage.getItem(\"RoleId\");\r\n      \r\n\r\n        let dbCon = firebase\r\n            .database()\r\n            .ref(`Employees/${employeeID}`);\r\n        dbCon.update({\r\n            role: this.state.user,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n\r\n            mobile_number: this.state.mobile_number,\r\n\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            country: this.state.country,\r\n\r\n            address: this.state.address,\r\n\r\n            password: this.state.password,\r\n            zip: this.state.zip,\r\n            status: this.state.status,\r\n            sessionId: sessionId,\r\n\r\n            updated_date: this.state.date\r\n        });\r\n\r\n        this\r\n            .props\r\n            .history\r\n            .push(\"/EmployeeList/Updated\");\r\n    } else {\r\n        this\r\n            .validator\r\n            .showMessages();\r\n        this.forceUpdate();\r\n    }\r\n};\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            <SidebarPage/>\r\n\r\n            <div className=\"all-content-wrapper\">\r\n                <HeaderPage/>\r\n\r\n                <div className=\"breadcome-area\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <div className=\"breadcome-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                            <div className=\"breadcomb-wp\">\r\n\r\n                                                <div className=\"breadcomb-ctn\">\r\n                                                    <h2>Users</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                    <div className=\"single-pro-review-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"review-tab-pro-inner\">\r\n\r\n                                        <h4>Edit Users</h4>\r\n                                        <div className=\"product-tab-list tab-pane fade active in\">\r\n                                            <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                <div className=\"row m-b-20\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>First Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            name=\"first_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.first_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>Last Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            name=\"last_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.last_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>E-mail Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"E-mail Address\"\r\n                                                            name=\"email\"\r\n                                                            id=\"price_cost\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.email} readOnly/> {this\r\n                                                            .validator\r\n                                                            .message(\"E-mail Address\", this.state.email, \"required|email\")}\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Country<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"country\"\r\n                                                            value={this.state.country}\r\n                                                            onChange={this.setCountryName}>\r\n\r\n                                                          \r\n                                                            {this\r\n                                                                .state\r\n                                                                .countryName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data.name} id={data.shortName} selected={data.name == this.state.country} key={index}>{data.name}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.country, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>State<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"state\"\r\n                                                            value={this.state.state}\r\n                                                            onChange={this.setStateName}>\r\n\r\n                                                            <option >{this.state.state}</option>\r\n                                                            {this.state.stateName && this\r\n                                                                .state\r\n                                                                .stateName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.state} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.state, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>City<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"city\"\r\n                                                            value={this.state.city}\r\n                                                            onChange={this.setCityName}>\r\n\r\n                                                            <option >{this.state.city}</option>\r\n                                                            {this.state.cityName && this\r\n                                                                .state\r\n                                                                .cityName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.city} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"City\", this.state.city, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Zip<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"ZIP\"\r\n                                                            name=\"zip\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.zip}/> {this\r\n                                                            .validator\r\n                                                            .message(\"ZIP\", this.state.zip, \"required|numeric|min:5|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Mobile Number<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Mobile Number\"\r\n                                                            name=\"mobile_number\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.mobile_number}/> {this\r\n                                                            .validator\r\n                                                            .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <textarea\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Address\"\r\n                                                            name=\"address\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.address}/> {this\r\n                                                            .validator\r\n                                                            .message(\"Address\", this.state.address, \"required|min:5|max:150\")}\r\n\r\n                                                    </div>\r\n                                                    {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <label>Password<span style={{ color: 'red'}}>*</span>\r\n                                                        </label>\r\n                                                        <input\r\n                                                         type=\"Password\"\r\n                                                         name=\"password\"\r\n                                                         value=\"\"\r\n                                                         className=\"form-control\"\r\n\r\n\r\n                                                           />\r\n                                                    </div> */}\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        {/* <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> */}\r\n                                                        <div className=\"text-center custom-pro-edt-ds\">\r\n                                                            <button\r\n                                                                type=\"submit\"\r\n                                                                className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                            </button>\r\n                                                            <Link to=\"/EmployeeList\">\r\n                                                                <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                </button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <FooterPage/>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEmployee;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass Tags extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.datatable = null;\r\n        this.state = {\r\n            cityList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            usePermList: \"\"\r\n        };\r\n\r\n    }\r\n   \r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        var ref = firebase\r\n            .database()\r\n            .ref(\"tags/\");\r\n\r\n        ref.on('value', snapshot => {\r\n            const data = [];\r\n            // console.log(snapshot); console.log(snapshot.val);\r\n\r\n            snapshot.forEach(childSnapShot => {\r\n\r\n                const Categories = {\r\n                    tagId: childSnapShot\r\n                        .key\r\n                        .toString(),\r\n                        tag: childSnapShot\r\n                        .val()\r\n                        .tag,\r\n                   \r\n                    created_on: childSnapShot\r\n                        .val()\r\n                        .created_on,\r\n                        updated_on: childSnapShot\r\n                        .val()\r\n                        .updated_on,\r\n                };\r\n\r\n                data.unshift(Categories);\r\n            });\r\n            data.sort(function(a, b){\r\n                if(a.first_name < b.first_name) { return -1; }\r\n                // if(a.first_name > b.first_name) { return 1; }\r\n                return 0;\r\n            })\r\n\r\n            this.setState({cityList: data, countPage: data.length, loading: false});\r\n            console.log(this.state.locationList);\r\n            // this.$el = $(this.el);\r\n\r\n            this.interval = setTimeout(() => $('.paginationTable').DataTable(), 1000);\r\n        });\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        //this.dataTable.destroy(true);\r\n        clearTimeout(this.interval);\r\n    }\r\n    deleteItem = id => {\r\n\r\n        swal({title: \"Are you sure?\", text: \"Do your really want to remove?\", icon: \"warning\", buttons: true, dangerMode: true}).then(willDelete => {\r\n            if (willDelete) {\r\n                console.log(id);\r\n                var playersRef = firebase\r\n                    .database()\r\n                    .ref(`/tags/${id}`);\r\n                playersRef.remove();\r\n\r\n                this\r\n                    .props\r\n                    .history\r\n                    .push(\"/Tags/Deleted\");\r\n            } else {}\r\n            // window.location.reload(\"/Home\");\r\n\r\n        });\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        var pathname = this\r\n            .props\r\n            .location\r\n            .pathname\r\n            .split(\"/\");\r\n        var alertName = pathname[2];\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Mangae Tags</h2>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4>Tags List</h4>\r\n\r\n                                        <div className=\"add-product\">\r\n                                                    <Link to='/AddTags'>Add Tag</Link>\r\n                                                </div>\r\n                                          \r\n                                        {alertName\r\n                                            ? <div\r\n                                                    className=\"alert alert-success display-none\"\r\n                                                    style={{\r\n                                                    display: \"block\"\r\n                                                }}>\r\n                                                    <a data-dismiss=\"alert\" href=\"#\" aria-hidden=\"true\" className=\"close\">×</a>\r\n                                                    Tags {alertName} &nbsp;\r\n                                                    Successfully\r\n                                                </div>\r\n                                            : ''}\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Tag Name</th>\r\n                                                   \r\n                                                    <th>Created On</th>\r\n                                                    <th>Updated On</th>\r\n                                                    <th>Action</th>\r\n                                                       \r\n\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {this\r\n                                                    .state\r\n                                                    .cityList\r\n                                                    .map((data, index) => {\r\n                                                        console.log(data);\r\n\r\n                                                        return (\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                <td>{data.tag}</td>\r\n                                                              \r\n                                                                <td>{data.created_on}\r\n                                                                </td>\r\n                                                                <td>{data.updated_on}</td>\r\n                                                                <td>\r\n\r\n                                                                            <Link to={`/EditTags/${data.tagId}`}>\r\n                                                                                <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n                                                                                    <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\r\n                                                                                </button>\r\n                                                                            </Link>\r\n\r\n                                                                            <button\r\n                                                                                data-toggle=\"tooltip\"\r\n                                                                                title=\"Trash\"\r\n                                                                                className=\"pd-setting-ed\"\r\n                                                                                data-id={data.tagId}\r\n                                                                                onClick={this\r\n                                                                                .deleteItem\r\n                                                                                .bind(this, data.tagId)}>\r\n                                                                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                                                            </button>\r\n                                                                        </td>\r\n                                                                   \r\n\r\n                                                            </tr>\r\n                                                        )\r\n\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tags;\r\n","import React from \"react\";\r\nimport {Form} from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass AddTags extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tag: '',\r\n            error_message: '',\r\n            date: new Date().toLocaleString(),\r\n            validError: false,\r\n           \r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onChange = (event) => {\r\n      \r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n       \r\n\r\n    };\r\n   \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n         \r\n\r\n                var sessionId = sessionStorage.getItem(\"RoleId\");\r\n               \r\n\r\n              \r\n\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref('/tags');\r\n                dbCon\r\n                    .push({tag: this.state.tag, \r\n                        created_on: this.state.date, sessionId: sessionId})\r\n                    .then(response => {\r\n                        try {\r\n                            console.log(response);\r\n\r\n                            this\r\n                                .props\r\n                                .history\r\n                                .push(\"/Tags/Created\");\r\n\r\n                        } catch (error) {\r\n                            console.log(error.config);\r\n                        }\r\n                    });\r\n\r\n            \r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Manage Tags</h2>\r\n\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add Tags</h4>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n\r\n                                                <Form onSubmit={this.handleSubmit} id=\"Add-category\">\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Tag Name<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Tags Name*\"\r\n                                                                id=\"add_category\"\r\n                                                                name=\"tag\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.tag}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Tags Name\", this.state.tag, \"required|whitespace|specialChar|min:3|max:20\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                    \r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"text-left custom-pro-edt-ds\">\r\n                                                                <button type=\"submit\" className=\"btn btn-ctl-bt waves-effect waves-light\">Add\r\n                                                                </button>\r\n\r\n                                                                <Link to=\"/Tags\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTags;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form} from 'reactstrap';\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n//import FileUploader from \"react-firebase-file-uploader\";\r\n\r\nclass EditTags extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tag: '',\r\n            error_message: '',\r\n            date: new Date().toLocaleString(),\r\n            validError: false,\r\n            uploadImage: '',\r\n            avatar: \"\",\r\n            isUploading: false,\r\n            progress: 0,\r\n            avatarURL: \"\"\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    componentDidMount() {\r\n        const {tagId} = this.props.match.params;\r\n        console.log(tagId);\r\n\r\n        var ref = firebase\r\n            .database()\r\n            .ref(`tags/${tagId}`);\r\n\r\n        ref.on('value', snapshot => {\r\n            var categories = snapshot.val();\r\n\r\n            // console.log(categories)\r\n\r\n            this.setState({tag: categories.tag, loading: false});\r\n            console.log(this.state.tag);\r\n        });\r\n\r\n    }\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\nconsole.log(this.state.tag);\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid() ) {\r\n            const {tagId} = this.props.match.params;\r\n           \r\n            let dbCon = firebase\r\n                .database()\r\n                .ref(`/tags/${tagId}`);\r\n            console.log(dbCon);\r\n            dbCon.update({tag: this.state.tag,  updated_on: this.state.date});\r\n\r\n            this\r\n                .props\r\n                .history\r\n                .push(\"/Tags/Updated\");\r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Manage Tags</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Edit Tags</h4>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <Form onSubmit={this.handleSubmit} id=\"Add-category\">\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Tag Name<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Tags Name*\"\r\n                                                                id=\"add_category\"\r\n                                                                name=\"tag\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.tag}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Tags Name\", this.state.tag, \"required|whitespace|specialChar|min:3|max:20\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"text-left custom-pro-edt-ds\">\r\n                                                                <button type=\"submit\" className=\"btn btn-ctl-bt waves-effect waves-light\">Update\r\n                                                                </button>\r\n\r\n                                                                <Link to=\"/Tags\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditTags;\r\n","import React from \"react\";\r\nimport firebase from './config';\r\n\r\nimport {BrowserRouter as Router, Route, Link, Redirect, withRouter} from \"react-router-dom\";\r\nimport Login from \"./auth/Login\";\r\nimport MyProfile from \"./component/MyProfile\";\r\nimport ChangePassword from \"./component/changepassword\";\r\n\r\nimport Dashboard from \"./component/dashboard\";\r\nimport EmployeeList from \"./component/employee-list\";\r\nimport AddEmployee from \"./component/add_employee\";\r\nimport EditEmployee from \"./component/edit_employee\";\r\n\r\n\r\nimport Tags from \"./component/tag_list\";\r\nimport AddTags from \"./component/add_tag\";\r\nimport EditTags from \"./component/edit_tag\";\r\n\r\n\r\n \r\n\r\nexport const PrivateRoute = ({\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => sessionStorage.getItem(\"RoleId\")\r\n        ? (<Component {...props}/>)\r\n        : (<Redirect\r\n            to={{\r\n            pathname: \"/login\",\r\n            state: {\r\n                from: props.location\r\n            }\r\n        }}/>)}/>\r\n);\r\n\r\nclass Routing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n           \r\n        };\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"site-wrapper\">\r\n                    <Route exact strict path=\"/\" component={Login}/>\r\n\r\n                    <Route path=\"/login\" component={Login}/>\r\n                   \r\n                    <PrivateRoute path=\"/MyProfile\" component={MyProfile}/>\r\n                    <PrivateRoute path=\"/ChangePassword\" component={ChangePassword}/>\r\n\r\n                    <PrivateRoute path=\"/Dashboard\" component={Dashboard}/>\r\n                    <PrivateRoute path=\"/UsersList\" component={EmployeeList}/>\r\n                    <PrivateRoute path=\"/AddUser\" component={AddEmployee}/>\r\n                    <PrivateRoute path=\"/EditUser/:employeeID\" component={EditEmployee}/>\r\n\r\n                    <PrivateRoute path=\"/Tags\" component={Tags}/>\r\n                    <PrivateRoute path=\"/AddTags\" component={AddTags}/>\r\n                    <PrivateRoute path=\"/EditTags/:tagId\" component={EditTags}/>\r\n\r\n                   \r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Routing;\r\n","import React from 'react';\r\nimport Routing from './Routing.js'\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (<Routing/>);\r\n    \r\n    \r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\r\n    <App />\r\n, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}