{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\editcoupon.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form } from 'reactstrap';\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport SimpleReactValidator from \"simple-react-validator\";\nimport moment from 'moment';\n\nvar EditCoupon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditCoupon, _React$Component);\n\n  function EditCoupon(props) {\n    var _this;\n\n    _classCallCheck(this, EditCoupon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditCoupon).call(this, props));\n\n    _this.promoCodeChange = function (event) {\n      var A = event.target.value;\n      var B = A.toUpperCase();\n\n      _this.setState(_defineProperty({}, event.target.name, B));\n\n      var ref = firebase.database().ref('Coupons/').orderByChild(\"couponCode\").equalTo(B);\n      ref.on('value', function (snapshot) {\n        var user_exist = snapshot.numChildren();\n        console.log(user_exist);\n\n        if (user_exist > 0) {\n          _this.setState({\n            error_message: \"Coupon Code is already exist\",\n            validError: false\n          });\n        } else {\n          _this.setState({\n            error_message: \"\",\n            validError: true\n          });\n        }\n      });\n    };\n\n    _this.onChange = function (event) {\n      if (event.target.name == 'type') {\n        if (event.target.value == \"datebased\") {\n          _this.setState({\n            datebasedDiv: true,\n            countbasedDiv: false\n          });\n        } else if (event.target.value == \"countbased\") {\n          _this.setState({\n            countbasedDiv: true,\n            datebasedDiv: false\n          });\n        }\n      }\n\n      if (event.target.name == 'usageType') {\n        if (event.target.value == \"Multiple\") {\n          _this.setState({\n            numberOfUsagesDiv: true\n          });\n        } else {\n          _this.setState({\n            numberOfUsagesDiv: false\n          });\n        }\n      } //const value = target.type === 'checkbox' ? target.checked : target.value;\n\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(_this.state);\n    };\n\n    _this.handleChangeStart = function (date) {\n      _this.setState({\n        validFrom: date\n      });\n    };\n\n    _this.handleChangeEnd = function (date) {\n      _this.setState({\n        validTo: date\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var CMSID = _this.props.match.params.CMSID;\n\n      if (_this.validator.allValid() && _this.state.validError == true) {\n        if (_this.state.couponCode && _this.state.couponCode.trim().length !== 0) {\n          var dbCon = firebase.database().ref(\"/Coupons/\".concat(CMSID));\n          dbCon.update({\n            couponCode: _this.state.couponCode,\n            couponDescription: _this.state.couponDescription,\n            type: _this.state.type,\n            validFrom: _this.state.validFrom,\n            validTo: _this.state.validTo,\n            numberOfCoupons: _this.state.numberOfCoupons,\n            usageType: _this.state.usageType,\n            numberOfUsages: _this.state.numberOfUsages,\n            offerValue: _this.state.offerValue,\n            minValue: _this.state.minValue,\n            offerType: _this.state.offerType,\n            created_on: _this.state.date\n          });\n\n          _this.setState({\n            pageTitle: '',\n            content: ''\n          });\n\n          _this.props.history.push(\"/Coupons/Updated\");\n        }\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      couponCode: \"\",\n      couponDescription: \"\",\n      type: \"\",\n      numberOfCoupons: \"\",\n      usageType: \"\",\n      numberOfUsages: \"\",\n      offerValue: \"\",\n      offerType: \"\",\n      created_on: \"\",\n      validFrom: \"\",\n      validTo: \"\",\n      minValue: \"\",\n      theme: 'snow',\n      error_message: '',\n      date: new Date().toLocaleString(),\n      validError: true\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeStart = _this.handleChangeStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeEnd = _this.handleChangeEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(EditCoupon, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var CMSID = this.props.match.params.CMSID;\n      console.log(CMSID);\n      var ref = firebase.database().ref(\"Coupons/\".concat(CMSID));\n      ref.on('value', function (snapshot) {\n        var gstData = snapshot.val();\n        console.log(gstData);\n\n        _this2.setState({\n          couponCode: gstData.couponCode,\n          couponDescription: gstData.couponDescription,\n          type: gstData.type,\n          validFrom: gstData.validFrom,\n          validTo: gstData.validTo,\n          numberOfCoupons: gstData.numberOfCoupons,\n          usageType: gstData.usageType,\n          numberOfUsages: gstData.numberOfUsages,\n          offerValue: gstData.offerValue,\n          offerType: gstData.offerType,\n          minValue: gstData.minValue,\n          created_on: gstData.created_on,\n          loading: false\n        }); //console.log(this.state.pageTitle);\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        'height': '300px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Coupons\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Edit Coupon\"), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"couponsform\",\n        className: \"form-horizontal\",\n        role: \"form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Coupon Code\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control required\",\n        type: \"text\",\n        onChange: this.promoCodeChange,\n        value: this.state.couponCode,\n        name: \"couponCode\",\n        id: \"couponCode\",\n        placeholder: \"Coupon Code*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \" \", this.state.error_message))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Coupon Description\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control required\",\n        rows: 5,\n        cols: 30,\n        name: \"couponDescription\",\n        onChange: this.onChange,\n        value: this.state.couponDescription,\n        id: \"couponDescription\",\n        placeholder: \"Coupon Description*\",\n        spellCheck: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), this.validator.message(\"Coupon Description\", this.state.couponDescription, \"required|whitespace|min:3|max:150\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Coupon Type\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        onChange: this.onChange,\n        value: \"datebased\",\n        checked: this.state.type === 'datebased',\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), \"Duration \\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        onChange: this.onChange,\n        value: \"countbased\",\n        checked: this.state.type === 'countbased',\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }), \"Count Based\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), this.validator.message(\"Coupon Type\", this.state.type, \"required\"))), React.createElement(\"div\", {\n        style: {\n          display: this.state.datebasedDiv ? '' : 'none'\n        },\n        id: \"datebaseddiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        size: 16,\n        type: \"date\",\n        min: moment(this.state.date).format(\"YYYY-MM-DD\"),\n        onChange: this.onChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Till\"), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        size: 16,\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.onChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        id: \"countbased\",\n        style: {\n          display: this.state.countbasedDiv ? '' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Count\"), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numberOfCoupons\",\n        name: \"numberOfCoupons\",\n        onChange: this.onChange,\n        value: this.state.numberOfCoupons,\n        type: \"number\",\n        placeholder: \"Count\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Usage\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"usageType\",\n        value: \"Once\",\n        onChange: this.onChange,\n        checked: this.state.usageType === 'Once',\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }), \"Once \\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"usageType\",\n        value: \"Multiple\",\n        onChange: this.onChange,\n        max: this.state.numberOfCoupons,\n        checked: this.state.usageType === 'Multiple',\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), \"Multiple\"), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"numberOfUsages\",\n        onChange: this.onChange,\n        value: this.state.numberOfUsages,\n        style: {\n          display: this.state.numberOfUsagesDiv ? '' : 'none'\n        },\n        id: \"numberOfUsages\",\n        className: \"valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), this.validator.message(\"usage Type\", this.state.usageType, \"required\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Minimum Value\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control required\",\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.minValue,\n        name: \"minValue\",\n        placeholder: \"Minimum Value*\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"Offer\"), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Offer\",\n        name: \"offerValue\",\n        onChange: this.onChange,\n        value: this.state.offerValue,\n        id: \"offerValue\",\n        className: \"form-control required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }), this.validator.message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\")), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"offerType\",\n        onChange: this.onChange,\n        checked: this.state.offerType === '%',\n        value: \"%\",\n        defaultChecked: true,\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }), \"% \\xA0\\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"offerType\",\n        onChange: this.onChange,\n        checked: this.state.offerType === 'Inr',\n        value: \"Inr\",\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }), \"INR\")))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-left custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/Coupons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, \"Cancel\")))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditCoupon;\n}(React.Component);\n\nexport default EditCoupon;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\editcoupon.js"],"names":["React","Link","Form","HeaderPage","FooterPage","SidebarPage","firebase","SimpleReactValidator","moment","EditCoupon","props","promoCodeChange","event","A","target","value","B","toUpperCase","setState","name","ref","database","orderByChild","equalTo","on","snapshot","user_exist","numChildren","console","log","error_message","validError","onChange","datebasedDiv","countbasedDiv","numberOfUsagesDiv","state","handleChangeStart","date","validFrom","handleChangeEnd","validTo","handleSubmit","preventDefault","CMSID","match","params","validator","allValid","couponCode","trim","length","dbCon","update","couponDescription","type","numberOfCoupons","usageType","numberOfUsages","offerValue","minValue","offerType","created_on","pageTitle","content","history","push","showMessages","forceUpdate","theme","Date","toLocaleString","bind","className","validators","whitespace","message","rule","val","helpers","testRegex","indexOf","specialChar","specialCharText","gstData","loading","divStyle","color","display","format","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Form} from 'reactstrap';\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport moment from 'moment';\r\n\r\nclass EditCoupon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            couponCode: \"\",\r\n            couponDescription: \"\",\r\n            type: \"\",\r\n            numberOfCoupons: \"\",\r\n            usageType: \"\",\r\n            numberOfUsages: \"\",\r\n            offerValue: \"\",\r\n            offerType: \"\",\r\n            created_on: \"\",\r\n           \r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            minValue:\"\",\r\n            theme: 'snow',\r\n            error_message:'',\r\n            date:new Date().toLocaleString(),\r\n            validError:true,\r\n\r\n        }\r\n        this.onChange = this\r\n            .onChange\r\n            .bind(this);\r\n        this.handleChangeStart = this\r\n            .handleChangeStart\r\n            .bind(this);\r\n        this.handleChangeEnd = this\r\n            .handleChangeEnd\r\n            .bind(this);\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n    componentDidMount() {\r\n        const {CMSID} = this.props.match.params;\r\n        console.log(CMSID);\r\n\r\n        var ref = firebase\r\n            .database()\r\n            .ref(`Coupons/${CMSID}`);\r\n\r\n        ref.on('value', snapshot => {\r\n            var gstData = snapshot.val();\r\n            console.log(gstData)\r\n            this.setState({\r\n                couponCode: gstData.couponCode,\r\n                couponDescription: gstData.couponDescription,\r\n                type: gstData.type,\r\n                validFrom: gstData.validFrom,\r\n                validTo: gstData.validTo,\r\n                numberOfCoupons: gstData.numberOfCoupons,\r\n                usageType: gstData.usageType,\r\n                numberOfUsages: gstData.numberOfUsages,\r\n                offerValue: gstData.offerValue,\r\n                offerType: gstData.offerType,\r\n                minValue: gstData.minValue,\r\n                created_on: gstData.created_on,\r\n                loading: false\r\n            });\r\n            //console.log(this.state.pageTitle);\r\n        });\r\n\r\n    }\r\n    promoCodeChange  = (event) => {\r\n        var A = event.target.value;\r\n\r\n        var B = A.toUpperCase();\r\n\r\n        this.setState({\r\n            [event.target.name]: B\r\n        });     \r\n            var ref = firebase\r\n            .database()\r\n            .ref('Coupons/').orderByChild(\"couponCode\").equalTo(B);\r\n            ref.on('value', snapshot => {\r\n                var  user_exist = snapshot.numChildren();\r\n                console.log(user_exist);\r\n           \r\n            if(user_exist>0){\r\n               \r\n               \r\n                this.setState({error_message: \"Coupon Code is already exist\",validError:false});\r\n            }else{\r\n                this.setState({error_message: \"\",validError:true});\r\n               \r\n            }\r\n           \r\n        })\r\n    \r\n       \r\n    };\r\n    onChange = (event) => {\r\n        if (event.target.name == 'type') {\r\n\r\n            if (event.target.value == \"datebased\") {\r\n                this.setState({datebasedDiv: true, countbasedDiv: false});\r\n            } else if (event.target.value == \"countbased\") {\r\n                this.setState({countbasedDiv: true, datebasedDiv: false});\r\n\r\n            }\r\n        }\r\n\r\n        if (event.target.name == 'usageType') {\r\n\r\n            if (event.target.value == \"Multiple\") {\r\n                this.setState({numberOfUsagesDiv: true});\r\n            } else {\r\n                this.setState({numberOfUsagesDiv: false});\r\n            }\r\n        }\r\n        //const value = target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        console.log(this.state);\r\n    };\r\n\r\n    handleChangeStart = (date) => {\r\n\r\n        this.setState({validFrom: date})\r\n    };\r\n    handleChangeEnd = (date) => {\r\n        this.setState({validTo: date})\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {CMSID} = this.props.match.params;\r\n        if (this.validator.allValid()&& this.state.validError == true) {\r\n        if (this.state.couponCode && this.state.couponCode.trim().length !== 0) {\r\n         \r\n            let dbCon = firebase\r\n                .database()\r\n                .ref(`/Coupons/${CMSID}`);\r\n          \r\n            dbCon.update({\r\n                couponCode: this.state.couponCode,\r\n                couponDescription: this.state.couponDescription,\r\n                type: this.state.type,\r\n                validFrom: this.state.validFrom,\r\n                validTo: this.state.validTo,\r\n                numberOfCoupons: this.state.numberOfCoupons,\r\n                usageType: this.state.usageType,\r\n                numberOfUsages: this.state.numberOfUsages,\r\n                offerValue: this.state.offerValue,\r\n                minValue:this.state.minValue,\r\n                offerType: this.state.offerType,\r\n                created_on: this.state.date\r\n            });\r\n\r\n            this.setState({pageTitle: '', content: ''});\r\n            this\r\n                .props\r\n                .history\r\n                .push(\"/Coupons/Updated\");\r\n        }\r\n    } else {\r\n        this\r\n            .validator\r\n            .showMessages();\r\n        this.forceUpdate();\r\n    }\r\n    };\r\n\r\n    render() {\r\n\r\n        const divStyle = {\r\n            'height': '300px'\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Coupons</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Edit Coupon</h4>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n\r\n                                                <form\r\n                                                    id=\"couponsform\"\r\n                                                    className=\"form-horizontal\"\r\n                                                    role=\"form\"\r\n                                                    onSubmit={this.handleSubmit}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Code<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <input\r\n                                                                className=\"form-control required\"\r\n                                                                type=\"text\"\r\n                                                                onChange={this.promoCodeChange}\r\n                                                                value={this.state.couponCode}\r\n                                                                name=\"couponCode\"\r\n                                                                id=\"couponCode\"\r\n                                                                placeholder=\"Coupon Code*\"\r\n                                                               /> {this\r\n                                                                .validator\r\n                                                                .message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\")}\r\n                                                           <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                           \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Description<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <textarea\r\n                                                                className=\"form-control required\"\r\n                                                                rows={5}\r\n                                                                cols={30}\r\n                                                                name=\"couponDescription\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.couponDescription}\r\n                                                                id=\"couponDescription\"\r\n                                                                placeholder=\"Coupon Description*\"\r\n                                                                spellCheck=\"false\"/>\r\n                                                                 {this\r\n                                                                .validator\r\n                                                                .message(\"Coupon Description\", this.state.couponDescription, \"required|whitespace|min:3|max:150\")}\r\n\r\n                                                           \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Type<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"type\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value=\"datebased\"\r\n                                                                    checked={this.state.type === 'datebased'}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Duration &nbsp;&nbsp;</label>\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"type\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value=\"countbased\"\r\n                                                                    checked={this.state.type === 'countbased'}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Count Based</label>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                             {this.validator.message(\"Coupon Type\", this.state.type, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div\r\n                                                        style={{\r\n                                                        display: this.state.datebasedDiv\r\n                                                            ? ''\r\n                                                            : 'none'\r\n                                                    }}\r\n                                                        id=\"datebaseddiv\">\r\n                                                        <div className=\"form-group setting-row\">\r\n                                                            <label className=\"col-sm-3 control-label\">From</label>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    size={16}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.date).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group setting-row\">\r\n                                                            <label className=\"col-sm-3 control-label\">Till</label>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    size={16}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div\r\n                                                        className=\"form-group setting-row\"\r\n                                                        id=\"countbased\"\r\n                                                        style={{\r\n                                                        display: this.state.countbasedDiv\r\n                                                            ? ''\r\n                                                            : 'none'\r\n                                                    }}>\r\n                                                        <label htmlFor=\"name\" className=\"col-sm-3 control-label\">Count</label>\r\n                                                        <div className=\"col-sm-8\"><input\r\n                                                            id=\"numberOfCoupons\"\r\n                                                            name=\"numberOfCoupons\"\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.numberOfCoupons}\r\n                                                            type=\"number\"\r\n                                                            placeholder=\"Count\"\r\n                                                            className=\"form-control\"/>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Usage<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"usageType\"\r\n                                                                    value=\"Once\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    checked={this.state.usageType === 'Once'}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Once &nbsp;&nbsp;</label>\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"usageType\"\r\n                                                                    value=\"Multiple\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    max={this.state.numberOfCoupons}\r\n                                                                    checked={this.state.usageType === 'Multiple'}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Multiple</label>\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                name=\"numberOfUsages\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.numberOfUsages}\r\n                                                                style={{\r\n                                                                display: this.state.numberOfUsagesDiv\r\n                                                                    ? ''\r\n                                                                    : 'none'\r\n                                                            }}\r\n                                                                id=\"numberOfUsages\"\r\n                                                                className=\"valid\"/>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                             {this.validator.message(\"usage Type\", this.state.usageType, \"required\")}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Minimum Value<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <input\r\n                                                                className=\"form-control required\"\r\n                                                                type=\"text\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.minValue}\r\n                                                                name=\"minValue\"\r\n                                                             \r\n                                                                placeholder=\"Minimum Value*\"\r\n                                                             /> {this\r\n                                                                .validator\r\n                                                                .message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\")}\r\n                                                           \r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group setting-row\">\r\n                                                        <label htmlFor=\"name\" className=\"col-sm-3 control-label\">Offer</label>\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Offer\"\r\n                                                                name=\"offerValue\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.offerValue}\r\n                                                                id=\"offerValue\"\r\n                                                                className=\"form-control required\"/>\r\n                                                                {this\r\n                                                                .validator\r\n                                                                .message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\")}\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-6\">\r\n                                                            <div>\r\n                                                                <label className=\"radio-inline no-padd\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"offerType\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        checked={this.state.offerType === '%'}\r\n                                                                        value=\"%\"\r\n                                                                        defaultChecked\r\n                                                                        className=\"icheck\"/>\r\n                                                                    % &nbsp;&nbsp;&nbsp;</label>\r\n                                                                <label className=\"radio-inline no-padd\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"offerType\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        checked={this.state.offerType === 'Inr'}\r\n                                                                        value=\"Inr\"\r\n                                                                        className=\"icheck\"/>\r\n                                                                    INR</label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">\r\n                                                            <div className=\"text-left custom-pro-edt-ds\">\r\n                                                                <button type=\"submit\" className=\"btn btn-ctl-bt waves-effect waves-light\">Save\r\n                                                                </button>\r\n\r\n                                                                <Link to=\"/Coupons\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditCoupon;\r\n"]},"metadata":{},"sourceType":"module"}