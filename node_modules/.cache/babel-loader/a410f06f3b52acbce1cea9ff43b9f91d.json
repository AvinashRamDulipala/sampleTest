{"ast":null,"code":"import _defineProperty from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\im-possibillion\\\\src\\\\component\\\\map.js\";\nimport React from 'react';\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport firebase from '../config';\nimport { connect } from 'react-redux';\nGeocode.setApiKey(\"AIzaSyC26N6wnyvXNmGR4jsSnnVx8GS7COgCM4E\");\nGeocode.enableDebug();\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this.handleChange = function (event) {\n      // console.log(event.target.value);\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.getCity = function (addressArray) {\n      var city = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n          city = addressArray[i].long_name;\n          return city;\n        }\n      }\n    };\n\n    _this.getState = function (addressArray) {\n      var state = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        for (var _i = 0; _i < addressArray.length; _i++) {\n          if (addressArray[_i].types[0] && 'administrative_area_level_1' === addressArray[_i].types[0]) {\n            state = addressArray[_i].long_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    _this.getCountry = function (addressArray) {\n      // console.log(addressArray);\n      var country = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'country' === addressArray[i].types[0]) {\n          country = addressArray[i].long_name;\n          return country;\n        }\n      }\n    };\n\n    _this.getFull_address = function (addressArray) {\n      var full_address = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (var j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              full_address = addressArray[i].long_name;\n              return full_address;\n            }\n          }\n        }\n      }\n    };\n\n    _this.getLand_mark = function (addressArray) {\n      var land_mark = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (var j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              land_mark = addressArray[i].long_name;\n              return land_mark;\n            }\n          }\n        }\n      }\n    };\n\n    _this.getLocality = function (addressArray) {\n      var locality = '';\n\n      for (var i = 0; i < addressArray.length; i++) {\n        for (var _i2 = 0; _i2 < addressArray.length; _i2++) {\n          if (addressArray[_i2].types[0] && 'administrative_area_level_1' === addressArray[_i2].types[0]) {\n            locality = addressArray[_i2].long_name;\n            return locality;\n          }\n        }\n      }\n    };\n\n    _this.onPlaceSelected = function (place) {\n      var full_address = place.formatted_address,\n          addressArray = place.address_components,\n          city = _this.getCity(addressArray),\n          land_mark = _this.getLand_mark(addressArray),\n          locality = _this.getLocality(addressArray),\n          country = _this.getCountry(addressArray),\n          state = _this.getState(addressArray),\n          latValue = place.geometry.location.lat(),\n          lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n\n      _this.setState({\n        full_address: full_address ? full_address : '',\n        city: city ? city : '',\n        land_mark: land_mark ? land_mark : '',\n        locality: locality ? locality : '',\n        country: country ? country : '',\n        state: state ? state : '',\n        markerPosition: {\n          lat: latValue,\n          lng: lngValue\n        },\n        mapPosition: {\n          lat: latValue,\n          lng: lngValue\n        }\n      });\n\n      var data = {\n        locality: _this.state.locality,\n        land_mark: _this.state.land_mark,\n        full_address: _this.state.full_address,\n        longitude: _this.state.mapPosition.lng,\n        latitude: _this.state.mapPosition.lat\n      };\n\n      _this.props.dispatch({\n        type: 'ADD_POST',\n        data: data\n      }); //   console.log(this.state.mapPosition.lat);\n      //   console.log(this.state.mapPosition.lng);\n\n    };\n\n    _this.onMarkerDragEnd = function (event) {\n      console.log('event', event);\n      var newLat = event.latLng.lat(),\n          newLng = event.latLng.lng(),\n          addressArray = [];\n      console.log(newLat);\n      console.log(newLng);\n      Geocode.fromLatLng(newLat, newLng).then(function (response) {\n        var full_address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = _this.getCity(addressArray),\n            land_mark = _this.getLand_mark(addressArray),\n            locality = _this.getLocality(addressArray),\n            country = _this.getCountry(addressArray),\n            state = _this.getState(addressArray);\n\n        _this.setState({\n          full_address: full_address ? full_address : '',\n          city: city ? city : '',\n          land_mark: land_mark ? land_mark : '',\n          locality: locality ? locality : '',\n          country: country ? country : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n\n        var data = {\n          locality: _this.state.locality,\n          land_mark: _this.state.land_mark,\n          full_address: _this.state.full_address,\n          longitude: _this.state.mapPosition.lng,\n          latitude: _this.state.mapPosition.lat\n        };\n\n        _this.props.dispatch({\n          type: 'ADD_POST',\n          data: data\n        }); //this.props.onFormChange(full_address,this.state.full_address);\n\n      }, function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.state = {\n      locality: '',\n      land_mark: '',\n      full_address: '',\n      city: '',\n      country: '',\n      state: '',\n      mapPosition: {\n        lat: _this.props.center.lat,\n        lng: _this.props.center.lng\n      },\n      markerPosition: {\n        lat: _this.props.center.lat,\n        lng: _this.props.center.lng\n      }\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        zip: {\n          message: \"Invalid Pin Code\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1;\n          }\n        },\n        website: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        },\n        Fax: {\n          message: \"Invalid fax number \",\n          rule: function rule(val, params, validator) {\n            return validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    // handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     if (this.validator.allValid()) {\n    //         const data ={\n    //         locality: this.state.locality,\n    //         landMark: this.state.land_mark,\n    //         fullAddress: this.state.full_address,\n    //        };\n    //        this.props.dispatch({\n    //         type:'ADD_POST',\n    //         data\n    //       });\n    //     } else {\n    //         this\n    //             .validator\n    //             .showMessages();\n    //         this.forceUpdate();\n    //     }\n    // };\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Geocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(function (response) {\n        var full_address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = _this2.getCity(addressArray),\n            land_mark = _this2.getLand_mark(addressArray),\n            locality = _this2.getLocality(addressArray),\n            country = _this2.getCountry(addressArray),\n            state = _this2.getState(addressArray);\n\n        _this2.setState({\n          full_address: full_address ? full_address : '',\n          city: city ? city : '',\n          land_mark: land_mark ? land_mark : '',\n          locality: locality ? locality : '',\n          country: country ? country : '',\n          state: state ? state : ''\n        }); //this.props.onFormChange(this.state.full_address);\n\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.markerPosition.lat !== this.props.center.lat || this.state.full_address !== nextState.full_address || //   this.state.city !== nextState.city ||\n      this.state.land_mark !== nextState.land_mark || this.state.locality !== nextState.locality //this.state.state !== nextState.state ||\n      // this.state.country !== nextState.country\n      ) {\n          return true;\n        } else if (this.props.center.lat === nextProps.center.lat) {\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var AsyncMap = withScriptjs(withGoogleMap(function (props) {\n        return React.createElement(GoogleMap, {\n          google: _this3.props.google,\n          defaultZoom: _this3.props.zoom,\n          defaultCenter: {\n            lat: _this3.state.mapPosition.lat,\n            lng: _this3.state.mapPosition.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(Autocomplete, {\n          style: {\n            width: '100%',\n            height: '40px',\n            paddingLeft: '16px',\n            marginTop: '2px',\n            marginBottom: '100px'\n          },\n          onPlaceSelected: _this3.onPlaceSelected,\n          types: ['(regions)'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }), React.createElement(Marker, {\n          google: _this3.props.google,\n          name: 'Dolores park',\n          draggable: true,\n          onDragEnd: _this3.onMarkerDragEnd,\n          position: {\n            lat: _this3.state.markerPosition.lat,\n            lng: _this3.state.markerPosition.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }), React.createElement(Marker, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }), React.createElement(InfoWindow, {\n          onClose: _this3.onInfoWindowClose,\n          position: {\n            lat: _this3.state.markerPosition.lat + 0.0018,\n            lng: _this3.state.markerPosition.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }, _this3.state.full_address), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390\n          },\n          __self: this\n        }), \"Latitude Value :\", React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, _this3.state.markerPosition.lat), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }), \"Longitude Value :\", React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, _this3.state.markerPosition.lng), \"City :\", React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393\n          },\n          __self: this\n        }, _this3.state.city), \"State :\", React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, _this3.state.state), \"country :\", React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, _this3.state.country))));\n      }));\n      var map;\n\n      if (this.props.center.lat !== undefined) {\n        map = React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-12 col-lg-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, \"Locality:\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control mb-30\",\n          placeholder: \"\",\n          name: \"locality\",\n          value: this.state.locality,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-12 col-lg-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, \"Land Mark(Optional)\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control mb-30\",\n          placeholder: \"\",\n          name: \"land_mark\",\n          value: this.state.land_mark,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-12 col-lg-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434\n          },\n          __self: this\n        }, \"Full Address\"), React.createElement(\"textarea\", {\n          type: \"text\",\n          className: \"form-control mb-30\",\n          placeholder: \"\",\n          name: \"full_address\",\n          value: this.state.full_address,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435\n          },\n          __self: this\n        }), this.validator.message(\"full_address\", this.state.full_address, \"required|min:3|max:355\")), React.createElement(\"div\", {\n          className: \"col-12 col-lg-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449\n          },\n          __self: this\n        }, \"Mark property on map:\"), React.createElement(AsyncMap, {\n          googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC26N6wnyvXNmGR4jsSnnVx8GS7COgCM4E&libraries=places\",\n          loadingElement: React.createElement(\"div\", {\n            style: {\n              height: \"80%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 453\n            },\n            __self: this\n          }),\n          containerElement: React.createElement(\"div\", {\n            style: {\n              height: this.props.height\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 456\n            },\n            __self: this\n          }),\n          mapElement: React.createElement(\"div\", {\n            style: {\n              height: \"80%\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 459\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450\n          },\n          __self: this\n        })));\n      } else {\n        map = React.createElement(\"div\", {\n          style: {\n            height: this.props.height\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472\n          },\n          __self: this\n        });\n      }\n\n      return map;\n    }\n  }]);\n\n  return Map;\n}(React.Component); // export default Map;\n\n\nexport default connect()(Map);","map":{"version":3,"sources":["D:\\im-possibillion\\src\\component\\map.js"],"names":["React","SimpleReactValidator","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Autocomplete","Geocode","firebase","connect","setApiKey","enableDebug","Map","props","handleChange","event","setState","target","name","value","getCity","addressArray","city","i","length","types","long_name","getState","state","getCountry","country","getFull_address","full_address","j","getLand_mark","land_mark","getLocality","locality","onPlaceSelected","place","formatted_address","address_components","latValue","geometry","location","lat","lngValue","lng","markerPosition","mapPosition","data","longitude","latitude","dispatch","type","onMarkerDragEnd","console","log","newLat","latLng","newLng","fromLatLng","then","response","results","error","center","validator","className","validators","whitespace","message","rule","val","params","helpers","testRegex","indexOf","specialChar","specialCharText","zip","website","Fax","nextProps","nextState","AsyncMap","google","zoom","width","height","paddingLeft","marginTop","marginBottom","onInfoWindowClose","padding","margin","map","undefined","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nimport firebase from '../config';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nGeocode.setApiKey(\"AIzaSyC26N6wnyvXNmGR4jsSnnVx8GS7COgCM4E\");\r\nGeocode.enableDebug();\r\n\r\n\r\n\r\nclass Map extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            \r\n            locality: '',\r\n            land_mark: '',\r\n            full_address: '',\r\n            city:'',\r\n            country:'',\r\n            state:'',\r\n          \r\n            mapPosition: {\r\n\r\n                lat: this.props.center.lat,\r\n                lng: this.props.center.lng\r\n               },\r\n               markerPosition: {\r\n                lat: this.props.center.lat,\r\n                lng: this.props.center.lng\r\n            },\r\n           \r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                \r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        // console.log(event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    // handleSubmit = (event) => {\r\n    //     event.preventDefault();\r\n    //     if (this.validator.allValid()) {\r\n\r\n      \r\n    //         const data ={\r\n           \r\n\r\n           \r\n    //         locality: this.state.locality,\r\n    //         landMark: this.state.land_mark,\r\n    //         fullAddress: this.state.full_address,\r\n    //        };\r\n    //        this.props.dispatch({\r\n    //         type:'ADD_POST',\r\n    //         data\r\n    //       });\r\n    //     } else {\r\n    //         this\r\n    //             .validator\r\n    //             .showMessages();\r\n    //         this.forceUpdate();\r\n    //     }\r\n\r\n    // };\r\n   \r\n    componentDidMount() {\r\n        Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\r\n         response => {\r\n          const full_address = response.results[0].formatted_address,\r\n           addressArray =  response.results[0].address_components,\r\n           city = this.getCity( addressArray ),\r\n           land_mark = this.getLand_mark( addressArray ),\r\n           locality = this.getLocality( addressArray ),\r\n           country = this.getCountry( addressArray ),\r\n          state = this.getState( addressArray );\r\n          this.setState( {\r\n            full_address: ( full_address ) ? full_address : '',\r\n            city: ( city ) ? city : '',\r\n            land_mark: ( land_mark ) ? land_mark : '',\r\n            locality: ( locality ) ? locality : '',\r\n           country: ( country ) ? country : '',\r\n            state: ( state ) ? state : '',\r\n           \r\n          } )\r\n          //this.props.onFormChange(this.state.full_address);\r\n         },\r\n         error => {\r\n          console.error(error);\r\n         }\r\n        );\r\n       };\r\n      \r\n       getCity = ( addressArray ) => {\r\n        let city = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n           \r\n         if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n          city = addressArray[ i ].long_name;\r\n          return city;\r\n         }\r\n        }\r\n       };\r\n       getState = ( addressArray ) => {\r\n        let state = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n         for( let i = 0; i < addressArray.length; i++ ) {\r\n          if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n           state = addressArray[ i ].long_name;\r\n           return state;\r\n          }\r\n         }\r\n        }\r\n       };\r\n       getCountry = ( addressArray ) => {\r\n          // console.log(addressArray);\r\n        let country = '';\r\n        \r\n         for( let i = 0; i < addressArray.length; i++ ) {\r\n           \r\n          if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n            country = addressArray[ i ].long_name;\r\n           return country;\r\n          \r\n         }\r\n        }\r\n       };\r\n       shouldComponentUpdate( nextProps, nextState ){\r\n        if (\r\n         this.state.markerPosition.lat !== this.props.center.lat ||\r\n         this.state.full_address !== nextState.full_address ||\r\n      //   this.state.city !== nextState.city ||\r\n         this.state.land_mark !== nextState.land_mark ||\r\n         this.state.locality !== nextState.locality \r\n         //this.state.state !== nextState.state ||\r\n        // this.state.country !== nextState.country\r\n\r\n        \r\n        ) {\r\n         return true\r\n        } else if ( this.props.center.lat === nextProps.center.lat ){\r\n         return false\r\n        }\r\n       }\r\n      \r\n      \r\n\r\n       getFull_address = ( addressArray ) => {\r\n        let full_address = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n         if ( addressArray[ i ].types[0]  ) {\r\n          for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n           if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n            full_address = addressArray[ i ].long_name;\r\n            return full_address;\r\n           }\r\n          }\r\n         }\r\n        }\r\n       };\r\n     \r\n       getLand_mark = ( addressArray ) => {\r\n        let land_mark = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n         if ( addressArray[ i ].types[0]  ) {\r\n          for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n           if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n            land_mark = addressArray[ i ].long_name;\r\n            return land_mark;\r\n           }\r\n          }\r\n         }\r\n        }\r\n       };\r\n\r\n      \r\n\r\n       getLocality= ( addressArray ) => {\r\n        let locality = '';\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n         for( let i = 0; i < addressArray.length; i++ ) {\r\n          if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n            locality = addressArray[ i ].long_name;\r\n           return locality;\r\n          }\r\n         }\r\n        }\r\n       };\r\n\r\n\r\n       onPlaceSelected = ( place ) => {\r\n        const full_address = place.formatted_address,\r\n           addressArray =  place.address_components,\r\n          city = this.getCity( addressArray ),\r\n           land_mark = this.getLand_mark( addressArray ),\r\n           locality = this.getLocality( addressArray ),\r\n           country = this.getCountry( addressArray ),\r\n           state = this.getState( addressArray ),\r\n           latValue = place.geometry.location.lat(),\r\n           lngValue = place.geometry.location.lng();\r\n        // Set these values in the state.\r\n          this.setState({\r\n            full_address: ( full_address ) ? full_address : '',\r\n             city: ( city ) ? city : '',\r\n             land_mark: ( land_mark ) ? land_mark : '',\r\n             locality: ( locality ) ? locality : '',\r\n             country: ( country ) ? country : '',\r\n           state: ( state ) ? state : '',\r\n           markerPosition: {\r\n            lat: latValue,\r\n            lng: lngValue\r\n           },\r\n           mapPosition: {\r\n            lat: latValue,\r\n            lng: lngValue\r\n           },\r\n          })\r\n          const data ={\r\n           \r\n\r\n           \r\n            locality: this.state.locality,\r\n            land_mark: this.state.land_mark,\r\n            full_address: this.state.full_address,\r\n            longitude:this.state.mapPosition.lng,\r\n            latitude:this.state.mapPosition.lat,\r\n           };\r\n           this.props.dispatch({\r\n            type:'ADD_POST',\r\n            data\r\n          });\r\n        //   console.log(this.state.mapPosition.lat);\r\n        //   console.log(this.state.mapPosition.lng);\r\n         };\r\n        \r\n         onMarkerDragEnd = ( event ) => {\r\n            console.log( 'event', event );\r\n            let newLat = event.latLng.lat(),\r\n             newLng = event.latLng.lng(),\r\n             addressArray = [];\r\n             console.log(newLat);\r\n             console.log(newLng);\r\n\r\n          Geocode.fromLatLng( newLat , newLng ).then(\r\n             response => {\r\n                const full_address = response.results[0].formatted_address,\r\n                addressArray =  response.results[0].address_components,\r\n                city = this.getCity( addressArray ),\r\n                land_mark = this.getLand_mark( addressArray ),\r\n                locality = this.getLocality( addressArray ),\r\n                country = this.getCountry( addressArray ),\r\n                state = this.getState( addressArray );\r\n          this.setState( {\r\n            full_address: ( full_address ) ? full_address : '',\r\n            city: ( city ) ? city : '',\r\n            land_mark: ( land_mark ) ? land_mark : '',\r\n            locality: ( locality ) ? locality : '',\r\n            country: ( country ) ? country : '',\r\n            state: ( state ) ? state : '',\r\n            markerPosition: {\r\n                lat: newLat,\r\n                lng: newLng\r\n               },\r\n               mapPosition: {\r\n                lat: newLat,\r\n                lng: newLng\r\n               },\r\n              })\r\n              const data ={\r\n                locality: this.state.locality,\r\n                land_mark: this.state.land_mark,\r\n                full_address: this.state.full_address,\r\n                longitude:this.state.mapPosition.lng,\r\n                latitude:this.state.mapPosition.lat,\r\n               };\r\n               this.props.dispatch({\r\n                type:'ADD_POST',\r\n                data\r\n              });\r\n              //this.props.onFormChange(full_address,this.state.full_address);\r\n             },\r\n             error => {\r\n              console.error(error);\r\n             }\r\n            );\r\n           };\r\n          \r\n\r\n\r\n         \r\n    \r\n  \r\n   \r\n  \r\n    render(){\r\n        const AsyncMap = withScriptjs(\r\n           withGoogleMap(\r\n            props => (\r\n             <GoogleMap google={this.props.google}\r\n              defaultZoom={this.props.zoom}\r\n              defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n             >\r\n              {/* For Auto complete Search Box */}\r\n              <Autocomplete\r\n               style={{\r\n                width: '100%',\r\n                height: '40px',\r\n                paddingLeft: '16px',\r\n                marginTop: '2px',\r\n                marginBottom: '100px'\r\n               }}\r\n               onPlaceSelected={ this.onPlaceSelected }\r\n               types={['(regions)']}\r\n              />\r\n        {/*Marker*/}\r\n              <Marker google={this.props.google}\r\n               name={'Dolores park'}\r\n                  draggable={true}\r\n                  onDragEnd={ this.onMarkerDragEnd }\r\n                     position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n              />\r\n              <Marker />\r\n        {/* InfoWindow on top of marker */}\r\n              <InfoWindow\r\n               onClose={this.onInfoWindowClose}\r\n               position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\r\n              >\r\n               <div>\r\n                <span style={{ padding: 0, margin: 0 }}>{ this.state.full_address }</span><br></br>\r\n                Latitude Value :<span style={{ padding: 0, margin: 0 }}>{ this.state.markerPosition.lat }</span> <br></br>\r\n                Longitude Value :<span style={{ padding: 0, margin: 0 }}>{ this.state.markerPosition.lng }</span> \r\n                City :<span style={{ padding: 0, margin: 0 }}>{ this.state.city }</span> \r\n                State :<span style={{ padding: 0, margin: 0 }}>{ this.state.state }</span> \r\n                country :<span style={{ padding: 0, margin: 0 }}>{ this.state.country }</span> \r\n               </div>\r\n              </InfoWindow>\r\n        </GoogleMap>\r\n        )\r\n           )\r\n          );\r\n        let map;\r\n          if( this.props.center.lat !== undefined ) {\r\n           map = <div className=\"row\" >\r\n         \r\n        \r\n        \r\n\r\n                                                        <div className=\"col-12 col-lg-4\">\r\n                                                            <label>Locality:</label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control mb-30\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"locality\"\r\n                                                                value={this.state.locality}\r\n                                                                onChange={this.handleChange}\r\n                                                               />\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col-12 col-lg-4\">\r\n                                                            <label>Land Mark(Optional)</label>\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control mb-30\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"land_mark\"\r\n                                                                value={this.state.land_mark}\r\n                                                                onChange={this.handleChange}/>\r\n                                                        </div>\r\n                                                       \r\n\r\n                                                        <div className=\"col-12 col-lg-4\">\r\n                                                            <label>Full Address</label>\r\n                                                            <textarea\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control mb-30\"\r\n                                                                placeholder=\"\"\r\n                                                                name=\"full_address\"\r\n                                                                value={this.state.full_address}\r\n                                                                onChange={this.handleChange}></textarea>\r\n                                                                {this\r\n                                                                        .validator\r\n                                                                        .message(\"full_address\", this.state.full_address, \"required|min:3|max:355\")}\r\n                                                                </div>\r\n\r\n                                                       \r\n                                                        <div className=\"col-12 col-lg-8\">\r\n                                                            <label>Mark property on map:</label>\r\n                                                            <AsyncMap\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC26N6wnyvXNmGR4jsSnnVx8GS7COgCM4E&libraries=places\"\r\n      loadingElement={\r\n       <div style={{ height: \"80%\" }} />\r\n      }\r\n      containerElement={\r\n       <div style={{ height: this.props.height }} />\r\n      }\r\n      mapElement={\r\n       <div style={{ height: \"80%\"}} />\r\n      }\r\n     />\r\n         </div>\r\n        \r\n\r\n       \r\n\r\n                                          \r\n           \r\n          </div>\r\n      \r\n        } else {\r\n           map = <div style={{height: this.props.height}} />\r\n          }\r\n          return( map )\r\n         }\r\n        }\r\n        \r\n  \r\n// export default Map;\r\nexport default connect() (Map);"]},"metadata":{},"sourceType":"module"}