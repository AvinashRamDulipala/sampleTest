{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\IM\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\IM\\\\src\\\\auth\\\\SignUp.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form } from 'reactstrap';\nimport firebase from '../config';\nimport SimpleReactValidator from \"simple-react-validator\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var user = null;\n        firebase.auth().createUserWithEmailAndPassword(_this.state.email_id, _this.state.password).then(function (result) {\n          var userId = result.user;\n          user = firebase.auth().currentUser;\n          user.sendEmailVerification();\n          console.log(user);\n          var dbCon = firebase.database().ref('users/' + userId.uid);\n          dbCon.set({\n            first_name: _this.state.first_name,\n            last_name: _this.state.last_name,\n            contact_number: _this.state.contact_number,\n            email_id: _this.state.email_id,\n            created_on: _this.state.date\n          });\n          var user = result.user;\n          console.log(user.uid);\n          sessionStorage.setItem(\"RoleId\", user.uid);\n          var sessionId = sessionStorage.getItem(\"RoleId\");\n          var cartDataId = localStorage.getItem('cartOrdersData');\n          firebase.database().ref(\"orders/\").orderByChild('cartDataId').equalTo(cartDataId).once('value', function (snapshot) {\n            snapshot.forEach(function (child) {\n              child.ref.update({\n                sessionId: sessionId,\n                cartDataId: \"\"\n              });\n            });\n          });\n        }).catch(function (error) {\n          _this.setState({\n            error: error\n          });\n\n          console.log(_this.state.error);\n\n          _this.setState({\n            employer_sevice_message: _this.state.error.message\n          });\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      contact_number: \"\",\n      email_id: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      employer_sevice_message: \"\",\n      date: new Date().toLocaleString(),\n      showLoading: false\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        passwordvalid: {\n          message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" + \"ter and 1 alphabet.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1;\n          }\n        },\n        passwordMismatch: {\n          message: \"confirm password must match with password field.\",\n          rule: function rule(val, params, validator) {\n            return document.getElementById(\"password_input\").value === val ? true : false;\n          }\n        },\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"color-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center m-b-md custom-login m-t-80 m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Shopality -Sign Up\"))), React.createElement(\"div\", {\n        className: \"hpanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"email\",\n        id: \"username\",\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        placeholder: \"example@gmail.com\",\n        title: \"Please enter you username\",\n        required: true,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), this.validator.message(\"Email\", this.state.email, \"required|email|min:6|max:70\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", (_React$createElement = {\n        type: \"password\"\n      }, _defineProperty(_React$createElement, \"type\", \"password\"), _defineProperty(_React$createElement, \"name\", \"password\"), _defineProperty(_React$createElement, \"value\", password), _defineProperty(_React$createElement, \"onChange\", this.onChange), _defineProperty(_React$createElement, \"title\", \"Please enter your password\"), _defineProperty(_React$createElement, \"placeholder\", \"******\"), _defineProperty(_React$createElement, \"className\", \"form-control\"), _defineProperty(_React$createElement, \"id\", \"password_input\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), \" \", this.validator.message(\"Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")), React.createElement(\"button\", {\n        className: \"btn btn-success btn-block loginbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"span\", {\n        className: \"pull-right pt-15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"New to Edibyl?\", React.createElement(Link, {\n        to: \"/Signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" Sign Up\")), this.state.employer_sevice_message ? React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.state.employer_sevice_message) : \"\", \" \"))), React.createElement(\"div\", {\n        className: \"col-lg-4 col-md-4 col-sm-4 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["D:\\Git\\IM\\src\\auth\\SignUp.js"],"names":["React","Link","Form","firebase","SimpleReactValidator","Login","props","handleSubmit","event","preventDefault","validator","allValid","user","auth","createUserWithEmailAndPassword","state","email_id","password","then","result","userId","currentUser","sendEmailVerification","console","log","dbCon","database","ref","uid","set","first_name","last_name","contact_number","created_on","date","sessionStorage","setItem","sessionId","getItem","cartDataId","localStorage","orderByChild","equalTo","once","snapshot","forEach","child","update","catch","error","setState","employer_sevice_message","message","showMessages","forceUpdate","onChange","target","name","value","confirm_password","Date","toLocaleString","showLoading","className","validators","passwordvalid","rule","val","params","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","whitespace","specialChar","specialCharText","email","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Form} from 'reactstrap';\r\nimport firebase from '../config';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        contact_number: \"\",\r\n        email_id: \"\",\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        employer_sevice_message: \"\",\r\n        date: new Date().toLocaleString(),\r\n\r\n        showLoading: false\r\n    };\r\n    this.validator = new SimpleReactValidator({\r\n        className: \"text-danger\",\r\n        validators: {\r\n            passwordvalid: {\r\n                message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                        \"ter and 1 alphabet.\",\r\n                rule: function (val, params, validator) {\r\n                    // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                    // params.indexOf(val) === -1\r\n                    return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                }\r\n            },\r\n            passwordMismatch: {\r\n                message: \"confirm password must match with password field.\",\r\n                rule: function (val, params, validator) {\r\n                    return document\r\n                        .getElementById(\"password_input\")\r\n                        .value === val\r\n                        ? true\r\n                        : false;\r\n                }\r\n            },\r\n            whitespace: {\r\n                message: \"The :attribute not allowed first whitespace   characters.\",\r\n                rule: function (val, params, validator) {\r\n                    // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                    // params.indexOf(val) === -1\r\n                    return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                }\r\n            },\r\n            specialChar: {\r\n                message: \"The :attribute not allowed special   characters.\",\r\n                rule: function (val, params, validator) {\r\n                    // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                    // params.indexOf(val) === -1\r\n                    return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                }\r\n            },\r\n            specialCharText: {\r\n                message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                rule: function (val, params, validator) {\r\n                    // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                    // params.indexOf(val) === -1\r\n                    return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n}\r\n\r\nhandleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.validator.allValid()) {\r\n        var user = null;\r\n        \r\n    firebase .auth()\r\n        .createUserWithEmailAndPassword(this.state.email_id, this.state.password)\r\n        .then((result) => {\r\n            \r\n            \r\n\r\n            var userId = result.user;\r\n            user = firebase.auth().currentUser;\r\n            user.sendEmailVerification();\r\n            console.log(user);\r\n             let dbCon = firebase.database().ref('users/' + userId.uid);\r\n            dbCon.set({\r\n              \r\n                first_name: this.state.first_name,\r\n                last_name: this.state.last_name,\r\n                contact_number: this.state.contact_number,\r\n                email_id: this.state.email_id,\r\n                created_on: this.state.date\r\n               \r\n            });\r\n            var user = result.user;\r\n \r\n            console.log(user.uid);\r\n          \r\n          sessionStorage.setItem(\"RoleId\", user.uid);\r\n          var sessionId = sessionStorage.getItem(\"RoleId\");\r\n\r\n          var cartDataId = localStorage.getItem('cartOrdersData');\r\n\r\n          firebase\r\n              .database()\r\n              .ref(\"orders/\")\r\n              .orderByChild('cartDataId')\r\n              .equalTo(cartDataId)\r\n              .once('value', function (snapshot) {\r\n                  snapshot\r\n                      .forEach(function (child) {\r\n                          child\r\n                              .ref\r\n                              .update({sessionId: sessionId, cartDataId: \"\"});\r\n                      });\r\n              });\r\n     \r\n             \r\n            \r\n        })\r\n        .catch(error => {\r\n            this.setState({error});\r\n            console.log(this.state.error);\r\n            this.setState({employer_sevice_message: this.state.error.message});\r\n        });\r\n    } else {\r\n        this.validator.showMessages();\r\n        this.forceUpdate();\r\n      }\r\n\r\n};\r\nonChange = (event) => {\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n};\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"color-line\"></div>\r\n\r\n    <div className=\"container-fluid\">\r\n     <Form\r\n      onSubmit={this.handleSubmit}\r\n        id=\"login-form\"\r\n      >\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n            <div className=\"col-md-4 col-md-4 col-sm-4 col-xs-12\">\r\n                <div className=\"text-center m-b-md custom-login m-t-80 m-b-20\">\r\n               <h1><b>Shopality -Sign Up</b></h1>\r\n                </div>\r\n                <div className=\"hpanel\">\r\n                    <div className=\"panel-body\">\r\n                      \r\n                            <div className=\"form-group\">\r\n                                <label className=\"control-label\" >Email</label>\r\n                                <input  type=\"email\"\r\n         \r\n          id=\"username\"\r\n          name=\"email\"\r\n          value={email}\r\n         \r\n          onChange={this.onChange} placeholder=\"example@gmail.com\" title=\"Please enter you username\" required  className=\"form-control\"/>\r\n                        {this\r\n                                                    .validator\r\n                                                    .message(\"Email\", this.state.email, \"required|email|min:6|max:70\")}       \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"control-label\" >Password</label>\r\n                                <input type=\"password\"\r\n                                 type=\"password\"\r\n          name=\"password\"\r\n          \r\n          value={password}\r\n         \r\n          onChange={this.onChange}\r\n           title=\"Please enter your password\" placeholder=\"******\"  className=\"form-control\" id=\"password_input\"/> {this\r\n            .validator\r\n            .message(\"Password\", this.state.password, \"required|passwordvalid|min:6|max:30\")}\r\n                            </div>\r\n                   \r\n                            <button className=\"btn btn-success btn-block loginbtn\">Login</button>\r\n                            <span className=\"pull-right pt-15\">New to Edibyl? \r\n                                                        <Link to={`/Signup`}> Sign Up</Link>\r\n                                                    </span>\r\n                            {this.state.employer_sevice_message ? (\r\n                              <div className=\"alert alert-warning\" role=\"alert\">\r\n                                {this.state.employer_sevice_message}\r\n                              </div>\r\n                            ) : (\r\n                              \"\"\r\n                            )}{\" \"}\r\n                            \r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-12\"></div>\r\n        </div>\r\n </Form>\r\n    </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}