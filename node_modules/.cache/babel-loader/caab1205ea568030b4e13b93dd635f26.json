{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\MerchantPaymentsList.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FadeIn from \"react-fade-in\";\nimport axios from \"axios\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport moment from 'moment';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport readXlsxFile from 'read-excel-file';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\n$.DataTable = require('datatables.net');\n\nvar MerchantPaymentsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MerchantPaymentsList, _React$Component);\n\n  function MerchantPaymentsList(props) {\n    var _this;\n\n    _classCallCheck(this, MerchantPaymentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MerchantPaymentsList).call(this, props));\n\n    _this.onChange = function (event) {\n      readXlsxFile(event.type.value).then(function (rows) {\n        console.log(rows); // `rows` is an array of rows\n        // each row being an array of cells.\n      });\n    };\n\n    _this.fileHandler = function (event) {\n      var fileObj = event.target.files[0]; //just pass the fileObj as parameter\n\n      ExcelRenderer(fileObj, function (err, resp) {\n        console.log(resp);\n\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n\n          var data = [];\n          resp.rows.forEach(function (childSnapShot) {\n            var ServiceData = {\n              id: childSnapShot[1]\n            };\n            data.push(ServiceData);\n          });\n          console.log(data); // this.setState({ serviceProviderList:data, countPage: data.length,loading: false });\n          // console.log(this.state.serviceProviderList);\n        }\n      });\n    };\n\n    _this.dateChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var validFrom = new Date(_this.state.validFrom).toLocaleString();\n        var validTo = new Date(_this.state.validTo).toLocaleString();\n        var ref = firebase.database().ref(\"orders/\").orderByChild(\"created_on\").startAt(validFrom).endAt(validTo);\n        ref.once('value', function (snapshot) {\n          var data = [];\n          console.log(snapshot.val());\n          var i = 1;\n          snapshot.forEach(function (childSnapShot) {\n            var Merchants = {\n              Sno: i++,\n              orderId: childSnapShot.val().orderId,\n              customerName: childSnapShot.val().first_name + \" \" + childSnapShot.val().last_name,\n              items: childSnapShot.val().cartDataItems.length,\n              totalAmount: childSnapShot.val().totalAmount,\n              status: childSnapShot.val().status,\n              order_on: childSnapShot.val().created_on,\n              emailId: childSnapShot.val().email_id\n            };\n            data.push(Merchants);\n          });\n\n          _this.setState({\n            orderDateList: data,\n            loading: false\n          });\n\n          console.log(_this.state.orderDateList);\n\n          _this.csvLink.link.click();\n        });\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      orderList: [],\n      loading: false,\n      count: 1,\n      activePage: \"1\",\n      countPage: \"\",\n      orderStatusList: [],\n      validFrom: \"\",\n      validTo: \"\",\n      orderDateList: [],\n      cols: '',\n      rows: ''\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MerchantPaymentsList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pathName = this.props.location.pathname;\n      var ordersPath = pathName.substr(8);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Orders\")))))))))), React.createElement(\"div\", {\n        className: \"product-status mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"product-status-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \" \", ordersPath, \" Orders List\"), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.fileHandler.bind(this),\n        style: {\n          \"padding\": \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        min: moment().format(\"2019-06-01\"),\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        onChange: this.dateChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }))), this.validator.message(\"Valid From\", this.state.validFrom, \"required\"))), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"input-group date\",\n        id: \"datetimepicker2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        max: moment(new Date()).format(\"YYYY-MM-DD\"),\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.dateChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }))), this.validator.message(\"Valid To\", this.state.validTo, \"required\"))))), React.createElement(\"div\", {\n        className: \"col-sm-6 pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleSubmit,\n        title: \"download\",\n        className: \"pd-setting-ed mrg_top\",\n        style: {\n          marginTop: \"28px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \" Export to excel \"))), React.createElement(CSVLink, {\n        data: this.state.orderDateList,\n        ref: function ref(r) {\n          return _this2.csvLink = r;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \" \"), React.createElement(\"table\", {\n        className: \"table table-bordered paginationTable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"S.no\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"CustomerName\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Order ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Items(Count)\"), React.createElement(\"th\", {\n        className: \"li-product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Grand Total\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Order Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, this.state.orderList && this.state.orderList.map(function (data, index) {\n        var _React$createElement;\n\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, index + 1), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, data.customerName && data.customerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, data.orderId), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, data.items), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, data.totalcart), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, React.createElement(\"select\", (_React$createElement = {\n          name: \"select\",\n          className: \"form-control pro-edt-select form-control-primary\"\n        }, _defineProperty(_React$createElement, \"name\", \"orderStatus\"), _defineProperty(_React$createElement, \"value\", data.orderStatus), _defineProperty(_React$createElement, \"id\", data.fireorderId), _defineProperty(_React$createElement, \"data-rid\", data.orderId), _defineProperty(_React$createElement, \"data-email\", data.emailId && data.emailId), _defineProperty(_React$createElement, \"data-name\", data.customerName && data.customerName), _defineProperty(_React$createElement, \"onChange\", _this2.onChange), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"option\", {\n          value: data.status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, data.status), _this2.state.orderStatusList.map(function (data, index) {\n          return React.createElement(\"option\", {\n            value: data.orderStatus,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349\n            },\n            __self: this\n          }, data.orderStatus);\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, data.created_on), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/ViewInvoice/\".concat(data.fireorderId),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          \"data-toggle\": \"tooltip\",\n          title: \"Edit\",\n          className: \"pd-setting-ed\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-eye\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })))));\n      }))), this.state.rows ? React.createElement(OutTable, {\n        data: this.state.rows,\n        columns: this.state.cols,\n        tableClassName: \"ExcelTable2007\",\n        tableHeaderRowClass: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }) : '')))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MerchantPaymentsList;\n}(React.Component);\n\nexport default MerchantPaymentsList;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\MerchantPaymentsList.js"],"names":["React","Link","FadeIn","axios","HeaderPage","FooterPage","SidebarPage","firebase","moment","CSVLink","CSVDownload","SimpleReactValidator","swal","$","readXlsxFile","OutTable","ExcelRenderer","DataTable","require","MerchantPaymentsList","props","onChange","event","type","value","then","rows","console","log","fileHandler","fileObj","target","files","err","resp","setState","cols","data","forEach","childSnapShot","ServiceData","id","push","dateChange","name","handleSubmit","preventDefault","validator","allValid","validFrom","Date","state","toLocaleString","validTo","ref","database","orderByChild","startAt","endAt","once","snapshot","val","i","Merchants","Sno","orderId","customerName","first_name","last_name","items","cartDataItems","length","totalAmount","status","order_on","created_on","emailId","email_id","orderDateList","loading","csvLink","link","click","showMessages","forceUpdate","orderList","count","activePage","countPage","orderStatusList","className","validators","whitespace","message","rule","params","helpers","testRegex","indexOf","specialChar","specialCharText","clearTimeout","interval","pathName","location","pathname","ordersPath","substr","bind","format","marginTop","r","map","index","totalcart","orderStatus","fireorderId","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AACA,OAAOC,UAAP,MAAuB,UAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAAQC,QAAR,EAAkBC,aAAlB,QAAsC,sBAAtC;AACAH,CAAC,CAACI,SAAF,GAAcC,OAAO,CAAC,gBAAD,CAArB;;IAEMC,oB;;;;;AACF,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8FAAMA,KAAN;;AADe,UAiDnBC,QAjDmB,GAiDT,UAACC,KAAD,EAAU;AAChBR,MAAAA,YAAY,CAACQ,KAAK,CAACC,IAAN,CAAWC,KAAZ,CAAZ,CAA+BC,IAA/B,CAAoC,UAACC,IAAD,EAAU;AAE5CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAF4C,CAG5C;AACA;AACD,OALD;AAMD,KAxDgB;;AAAA,UAyDjBG,WAzDiB,GAyDH,UAACP,KAAD,EAAW;AACvB,UAAIQ,OAAO,GAAGR,KAAK,CAACS,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAd,CADuB,CAGvB;;AACAhB,MAAAA,aAAa,CAACc,OAAD,EAAU,UAACG,GAAD,EAAMC,IAAN,EAAe;AACpCP,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;;AAEA,YAAGD,GAAH,EAAO;AACLN,UAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,SAFD,MAGI;AAEF,gBAAKE,QAAL,CAAc;AACZC,YAAAA,IAAI,EAAEF,IAAI,CAACE,IADC;AAEZV,YAAAA,IAAI,EAAEQ,IAAI,CAACR;AAFC,WAAd;;AAKA,cAAMW,IAAI,GAAG,EAAb;AAGAH,UAAAA,IAAI,CAACR,IAAL,CAAUY,OAAV,CAAkB,UAAAC,aAAa,EAAI;AAEjC,gBAAMC,WAAW,GAAG;AAClBC,cAAAA,EAAE,EAAEF,aAAa,CAAC,CAAD;AADC,aAApB;AAKAF,YAAAA,IAAI,CAACK,IAAL,CAAUF,WAAV;AACD,WARD;AASAb,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ,EAnBE,CAqBF;AACA;AACD;AACF,OA9BY,CAAb;AAgCD,KA7FgB;;AAAA,UAmGnBM,UAnGmB,GAmGN,UAACrB,KAAD,EAAW;AAEpB,YAAKa,QAAL,qBACKb,KAAK,CAACS,MAAN,CAAaa,IADlB,EACyBtB,KAAK,CAACS,MAAN,CAAaP,KADtC;AAGH,KAxGkB;;AAAA,UA2GnBqB,YA3GmB,GA2GJ,UAACvB,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACwB,cAAN;;AACA,UAAI,MAAKC,SAAL,CAAeC,QAAf,EAAJ,EAA+B;AAC3B,YAAIC,SAAS,GAAE,IAAIC,IAAJ,CAAS,MAAKC,KAAL,CAAWF,SAApB,EAA+BG,cAA/B,EAAf;AACA,YAAIC,OAAO,GAAE,IAAIH,IAAJ,CAAS,MAAKC,KAAL,CAAWE,OAApB,EAA6BD,cAA7B,EAAb;AAEA,YAAIE,GAAG,GAAG/C,QAAQ,CACjBgD,QADS,GAETD,GAFS,CAEL,SAFK,EAEME,YAFN,CAEmB,YAFnB,EAGTC,OAHS,CAGDR,SAHC,EAITS,KAJS,CAIHL,OAJG,CAAV;AAMAC,QAAAA,GAAG,CAACK,IAAJ,CAAS,OAAT,EAAkB,UAAAC,QAAQ,EAAI;AAC1B,cAAMvB,IAAI,GAAG,EAAb;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAQ,CAACC,GAAT,EAAZ;AACZ,cAAIC,CAAC,GAAE,CAAP;AACYF,UAAAA,QAAQ,CAACtB,OAAT,CAAiB,UAAAC,aAAa,EAAI;AAE9B,gBAAMwB,SAAS,GAAG;AACdC,cAAAA,GAAG,EAAEF,CAAC,EADQ;AAEdG,cAAAA,OAAO,EAAE1B,aAAa,CACjBsB,GADI,GAEJI,OAJS;AAKdC,cAAAA,YAAY,EAAE3B,aAAa,CACtBsB,GADS,GAETM,UAFS,GAEI,GAFJ,GAEU5B,aAAa,CAChCsB,GADmB,GAEnBO,SATS;AAUdC,cAAAA,KAAK,EAAE9B,aAAa,CACfsB,GADE,GAEFS,aAFE,CAGFC,MAbS;AAcVC,cAAAA,WAAW,EAAEjC,aAAa,CACzBsB,GADY,GAEbW,WAhBU;AAiBdC,cAAAA,MAAM,EAAElC,aAAa,CAChBsB,GADG,GAEHY,MAnBS;AAoBdC,cAAAA,QAAQ,EAAEnC,aAAa,CAClBsB,GADK,GAELc,UAtBS;AAuBdC,cAAAA,OAAO,EAAErC,aAAa,CACjBsB,GADI,GAEJgB;AAzBS,aAAlB;AA4BAxC,YAAAA,IAAI,CAACK,IAAL,CAAUqB,SAAV;AACH,WA/BD;;AAgCA,gBAAK5B,QAAL,CAAc;AAAC2C,YAAAA,aAAa,EAAEzC,IAAhB;AAAsB0C,YAAAA,OAAO,EAAE;AAA/B,WAAd;;AACApD,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAKuB,KAAL,CAAW2B,aAAvB;;AAEA,gBAAKE,OAAL,CAAaC,IAAb,CAAkBC,KAAlB;AAMH,SA7CD;AAiDH,OA3DD,MA2DO;AACH,cACKnC,SADL,CAEKoC,YAFL;;AAGA,cAAKC,WAAL;AACH;AACJ,KA9KkB;;AAEf,UAAKjC,KAAL,GAAa;AACTkC,MAAAA,SAAS,EAAE,EADF;AAETN,MAAAA,OAAO,EAAE,KAFA;AAGTO,MAAAA,KAAK,EAAE,CAHE;AAITC,MAAAA,UAAU,EAAE,GAJH;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,eAAe,EAAE,EANR;AAOTxC,MAAAA,SAAS,EAAE,EAPF;AAQTI,MAAAA,OAAO,EAAE,EARA;AASTyB,MAAAA,aAAa,EAAC,EATL;AAUT1C,MAAAA,IAAI,EAAC,EAVI;AAWTV,MAAAA,IAAI,EAAC;AAXI,KAAb;AAaA,UAAKqB,SAAL,GAAiB,IAAIpC,oBAAJ,CAAyB;AACtC+E,MAAAA,SAAS,EAAE,aAD2B;AAEtCC,MAAAA,UAAU,EAAE;AAERC,QAAAA,UAAU,EAAE;AACRC,UAAAA,OAAO,EAAE,2DADD;AAERC,UAAAA,IAAI,EAAE,cAAUjC,GAAV,EAAekC,MAAf,EAAuBhD,SAAvB,EAAkC;AACpC;AACA;AACA,mBAAQA,SAAS,CAACiD,OAAV,CAAkBC,SAAlB,CAA4BpC,GAA5B,EAAiC,SAAjC,KAA+CkC,MAAM,CAACG,OAAP,CAAerC,GAAf,MAAwB,CAAC,CAAhF;AACH;AANO,SAFJ;AAURsC,QAAAA,WAAW,EAAE;AACTN,UAAAA,OAAO,EAAE,kDADA;AAETC,UAAAA,IAAI,EAAE,cAAUjC,GAAV,EAAekC,MAAf,EAAuBhD,SAAvB,EAAkC;AACpC;AACA;AACA,mBAAQA,SAAS,CAACiD,OAAV,CAAkBC,SAAlB,CAA4BpC,GAA5B,EAAiC,0BAAjC,KAAgEkC,MAAM,CAACG,OAAP,CAAerC,GAAf,MAAwB,CAAC,CAAjG;AACH;AANQ,SAVL;AAkBRuC,QAAAA,eAAe,EAAE;AACbP,UAAAA,OAAO,EAAE,0DADI;AAEbC,UAAAA,IAAI,EAAE,cAAUjC,GAAV,EAAekC,MAAf,EAAuBhD,SAAvB,EAAkC;AACpC;AACA;AACA,mBAAQA,SAAS,CAACiD,OAAV,CAAkBC,SAAlB,CAA4BpC,GAA5B,EAAiC,uBAAjC,KAA6DkC,MAAM,CAACG,OAAP,CAAerC,GAAf,MAAwB,CAAC,CAA9F;AACH;AANY;AAlBT;AAF0B,KAAzB,CAAjB;AAfe;AA+ClB;;;;2CA+CsB;AAEnBwC,MAAAA,YAAY,CAAC,KAAKC,QAAN,CAAZ;AACH;;;6BA8EQ;AAAA;;AACL,UAAMC,QAAQ,GAAG,KAAKnF,KAAL,CAAWoF,QAAX,CAAoBC,QAArC;AAEA,UAAMC,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAgB,CAAhB,CAAnB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAFJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ,CADJ,CAHJ,EAyBI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMD,UAAN,iBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAK7E,WAAL,CAAiB+E,IAAjB,CAAsB,IAAtB,CAA7B;AAA0D,QAAA,KAAK,EAAE;AAAC,qBAAU;AAAX,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKpC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACgD,QAAA,IAAI,EAAC,WADrD;AAEgD,QAAA,EAAE,EAAC,WAFnD;AAGgD,QAAA,GAAG,EAAEpG,MAAM,GAAGqG,MAAT,CAAgB,YAAhB,CAHrD;AAIgD,QAAA,GAAG,EAAErG,MAAM,CAAC,IAAI0C,IAAJ,EAAD,CAAN,CAAmB2D,MAAnB,CAA0B,YAA1B,CAJrD;AAKgD,QAAA,IAAI,EAAC,MALrD;AAQgD,QAAA,QAAQ,EAAE,KAAKlE,UAR/D;AASgD,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWF,SATlE;AAUgD,QAAA,SAAS,EAAC,cAV1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAaI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAbJ,CAFJ,EAoBK,KAAKF,SAAL,CAAe8C,OAAf,CAAuB,YAAvB,EAAqC,KAAK1C,KAAL,CAAWF,SAAhD,EAA2D,UAA3D,CApBL,CADR,CADJ,EA0BI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACgD,QAAA,IAAI,EAAC,SADrD;AAEgD,QAAA,EAAE,EAAC,SAFnD;AAGgD,QAAA,SAAS,EAAC,cAH1D;AAIgD,QAAA,GAAG,EAAEzC,MAAM,CAAC,IAAI0C,IAAJ,EAAD,CAAN,CAAmB2D,MAAnB,CAA0B,YAA1B,CAJrD;AAMgD,QAAA,IAAI,EAAC,MANrD;AAOgD,QAAA,GAAG,EAAErG,MAAM,CAAC,KAAK2C,KAAL,CAAWF,SAAZ,CAAN,CAA6B4D,MAA7B,CAAoC,YAApC,CAPrD;AAQgD,QAAA,QAAQ,EAAE,KAAKlE,UAR/D;AASgD,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,OATlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAWI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAXJ,CAFJ,EAkBK,KAAKN,SAAL,CAAe8C,OAAf,CAAuB,UAAvB,EAAmC,KAAK1C,KAAL,CAAWE,OAA9C,EAAuD,UAAvD,CAlBL,CADR,CA1BJ,CADA,CADJ,EAoDI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAuB,QAAA,OAAO,EAAE,KAAKR,YAArC;AAAoD,QAAA,KAAK,EAAC,UAA1D;AAAqE,QAAA,SAAS,EAAC,uBAA/E;AAAuG,QAAA,KAAK,EAAE;AAACiE,UAAAA,SAAS,EAAC;AAAX,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADA,CApDJ,CALoC,EA8DoB,oBAAC,OAAD;AACtD,QAAA,IAAI,EAAE,KAAK3D,KAAL,CAAW2B,aADqC;AACrB,QAAA,GAAG,EAAE,aAACiC,CAAD;AAAA,iBAAO,MAAI,CAAC/B,OAAL,GAAe+B,CAAtB;AAAA,SADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9DpB,EAoEI;AAAO,QAAA,SAAS,EAAC,sCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,EAKI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,CADJ,CADJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK5D,KAAL,CAAWkC,SAAX,IAAwB,KACpBlC,KADoB,CAEpBkC,SAFoB,CAGpB2B,GAHoB,CAGhB,UAAC3E,IAAD,EAAO4E,KAAP,EAAiB;AAAA;;AAElB,eAEI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAK,GAAG,CAAb,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK5E,IAAI,CAAC6B,YAAL,IAAqB7B,IAAI,CAAC6B,YAA/B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK7B,IAAI,CAAC4B,OAAV,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK5B,IAAI,CAACgC,KAAV,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKhC,IAAI,CAAC6E,SAAV,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC;AAFd,yDAGS,aAHT,kDAIW7E,IAAI,CAAC8E,WAJhB,+CAKQ9E,IAAI,CAAC+E,WALb,qDAMc/E,IAAI,CAAC4B,OANnB,uDAOgB5B,IAAI,CAACuC,OAAL,IAAgBvC,IAAI,CAACuC,OAPrC,sDAQevC,IAAI,CAAC6B,YAAL,IAAqB7B,IAAI,CAAC6B,YARzC,qDASc,MAAI,CAAC7C,QATnB;AAAA;AAAA;AAAA,0FAUI;AAAQ,UAAA,KAAK,EAAEgB,IAAI,CAACoC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BpC,IAAI,CAACoC,MAAlC,CAVJ,EAWK,MAAI,CACAtB,KADJ,CAEIsC,eAFJ,CAGIuB,GAHJ,CAGQ,UAAC3E,IAAD,EAAO4E,KAAP,EAAiB;AAElB,iBACI;AAAQ,YAAA,KAAK,EAAE5E,IAAI,CAAC8E,WAApB;AAAiC,YAAA,GAAG,EAAEF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8C5E,IAAI,CAAC8E,WAAnD,CADJ;AAIH,SATJ,CAXL,CADJ,CAPJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK9E,IAAI,CAACsC,UAAV,CAlCJ,EAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI,oBAAC,IAAD;AAAM,UAAA,EAAE,yBAAkBtC,IAAI,CAAC+E,WAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,yBAAY,SAApB;AAA8B,UAAA,KAAK,EAAC,MAApC;AAA2C,UAAA,SAAS,EAAC,eAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAyB,yBAAY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CAHJ,CApCJ,CAFJ;AAkDH,OAvDoB,CAD7B,CAdJ,CApEJ,EA+II,KAAKjE,KAAL,CAAWzB,IAAX,GAChB,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWzB,IAA3B;AAAiC,QAAA,OAAO,EAAE,KAAKyB,KAAL,CAAWf,IAArD;AAA2D,QAAA,cAAc,EAAC,gBAA1E;AAA2F,QAAA,mBAAmB,EAAC,SAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADgB,GAEvC,EAjJmC,CADJ,CADJ,CADJ,CADJ,CAzBJ,CAHJ,EA0LI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1LJ,CADJ;AA+LH;;;;EApX8BpC,KAAK,CAACqH,S;;AAuXzC,eAAelG,oBAAf","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport axios from \"axios\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport moment from 'moment';\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nimport swal from 'sweetalert';\r\nimport $ from 'jquery';\r\nimport readXlsxFile from 'read-excel-file'\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n$.DataTable = require('datatables.net');\r\n\r\nclass MerchantPaymentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orderList: [],\r\n            loading: false,\r\n            count: 1,\r\n            activePage: \"1\",\r\n            countPage: \"\",\r\n            orderStatusList: [],\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            orderDateList:[],\r\n            cols:'',\r\n            rows:''\r\n        };\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n      \r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n           \r\n\r\n    }\r\n\r\n    onChange =(event) =>{\r\n        readXlsxFile(event.type.value).then((rows) => {\r\n    \r\n          console.log(rows);\r\n          // `rows` is an array of rows\r\n          // each row being an array of cells.\r\n        })\r\n      }\r\n      fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n    \r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n          console.log(resp);\r\n         \r\n          if(err){\r\n            console.log(err);            \r\n          }\r\n          else{\r\n            \r\n            this.setState({\r\n              cols: resp.cols,\r\n              rows: resp.rows\r\n            });\r\n           \r\n            const data = [];\r\n           \r\n    \r\n            resp.rows.forEach(childSnapShot => {\r\n               \r\n              const ServiceData = {\r\n                id: childSnapShot[1],\r\n              \r\n              };\r\n      \r\n              data.push(ServiceData);\r\n            });\r\n            console.log(data);\r\n      \r\n            // this.setState({ serviceProviderList:data, countPage: data.length,loading: false });\r\n            // console.log(this.state.serviceProviderList);\r\n          }\r\n        });               \r\n    \r\n      }\r\n    componentWillUnmount() {\r\n        \r\n        clearTimeout(this.interval);\r\n    }\r\n   \r\n    dateChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n   \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()) {\r\n            var validFrom =new Date(this.state.validFrom).toLocaleString();\r\n            var validTo =new Date(this.state.validTo).toLocaleString();\r\n          \r\n            var ref = firebase\r\n            .database()\r\n            .ref(\"orders/\").orderByChild(\"created_on\")\r\n            .startAt(validFrom)\r\n            .endAt(validTo);\r\n              \r\n            ref.once('value', snapshot => {\r\n                const data = [];\r\n                console.log(snapshot.val());\r\n    var i =1;\r\n                snapshot.forEach(childSnapShot => {\r\n    \r\n                    const Merchants = {\r\n                        Sno: i++,\r\n                        orderId: childSnapShot\r\n                            .val()\r\n                            .orderId,\r\n                        customerName: childSnapShot\r\n                            .val()\r\n                            .first_name + \" \" + childSnapShot\r\n                            .val()\r\n                            .last_name,\r\n                        items: childSnapShot\r\n                            .val()\r\n                            .cartDataItems\r\n                            .length,\r\n                            totalAmount: childSnapShot\r\n                            .val().\r\n                            totalAmount,\r\n                        status: childSnapShot\r\n                            .val()\r\n                            .status,\r\n                        order_on: childSnapShot\r\n                            .val()\r\n                            .created_on,\r\n                        emailId: childSnapShot\r\n                            .val()\r\n                            .email_id\r\n                    };\r\n    \r\n                    data.push(Merchants);\r\n                });\r\n                this.setState({orderDateList: data, loading: false});\r\n                console.log(this.state.orderDateList);\r\n               \r\n                this.csvLink.link.click();\r\n           \r\n              \r\n    \r\n               \r\n               \r\n            });\r\n               \r\n            \r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n    render() {\r\n        const pathName = this.props.location.pathname;\r\n\r\n        const ordersPath = pathName.substr(8);\r\n      \r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Orders</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"product-status mg-b-30\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"product-status-wrap\">\r\n                                        <h4> {ordersPath} Orders List</h4>\r\n                                        <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}} />\r\n\r\n                                        \r\n<div className=\"row\">\r\n    <div className='col-sm-6'>\r\n    <div className=\"row\">\r\n        <div className='col-sm-6'>\r\n                <div className=\"form-group\">\r\n                    <label>From</label>\r\n                    <div className='input-group date' id='datetimepicker2'>\r\n                    <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    min={moment().format(\"2019-06-01\")}\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                    type=\"date\"\r\n                                                                   \r\n                                                                   \r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n                                                              \r\n                        <span className=\"input-group-addon\">\r\n                            <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                        </span>\r\n                       \r\n                    </div>\r\n                    {this.validator.message(\"Valid From\", this.state.validFrom, \"required\")}\r\n                </div>\r\n            </div>\r\n\r\n        <div className='col-sm-6'>\r\n                <div className=\"form-group\">\r\n                <label>To</label>\r\n                    <div className='input-group date' id='datetimepicker2'>\r\n                    <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    max={moment(new Date()).format(\"YYYY-MM-DD\")}\r\n                                                                 \r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.dateChange}\r\n                                                                    value={this.state.validTo}/>\r\n                        <span className=\"input-group-addon\">\r\n                            <span className=\"glyphicon glyphicon-calendar\"></span>\r\n                        </span>\r\n                     \r\n                    </div>\r\n                    {this.validator.message(\"Valid To\", this.state.validTo, \"required\")}\r\n                </div>\r\n            </div>\r\n            </div>        \r\n    </div>\r\n    <div className='col-sm-6 pull-right'>\r\n    <button type=\"button\"  onClick={this.handleSubmit}  title=\"download\" className=\"pd-setting-ed mrg_top\" style={{marginTop:\"28px\"}}> Export to excel </button>\r\n    </div>\r\n</div>\r\n                                                        \r\n                                                        <CSVLink\r\n  data={this.state.orderDateList}  ref={(r) => this.csvLink = r}\r\n> </CSVLink>          \r\n                       \r\n                                      \r\n\r\n                                        <table className=\"table table-bordered paginationTable\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.no</th>\r\n                                                    <th>CustomerName</th>\r\n                                                    <th>Order ID</th>\r\n                                                    <th>Items(Count)</th>\r\n                                                    <th className=\"li-product-price\">Grand Total\r\n                                                </th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Order Date</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.orderList && this\r\n                                                    .state\r\n                                                    .orderList\r\n                                                    .map((data, index) => {\r\n\r\n                                                        return (\r\n\r\n                                                            <tr key={index}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                {/* <td>{data.customerName ===NaN ?\"\":data.customerName}</td> */}\r\n                                                                <td>{data.customerName && data.customerName}</td>\r\n                                                                <td>{data.orderId}</td>\r\n                                                                <td>{data.items}</td>\r\n                                                                <td>{data.totalcart}</td>\r\n                                                                <td>\r\n                                                                    <select\r\n                                                                        name=\"select\"\r\n                                                                        className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                        name=\"orderStatus\"\r\n                                                                        value={data.orderStatus}\r\n                                                                        id={data.fireorderId}\r\n                                                                        data-rid={data.orderId}\r\n                                                                        data-email={data.emailId && data.emailId}\r\n                                                                        data-name={data.customerName && data.customerName}\r\n                                                                        onChange={this.onChange}>\r\n                                                                        <option value={data.status}>{data.status}</option>\r\n                                                                        {this\r\n                                                                            .state\r\n                                                                            .orderStatusList\r\n                                                                            .map((data, index) => {\r\n\r\n                                                                                return (\r\n                                                                                    <option value={data.orderStatus} key={index}>{data.orderStatus}</option>\r\n                                                                                )\r\n\r\n                                                                            })}\r\n\r\n                                                                    </select>\r\n\r\n                                                                </td>\r\n\r\n                                                                <td>{data.created_on}</td>\r\n\r\n                                                                <td>\r\n                                                                    {/* <button data-toggle=\"tooltip\" title=\"View\" className=\"pd-setting-ed\"><i className=\"fa fa-eye\" aria-hidden=\"true\"></i></button> */}\r\n\r\n                                                                    <Link to={`/ViewInvoice/${data.fireorderId}`}>\r\n                                                                        <button data-toggle=\"tooltip\" title=\"Edit\" className=\"pd-setting-ed\">\r\n                                                                            <i className=\"fa fa-eye\" aria-hidden=\"true\"></i>\r\n                                                                        </button>\r\n                                                                    </Link>\r\n\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n\r\n                                            </tbody>\r\n\r\n                                        </table>\r\n                                       {this.state.rows?\r\n                        <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n:''}\r\n                 \r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MerchantPaymentsList;\r\n"]},"metadata":{},"sourceType":"module"}