{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\New folder\\\\Assignment\\\\sampleTest\\\\src\\\\component\\\\edit_employee.js\";\nimport React from \"react\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport { Form } from 'reactstrap';\nimport FileUploader from \"react-firebase-file-uploader\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Link } from \"react-router-dom\";\n\nvar getCountriesList = require('countrycitystatejson');\n\nvar EditEmployee =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditEmployee, _React$Component);\n\n  function EditEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, EditEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditEmployee).call(this, props));\n\n    _this.setCountryName = function (e) {\n      var index = e.target.selectedIndex;\n      var el = e.target.childNodes[index];\n      var option = el.getAttribute('id');\n      var selectedCountryName = e.target.value;\n      var statesList = getCountriesList.getStatesByShort(option); // console.log(statesList);\n\n      _this.setState({\n        stateName: statesList,\n        selectedCountry: option,\n        country: selectedCountryName\n      }, function () {\n        console.log(_this.state.stateName, 'stateName');\n      }); //console.log(this.state.stateName);\n\n    };\n\n    _this.setStateName = function (e) {\n      var stateValue = e.target.value;\n      var option = _this.state.selectedCountry; // console.log(option);\n\n      var cityList = getCountriesList.getCities(option, stateValue); // console.log(cityList);\n\n      _this.setState({\n        cityName: cityList,\n        state: stateValue\n      }, function () {\n        console.log(_this.state.cityName, 'stateName');\n      });\n\n      console.log(_this.state.state);\n    };\n\n    _this.setCityName = function (e) {\n      var cityValue = e.target.value;\n\n      _this.setState({\n        city: cityValue\n      }, function () {\n        console.log(_this.state.city, 'city');\n      }); //console.log(this.state.stateName);\n\n    };\n\n    _this.handleChange = function (event) {\n      // console.log(event.target.value);\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        var employeeID = _this.props.match.params.employeeID;\n        var sessionId = sessionStorage.getItem(\"RoleId\");\n        var dbCon = firebase.database().ref(\"Employees/\".concat(employeeID));\n        dbCon.update({\n          role: _this.state.user,\n          first_name: _this.state.first_name,\n          last_name: _this.state.last_name,\n          email: _this.state.email,\n          mobile_number: _this.state.mobile_number,\n          city: _this.state.city,\n          state: _this.state.state,\n          country: _this.state.country,\n          address: _this.state.address,\n          password: _this.state.password,\n          zip: _this.state.zip,\n          status: _this.state.status,\n          sessionId: sessionId,\n          updated_date: _this.state.date\n        });\n\n        _this.props.history.push(\"/EmployeeList/Updated\");\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: 'a@123456',\n      status: 'Active',\n      designation: '',\n      mobile_number: '',\n      countryName: getCountriesList.getCountries(),\n      stateName: [],\n      cityName: [],\n      selectedCountry: '',\n      selectedCountryName: '',\n      city: '',\n      state: '',\n      country: '',\n      address: '',\n      zip: '',\n      user: 'user',\n      error_message: '',\n      date: new Date().toLocaleString()\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        passwordvalid: {\n          message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" + \"ter and 1 alphabet.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1;\n          }\n        },\n        passwordMismatch: {\n          message: \"confirm password must match with password field.\",\n          rule: function rule(val, params, validator) {\n            return document.getElementById(\"password_input\").value === val ? true : false;\n          }\n        },\n        AlertquantityStock: {\n          message: \"alert quantity should be less than quantity Instock.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('quantity_stock').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        productPriceMismatch: {\n          message: \"Selling price should be less than original price.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('product_price').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        zip: {\n          message: \"Invalid Pin Code\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1;\n          }\n        },\n        website: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        },\n        Fax: {\n          message: \"Invalid fax number \",\n          rule: function rule(val, params, validator) {\n            return validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(EditEmployee, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var employeeID = this.props.match.params.employeeID;\n      console.log(employeeID);\n      var ref = firebase.database().ref(\"Employees/\".concat(employeeID));\n      ref.on('value', function (snapshot) {\n        var data = snapshot.val();\n        console.log(data);\n\n        _this2.setState({\n          first_name: data.first_name,\n          last_name: data.last_name,\n          email: data.email,\n          mobile_number: data.mobile_number,\n          city: data.city,\n          state: data.state,\n          country: data.country,\n          address: data.address,\n          zip: data.zip\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Users\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Edit Users\"), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"Add-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"First Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"First Name\",\n        name: \"first_name\",\n        onChange: this.handleChange,\n        value: this.state.first_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \" \", this.state.error_message))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Last Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Last Name\",\n        name: \"last_name\",\n        onChange: this.handleChange,\n        value: this.state.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \" \", this.state.error_message))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"E-mail Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"E-mail Address\",\n        name: \"email\",\n        id: \"price_cost\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), \" \", this.validator.message(\"E-mail Address\", this.state.email, \"required|email\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Country\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control mb-30\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.setCountryName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, this.state.countryName.map(function (data, index) {\n        return React.createElement(\"option\", {\n          value: data.name,\n          id: data.shortName,\n          selected: data.name == _this3.state.country,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, data.name);\n      })), this.validator.message(\"Country\", this.state.country, \"required\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"State\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control mb-30\",\n        name: \"state\",\n        value: this.state.state,\n        onChange: this.setStateName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, this.state.state), this.state.stateName && this.state.stateName.map(function (data, index) {\n        return React.createElement(\"option\", {\n          value: data,\n          id: data,\n          selected: data == _this3.state.state,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          },\n          __self: this\n        }, data);\n      })), this.validator.message(\"Country\", this.state.state, \"required\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"City\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control mb-30\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.setCityName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, this.state.city), this.state.cityName && this.state.cityName.map(function (data, index) {\n        return React.createElement(\"option\", {\n          value: data,\n          id: data,\n          selected: data == _this3.state.city,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        }, data);\n      })), this.validator.message(\"City\", this.state.city, \"required\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"Zip\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"ZIP\",\n        name: \"zip\",\n        onChange: this.handleChange,\n        value: this.state.zip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }), \" \", this.validator.message(\"ZIP\", this.state.zip, \"required|numeric|min:5|max:10\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"Mobile Number\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Mobile Number\",\n        name: \"mobile_number\",\n        onChange: this.handleChange,\n        value: this.state.mobile_number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }), \" \", this.validator.message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Address\",\n        name: \"address\",\n        onChange: this.handleChange,\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Address\", this.state.address, \"required|min:5|max:150\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/EmployeeList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, \"Cancel\")))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EditEmployee;\n}(React.Component);\n\nexport default EditEmployee;","map":{"version":3,"sources":["D:\\Git\\New folder\\Assignment\\sampleTest\\src\\component\\edit_employee.js"],"names":["React","HeaderPage","FooterPage","SidebarPage","firebase","Form","FileUploader","SimpleReactValidator","Link","getCountriesList","require","EditEmployee","props","setCountryName","e","index","target","selectedIndex","el","childNodes","option","getAttribute","selectedCountryName","value","statesList","getStatesByShort","setState","stateName","selectedCountry","country","console","log","state","setStateName","stateValue","cityList","getCities","cityName","setCityName","cityValue","city","handleChange","event","name","handleSubmit","preventDefault","validator","allValid","employeeID","match","params","sessionId","sessionStorage","getItem","dbCon","database","ref","update","role","user","first_name","last_name","email","mobile_number","address","password","zip","status","updated_date","date","history","push","showMessages","forceUpdate","designation","countryName","getCountries","error_message","Date","toLocaleString","className","validators","passwordvalid","message","rule","val","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","AlertquantityStock","qty","Number","productPriceMismatch","whitespace","specialChar","specialCharText","website","Fax","on","snapshot","data","color","map","shortName","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {Link} from \"react-router-dom\";\r\nconst getCountriesList = require('countrycitystatejson');\r\n\r\nclass EditEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password: 'a@123456',\r\n            status:'Active',\r\n            designation: '',\r\n            mobile_number: '',\r\n            countryName: getCountriesList.getCountries(),\r\n            stateName: [],\r\n            cityName: [],\r\n            selectedCountry: '',\r\n            selectedCountryName: '',\r\n\r\n            city: '',\r\n            state: '',\r\n            country: '',\r\n            address: '',\r\n            zip: '',\r\n            user: 'user',\r\n\r\n            error_message: '',\r\n            date: new Date().toLocaleString()\r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                productPriceMismatch: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('product_price')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        const {employeeID} = this.props.match.params;\r\n      \r\n      console.log(employeeID);\r\n      var ref=firebase.database().ref(`Employees/${employeeID}`);\r\n        ref.on('value', snapshot => {\r\n            var data = snapshot.val();\r\n            console.log(data)\r\n            this.setState({\r\n               \r\n                \r\n                first_name: data.first_name,\r\n                last_name: data.last_name,\r\n                email: data.email,\r\n               \r\n                mobile_number: data.mobile_number,\r\n\r\n              \r\n\r\n                city: data.city,\r\n                state: data.state,\r\n                country: data.country,\r\n\r\n                address: data.address,\r\n\r\n              \r\n                zip: data.zip,\r\n \r\n               \r\n            });\r\n           \r\n           \r\n        });\r\n      \r\n}\r\n\r\n\r\n\r\nsetCountryName = (e) => {\r\n    let index = e.target.selectedIndex;\r\n    let el = e.target.childNodes[index]\r\n    let option = el.getAttribute('id');\r\n    let selectedCountryName = e.target.value;\r\n\r\n    const statesList = getCountriesList.getStatesByShort(option);\r\n    // console.log(statesList);\r\n\r\n    this.setState({\r\n        stateName: statesList,\r\n        selectedCountry: option,\r\n        country: selectedCountryName\r\n    }, () => {\r\n        console.log(this.state.stateName, 'stateName');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\nsetStateName = (e) => {\r\n    let stateValue = e.target.value;\r\n    let option = this.state.selectedCountry;\r\n    // console.log(option);\r\n    const cityList = getCountriesList.getCities(option, stateValue);\r\n    // console.log(cityList);\r\n    this.setState({\r\n        cityName: cityList,\r\n        state: stateValue\r\n    }, () => {\r\n        console.log(this.state.cityName, 'stateName');\r\n    });\r\n\r\n    console.log(this.state.state);\r\n\r\n};\r\n\r\nsetCityName = (e) => {\r\n    let cityValue = e.target.value;\r\n\r\n    this.setState({\r\n        city: cityValue\r\n    }, () => {\r\n        console.log(this.state.city, 'city');\r\n    });\r\n\r\n    //console.log(this.state.stateName);\r\n\r\n};\r\n\r\nhandleChange = (event) => {\r\n    // console.log(event.target.value);\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n};\r\n\r\nhandleSubmit = (event) => {\r\n\r\n    event.preventDefault();\r\n    if (this.validator.allValid()) {\r\n\r\n        const {employeeID} = this.props.match.params;\r\n         var sessionId = sessionStorage.getItem(\"RoleId\");\r\n      \r\n\r\n        let dbCon = firebase\r\n            .database()\r\n            .ref(`Employees/${employeeID}`);\r\n        dbCon.update({\r\n            role: this.state.user,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n\r\n            mobile_number: this.state.mobile_number,\r\n\r\n            city: this.state.city,\r\n            state: this.state.state,\r\n            country: this.state.country,\r\n\r\n            address: this.state.address,\r\n\r\n            password: this.state.password,\r\n            zip: this.state.zip,\r\n            status: this.state.status,\r\n            sessionId: sessionId,\r\n\r\n            updated_date: this.state.date\r\n        });\r\n\r\n        this\r\n            .props\r\n            .history\r\n            .push(\"/EmployeeList/Updated\");\r\n    } else {\r\n        this\r\n            .validator\r\n            .showMessages();\r\n        this.forceUpdate();\r\n    }\r\n};\r\n\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            <SidebarPage/>\r\n\r\n            <div className=\"all-content-wrapper\">\r\n                <HeaderPage/>\r\n\r\n                <div className=\"breadcome-area\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                <div className=\"breadcome-list\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                            <div className=\"breadcomb-wp\">\r\n\r\n                                                <div className=\"breadcomb-ctn\">\r\n                                                    <h2>Users</h2>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                    <div className=\"single-pro-review-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"review-tab-pro-inner\">\r\n\r\n                                        <h4>Edit Users</h4>\r\n                                        <div className=\"product-tab-list tab-pane fade active in\">\r\n                                            <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                <div className=\"row m-b-20\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>First Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"First Name\"\r\n                                                            name=\"first_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.first_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n\r\n                                                        <label>Last Name<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Last Name\"\r\n                                                            name=\"last_name\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.last_name}/> {this\r\n                                                            .validator\r\n                                                            .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                        <div className=\"text-danger\">\r\n                                                            {\" \"}\r\n                                                            {this.state.error_message}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>E-mail Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"E-mail Address\"\r\n                                                            name=\"email\"\r\n                                                            id=\"price_cost\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.email} readOnly/> {this\r\n                                                            .validator\r\n                                                            .message(\"E-mail Address\", this.state.email, \"required|email\")}\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Country<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"country\"\r\n                                                            value={this.state.country}\r\n                                                            onChange={this.setCountryName}>\r\n\r\n                                                          \r\n                                                            {this\r\n                                                                .state\r\n                                                                .countryName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data.name} id={data.shortName} selected={data.name == this.state.country} key={index}>{data.name}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.country, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>State<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"state\"\r\n                                                            value={this.state.state}\r\n                                                            onChange={this.setStateName}>\r\n\r\n                                                            <option >{this.state.state}</option>\r\n                                                            {this.state.stateName && this\r\n                                                                .state\r\n                                                                .stateName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.state} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Country\", this.state.state, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>City<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                            className=\"form-control mb-30\"\r\n                                                            name=\"city\"\r\n                                                            value={this.state.city}\r\n                                                            onChange={this.setCityName}>\r\n\r\n                                                            <option >{this.state.city}</option>\r\n                                                            {this.state.cityName && this\r\n                                                                .state\r\n                                                                .cityName\r\n                                                                .map((data, index) => {\r\n\r\n                                                                    return (\r\n                                                                        <option value={data} id={data} selected={data == this.state.city} key={index}>{data}</option>\r\n                                                                    )\r\n\r\n                                                                })}\r\n\r\n                                                        </select>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"City\", this.state.city, \"required\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Zip<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"ZIP\"\r\n                                                            name=\"zip\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.zip}/> {this\r\n                                                            .validator\r\n                                                            .message(\"ZIP\", this.state.zip, \"required|numeric|min:5|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Mobile Number<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Mobile Number\"\r\n                                                            name=\"mobile_number\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.mobile_number}/> {this\r\n                                                            .validator\r\n                                                            .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row m-b-20 class-row\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                        <label>Address<span style={{\r\n            color: 'red'\r\n        }}>*</span>\r\n                                                        </label>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <textarea\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Address\"\r\n                                                            name=\"address\"\r\n                                                            onChange={this.handleChange}\r\n                                                            value={this.state.address}/> {this\r\n                                                            .validator\r\n                                                            .message(\"Address\", this.state.address, \"required|min:5|max:150\")}\r\n\r\n                                                    </div>\r\n                                                    {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <label>Password<span style={{ color: 'red'}}>*</span>\r\n                                                        </label>\r\n                                                        <input\r\n                                                         type=\"Password\"\r\n                                                         name=\"password\"\r\n                                                         value=\"\"\r\n                                                         className=\"form-control\"\r\n\r\n\r\n                                                           />\r\n                                                    </div> */}\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        {/* <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> */}\r\n                                                        <div className=\"text-center custom-pro-edt-ds\">\r\n                                                            <button\r\n                                                                type=\"submit\"\r\n                                                                className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                            </button>\r\n                                                            <Link to=\"/EmployeeList\">\r\n                                                                <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                </button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <FooterPage/>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditEmployee;\r\n"]},"metadata":{},"sourceType":"module"}