{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Git\\\\ShopalityAdmin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Git\\\\ShopalityAdmin\\\\src\\\\component\\\\addcoupon.js\";\nimport React from \"react\";\nimport { Form, Input, Button, Alert } from 'reactstrap';\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\"; // import HomePage from \"./home\";\n\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport SimpleReactValidator from \"simple-react-validator\";\nimport moment from 'moment';\n\nvar AddCoupon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddCoupon, _React$Component);\n\n  function AddCoupon(props) {\n    var _this;\n\n    _classCallCheck(this, AddCoupon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddCoupon).call(this, props));\n\n    _this.promoCodeChange = function (event) {\n      var A = event.target.value;\n      var B = A.toUpperCase();\n\n      _this.setState(_defineProperty({}, event.target.name, B));\n\n      var ref = firebase.database().ref('Coupons/').orderByChild(\"couponCode\").equalTo(B);\n      ref.on('value', function (snapshot) {\n        var user_exist = snapshot.numChildren();\n        console.log(user_exist);\n\n        if (user_exist > 0) {\n          _this.setState({\n            error_message: \"Coupon Name is already exist\",\n            validError: false\n          });\n        } else {\n          _this.setState({\n            error_message: \"\",\n            validError: true\n          });\n        }\n      });\n    };\n\n    _this.onChange = function (event) {\n      if (event.target.name == 'type') {\n        if (event.target.value == \"datebased\") {\n          _this.setState({\n            datebasedDiv: true,\n            countbasedDiv: false\n          });\n        } else if (event.target.value == \"countbased\") {\n          _this.setState({\n            countbasedDiv: true,\n            datebasedDiv: false\n          });\n        }\n      }\n\n      if (event.target.name == 'usageType') {\n        if (event.target.value == \"Multiple\") {\n          _this.setState({\n            numberOfUsagesDiv: true\n          });\n        } else {\n          _this.setState({\n            numberOfUsagesDiv: false\n          });\n        }\n      }\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid() && _this.state.validError == true) {\n        if (_this.state.couponCode && _this.state.couponCode.trim().length !== 0) {\n          event.preventDefault();\n          var sessionId = sessionStorage.getItem(\"RoleId\");\n          var dbCon = firebase.database().ref('/Coupons');\n          dbCon.push({\n            couponCode: _this.state.couponCode,\n            couponDescription: _this.state.couponDescription,\n            type: _this.state.type,\n            validFrom: _this.state.validFrom,\n            validTo: _this.state.validTo,\n            numberOfCoupons: _this.state.numberOfCoupons,\n            usageType: _this.state.usageType,\n            numberOfUsages: _this.state.numberOfUsages,\n            offerValue: _this.state.offerValue,\n            offerType: _this.state.offerType,\n            minValue: _this.state.minValue,\n            created_on: _this.state.date,\n            sessionId: sessionId\n          });\n\n          _this.setState({\n            couponCode: \"\",\n            couponDescription: \"\",\n            type: \"\",\n            validFrom: \"\",\n            validTo: \"\",\n            numberOfCoupons: \"\",\n            usageType: \"\",\n            numberOfUsages: \"\",\n            offerValue: \"\",\n            offerType: \"\",\n            created_on: \"\",\n            minValue: '',\n            datebasedDiv: false,\n            countbasedDiv: false\n          });\n\n          _this.props.history.push(\"/Coupons\");\n        }\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      couponCode: \"\",\n      couponDescription: \"\",\n      type: \"\",\n      validFrom: \"\",\n      validTo: \"\",\n      numberOfCoupons: \"\",\n      usageType: \"\",\n      numberOfUsages: \"\",\n      offerValue: \"\",\n      offerType: \"\",\n      created_on: \"\",\n      datebasedDiv: false,\n      countbasedDiv: false,\n      minValue: '',\n      error_message: '',\n      date: new Date().toLocaleString(),\n      validError: true\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(AddCoupon, [{\n    key: \"render\",\n    value: function render() {\n      var divStyle = {\n        'height': '300px'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Coupons\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Add Coupon\"), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"couponsform\",\n        className: \"form-horizontal\",\n        role: \"form\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Coupon Code\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control required\",\n        type: \"text\",\n        onChange: this.promoCodeChange,\n        value: this.state.couponCode,\n        name: \"couponCode\",\n        id: \"couponCode\",\n        placeholder: \"Coupon Code*\",\n        maxLength: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \" \", this.state.error_message), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Coupon Description\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"*\")), this.validator.message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\"), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control required\",\n        rows: 5,\n        cols: 30,\n        name: \"couponDescription\",\n        onChange: this.onChange,\n        value: this.state.couponDescription,\n        id: \"couponDescription\",\n        placeholder: \"Coupon Description*\",\n        spellCheck: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Coupon Description\", this.state.couponDescription, \"required|whitespace|min:3|max:150\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Coupon Type\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        onChange: this.onChange,\n        value: \"datebased\",\n        className: \"icheck\",\n        checked: this.state.type === 'datebased',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), \"Duration \\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"type\",\n        onChange: this.onChange,\n        value: \"countbased\",\n        className: \"icheck\",\n        checked: this.state.type === 'countbased',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }), \"Count Based\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), this.validator.message(\"Coupon Type\", this.state.type, \"required\"))), React.createElement(\"div\", {\n        style: {\n          display: this.state.datebasedDiv ? '' : 'none'\n        },\n        id: \"datebaseddiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"From\"), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validFrom\",\n        id: \"validFrom\",\n        size: 16,\n        type: \"date\",\n        min: moment(this.state.date).format(\"YYYY-MM-DD\"),\n        onChange: this.onChange,\n        value: this.state.validFrom,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"To\"), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"validTo\",\n        id: \"validTo\",\n        className: \"form-control\",\n        size: 16,\n        type: \"date\",\n        min: moment(this.state.validFrom).format(\"YYYY-MM-DD\"),\n        onChange: this.onChange,\n        value: this.state.validTo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        id: \"countbased\",\n        style: {\n          display: this.state.countbasedDiv ? '' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Count\"), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"numberOfCoupons\",\n        name: \"numberOfCoupons\",\n        onChange: this.onChange,\n        value: this.state.numberOfCoupons,\n        type: \"number\",\n        placeholder: \"Count\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Usage\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"usageType\",\n        value: \"Once\",\n        onChange: this.onChange,\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), \"Once \\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"usageType\",\n        value: \"Multiple\",\n        onChange: this.onChange,\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), \"Multiple\"), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"numberOfUsages\",\n        onChange: this.onChange,\n        value: this.state.numberOfUsages,\n        style: {\n          display: this.state.numberOfUsagesDiv ? '' : 'none'\n        },\n        id: \"numberOfUsages\",\n        className: \"valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \"Minimum Value\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \"*\")), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control required\",\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.minValue,\n        name: \"minValue\",\n        placeholder: \"Minimum Value*\",\n        maxLength: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\"), React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group setting-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"col-sm-3 control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Offer\"), React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Offer\",\n        name: \"offerValue\",\n        onChange: this.onChange,\n        value: this.state.offerValue,\n        id: \"offerValue\",\n        className: \"form-control required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"offerType\",\n        onChange: this.onChange,\n        value: \"%\",\n        defaultChecked: true,\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), \"% \\xA0\\xA0\\xA0\"), React.createElement(\"label\", {\n        className: \"radio-inline no-padd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"offerType\",\n        onChange: this.onChange,\n        value: \"Inr\",\n        className: \"icheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }), \"INR\")))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-offset-2 col-sm-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Save\")))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddCoupon;\n}(React.Component);\n\nexport default AddCoupon;","map":{"version":3,"sources":["D:\\Git\\ShopalityAdmin\\src\\component\\addcoupon.js"],"names":["React","Form","Input","Button","Alert","HeaderPage","FooterPage","SidebarPage","firebase","ReactQuill","SimpleReactValidator","moment","AddCoupon","props","promoCodeChange","event","A","target","value","B","toUpperCase","setState","name","ref","database","orderByChild","equalTo","on","snapshot","user_exist","numChildren","console","log","error_message","validError","onChange","datebasedDiv","countbasedDiv","numberOfUsagesDiv","handleSubmit","preventDefault","validator","allValid","state","couponCode","trim","length","sessionId","sessionStorage","getItem","dbCon","push","couponDescription","type","validFrom","validTo","numberOfCoupons","usageType","numberOfUsages","offerValue","offerType","minValue","created_on","date","history","showMessages","forceUpdate","Date","toLocaleString","bind","className","validators","whitespace","message","rule","val","params","helpers","testRegex","indexOf","specialChar","specialCharText","divStyle","color","display","format","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Form, Input, Button, Alert} from 'reactstrap';\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\n// import HomePage from \"./home\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport moment from 'moment';\r\n\r\nclass AddCoupon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            couponCode: \"\",\r\n            couponDescription: \"\",\r\n            type: \"\",\r\n            validFrom: \"\",\r\n            validTo: \"\",\r\n            numberOfCoupons: \"\",\r\n            usageType: \"\",\r\n            numberOfUsages: \"\",\r\n            offerValue: \"\",\r\n            offerType: \"\",\r\n            created_on: \"\",\r\n            datebasedDiv: false,\r\n            countbasedDiv: false,\r\n            minValue:'',\r\n            error_message:'',\r\n            date:new Date().toLocaleString(),\r\n            validError:true,\r\n        }\r\n\r\n        this.onChange = this\r\n            .onChange\r\n            .bind(this);\r\n        this.handleSubmit = this\r\n            .handleSubmit\r\n            .bind(this);\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n   \r\n    promoCodeChange  = (event) => {\r\n        var A = event.target.value;\r\n\r\n        var B = A.toUpperCase();\r\n\r\n        this.setState({\r\n            [event.target.name]: B\r\n        });     \r\n            var ref = firebase\r\n            .database()\r\n            .ref('Coupons/').orderByChild(\"couponCode\").equalTo(B);\r\n            ref.on('value', snapshot => {\r\n                var  user_exist = snapshot.numChildren();\r\n                console.log(user_exist);\r\n           \r\n            if(user_exist>0){\r\n               \r\n               \r\n                this.setState({error_message: \"Coupon Name is already exist\",validError:false});\r\n            }else{\r\n                this.setState({error_message: \"\",validError:true});\r\n               \r\n            }\r\n           \r\n        })\r\n    \r\n       \r\n    };\r\n    onChange = (event) => {\r\n\r\n        if (event.target.name == 'type') {\r\n\r\n            if (event.target.value == \"datebased\") {\r\n                this.setState({datebasedDiv: true, countbasedDiv: false});\r\n            } else if (event.target.value == \"countbased\") {\r\n                this.setState({countbasedDiv: true, datebasedDiv: false});\r\n\r\n            }\r\n        }\r\n\r\n        if (event.target.name == 'usageType') {\r\n\r\n            if (event.target.value == \"Multiple\") {\r\n                this.setState({numberOfUsagesDiv: true});\r\n            } else {\r\n                this.setState({numberOfUsagesDiv: false});\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n       \r\n    };\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.validator.allValid()&& this.state.validError == true) {\r\n            if (this.state.couponCode && this.state.couponCode.trim().length !== 0) {\r\n                event.preventDefault();\r\n                var sessionId = sessionStorage.getItem(\"RoleId\");\r\n\r\n                let dbCon = firebase\r\n                    .database()\r\n                    .ref('/Coupons');\r\n                dbCon.push({\r\n                    couponCode: this.state.couponCode,\r\n                    couponDescription: this.state.couponDescription,\r\n                    type: this.state.type,\r\n                    validFrom: this.state.validFrom,\r\n                    validTo: this.state.validTo,\r\n                    numberOfCoupons: this.state.numberOfCoupons,\r\n                    usageType: this.state.usageType,\r\n                    numberOfUsages: this.state.numberOfUsages,\r\n                    offerValue: this.state.offerValue,\r\n                    offerType: this.state.offerType,\r\n                    minValue:this.state.minValue,\r\n                    created_on: this.state.date,\r\n                    sessionId: sessionId\r\n                });\r\n\r\n                this.setState({\r\n                    couponCode: \"\",\r\n                    couponDescription: \"\",\r\n                    type: \"\",\r\n                    validFrom: \"\",\r\n                    validTo: \"\",\r\n                    numberOfCoupons: \"\",\r\n                    usageType: \"\",\r\n                    numberOfUsages: \"\",\r\n                    offerValue: \"\",\r\n                    offerType: \"\",\r\n                    created_on: \"\",\r\n                    minValue:'',\r\n                    datebasedDiv: false,\r\n                    countbasedDiv: false\r\n                });\r\n                this\r\n                    .props\r\n                    .history\r\n                    .push(\"/Coupons\");\r\n            }\r\n\r\n        } else {\r\n            this\r\n                .validator\r\n                .showMessages();\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const divStyle = {\r\n            'height': '300px'\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Coupons</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add Coupon</h4>\r\n\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <form\r\n                                                    id=\"couponsform\"\r\n                                                    className=\"form-horizontal\"\r\n                                                    role=\"form\"\r\n                                                    onSubmit={this.handleSubmit}>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Code<span style={{color: 'red' }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <input\r\n                                                                className=\"form-control required\"\r\n                                                                type=\"text\"\r\n                                                                onChange={this.promoCodeChange}\r\n                                                                value={this.state.couponCode}\r\n                                                                name=\"couponCode\"\r\n                                                                id=\"couponCode\"\r\n                                                                placeholder=\"Coupon Code*\"\r\n                                                                maxLength={6}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\")}\r\n                                                          <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Description<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        {this\r\n                                                            .validator\r\n                                                            .message(\"Coupon Code\", this.state.couponCode, \"required|whitespace|specialChar|min:3|max:70\")}\r\n\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <textarea\r\n                                                                className=\"form-control required\"\r\n                                                                rows={5}\r\n                                                                cols={30}\r\n                                                                name=\"couponDescription\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.couponDescription}\r\n                                                                id=\"couponDescription\"\r\n                                                                placeholder=\"Coupon Description*\"\r\n                                                                spellCheck=\"false\"/> {this\r\n                                                                .validator\r\n                                                                .message(\"Coupon Description\", this.state.couponDescription, \"required|whitespace|min:3|max:150\")}\r\n\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Coupon Type<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"type\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value=\"datebased\"\r\n                                                                    className=\"icheck\"\r\n                                                                    checked={this.state.type === 'datebased'}/>\r\n                                                                Duration &nbsp;&nbsp;</label>\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"type\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    value=\"countbased\"\r\n                                                                    className=\"icheck\" \r\n                                                                    checked={this.state.type === 'countbased'}/>\r\n                                                                Count Based</label>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                              {this.validator.message(\"Coupon Type\", this.state.type, \"required\")}\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>\r\n                                                  \r\n                                                    <div\r\n                                                        style={{\r\n                                                        display: this.state.datebasedDiv\r\n                                                            ? ''\r\n                                                            : 'none'\r\n                                                    }}\r\n                                                        id=\"datebaseddiv\">\r\n                                                        <div className=\"form-group setting-row\">\r\n                                                            <label className=\"col-sm-3 control-label\">From</label>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <input\r\n                                                                    name=\"validFrom\"\r\n                                                                    id=\"validFrom\"\r\n                                                                    size={16}\r\n                                                                    type=\"date\"\r\n                                                                   \r\n                                                                    min={moment(this.state.date).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.validFrom}\r\n                                                                    className=\"form-control\"/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group setting-row\">\r\n                                                            <label className=\"col-sm-3 control-label\">To</label>\r\n                                                            <div className=\"col-sm-6\">\r\n                                                                <input\r\n                                                                    name=\"validTo\"\r\n                                                                    id=\"validTo\"\r\n                                                                    className=\"form-control\"\r\n                                                                    size={16}\r\n                                                                    type=\"date\"\r\n                                                                    min={moment(this.state.validFrom).format(\"YYYY-MM-DD\")}\r\n                                                                    onChange={this.onChange}\r\n                                                                    value={this.state.validTo}/>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                    color: 'red'\r\n                                                                }}/>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div\r\n                                                        className=\"form-group setting-row\"\r\n                                                        id=\"countbased\"\r\n                                                        style={{\r\n                                                        display: this.state.countbasedDiv\r\n                                                            ? ''\r\n                                                            : 'none'\r\n                                                    }}>\r\n                                                        <label htmlFor=\"name\" className=\"col-sm-3 control-label\">Count</label>\r\n                                                        <div className=\"col-sm-8\"><input\r\n                                                            id=\"numberOfCoupons\"\r\n                                                            name=\"numberOfCoupons\"\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.numberOfCoupons}\r\n                                                            type=\"number\"\r\n                                                            placeholder=\"Count\"\r\n                                                            className=\"form-control\"/>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                       \r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Usage<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"usageType\"\r\n                                                                    value=\"Once\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Once &nbsp;&nbsp;</label>\r\n                                                            <label className=\"radio-inline no-padd\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    name=\"usageType\"\r\n                                                                    value=\"Multiple\"\r\n                                                                    onChange={this.onChange}\r\n                                                                    className=\"icheck\"/>\r\n                                                                Multiple</label>\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                name=\"numberOfUsages\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.numberOfUsages}\r\n                                                                style={{\r\n                                                                display: this.state.numberOfUsagesDiv\r\n                                                                    ? ''\r\n                                                                    : 'none'\r\n                                                            }}\r\n                                                                id=\"numberOfUsages\"\r\n                                                                className=\"valid\"/>\r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"col-sm-2 control-label\">Minimum Value<span style={{\r\n                color: 'red'\r\n            }}>*</span>\r\n                                                        </label>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <input\r\n                                                                className=\"form-control required\"\r\n                                                                type=\"text\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.minValue}\r\n                                                                name=\"minValue\"\r\n                                                             \r\n                                                                placeholder=\"Minimum Value*\"\r\n                                                                maxLength={6}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Minimum Value\", this.state.minValue, \"required|whitespace|specialChar|min:3|max:70\")}\r\n                                                           \r\n                                                            <span\r\n                                                                style={{\r\n                                                                color: 'red'\r\n                                                            }}/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group setting-row\">\r\n                                                        <label htmlFor=\"name\" className=\"col-sm-3 control-label\">Offer</label>\r\n                                                        <div className=\"col-sm-3\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Offer\"\r\n                                                                name=\"offerValue\"\r\n                                                                onChange={this.onChange}\r\n                                                                value={this.state.offerValue}\r\n                                                                id=\"offerValue\"\r\n                                                                className=\"form-control required\"/>\r\n                                                        </div>\r\n                                                        <div className=\"col-sm-6\">\r\n                                                            <div>\r\n                                                                <label className=\"radio-inline no-padd\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"offerType\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value=\"%\"\r\n                                                                        defaultChecked\r\n                                                                        className=\"icheck\"/>\r\n                                                                    % &nbsp;&nbsp;&nbsp;</label>\r\n                                                                <label className=\"radio-inline no-padd\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        name=\"offerType\"\r\n                                                                        onChange={this.onChange}\r\n                                                                        value=\"Inr\"\r\n                                                                        className=\"icheck\"/>\r\n                                                                    INR</label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"col-sm-offset-2 col-sm-10\">\r\n                                                            <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                </form>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCoupon;\r\n"]},"metadata":{},"sourceType":"module"}