{"ast":null,"code":"import _defineProperty from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Git\\\\New folder\\\\im-possibillion\\\\src\\\\component\\\\add_employee.js\";\nimport React from \"react\";\nimport HeaderPage from \"./header\";\nimport FooterPage from \"./footer\";\nimport SidebarPage from \"./sidebar\";\nimport firebase from '../config';\nimport { Form } from 'reactstrap';\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Link } from \"react-router-dom\";\n\nvar getCountriesList = require('countrycitystatejson');\n\nvar AddEmployee =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddEmployee, _React$Component);\n\n  function AddEmployee(props) {\n    var _this;\n\n    _classCallCheck(this, AddEmployee);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEmployee).call(this, props));\n\n    _this.setCountryName = function (e) {\n      var index = e.target.selectedIndex;\n      var el = e.target.childNodes[index];\n      var option = el.getAttribute('id');\n      var selectedCountryName = e.target.value;\n      var statesList = getCountriesList.getStatesByShort(option); // console.log(statesList);\n\n      _this.setState({\n        stateName: statesList,\n        selectedCountry: option,\n        country: selectedCountryName\n      }, function () {\n        console.log(_this.state.stateName, 'stateName');\n      }); //console.log(this.state.stateName);\n\n    };\n\n    _this.setStateName = function (e) {\n      var stateValue = e.target.value;\n      var option = _this.state.selectedCountry; // console.log(option);\n\n      var cityList = getCountriesList.getCities(option, stateValue); // console.log(cityList);\n\n      _this.setState({\n        cityName: cityList,\n        state: stateValue\n      }, function () {\n        console.log(_this.state.cityName, 'stateName');\n      });\n\n      console.log(_this.state.state);\n    };\n\n    _this.setCityName = function (e) {\n      var cityValue = e.target.value;\n\n      _this.setState({\n        city: cityValue\n      }, function () {\n        console.log(_this.state.city, 'city');\n      }); //console.log(this.state.stateName);\n\n    };\n\n    _this.handleChange = function (event) {\n      // console.log(event.target.value);\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid() && _this.state.validError === true) {\n        var user = null;\n        firebase.auth().createUserWithEmailAndPassword(_this.state.email, _this.state.password).then(function (result) {\n          var userId = result.user;\n          user = firebase.auth().currentUser;\n          user.sendEmailVerification();\n          console.log(user);\n          var sessionId = sessionStorage.getItem(\"RoleId\");\n          var userName = sessionStorage.getItem(\"user_name\");\n          var dbCon = firebase.database().ref('Employees/' + userId.uid);\n          dbCon.set({\n            employeeId: Math.round(new Date().getTime() / 1000),\n            role: \"employee\",\n            first_name: _this.state.first_name,\n            last_name: _this.state.last_name,\n            email: _this.state.email,\n            designation: _this.state.designation,\n            mobile_number: _this.state.mobile_number,\n            department: _this.state.department,\n            city: _this.state.city,\n            uploadImage: _this.state.avatarURL,\n            address: _this.state.address,\n            phone_emergency: _this.state.phone_emergency,\n            reporting_manager: _this.state.reporting_manager,\n            password: _this.state.password,\n            salesTracker: _this.state.salesTracker,\n            file: _this.state.file,\n            location: _this.state.location,\n            status: 'Active',\n            sessionId: sessionId,\n            userName: userName,\n            date: _this.state.date\n          });\n        });\n\n        _this.props.history.push(\"/EmployeeList/Created\");\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: 'a@123456',\n      designation: '',\n      mobile_number: '',\n      countryName: getCountriesList.getCountries(),\n      stateName: [],\n      cityName: [],\n      selectedCountry: '',\n      selectedCountryName: '',\n      city: '',\n      state: '',\n      country: '',\n      address: '',\n      error_message: '',\n      date: new Date().toLocaleString()\n    };\n    _this.validator = new SimpleReactValidator({\n      className: \"text-danger\",\n      validators: {\n        passwordvalid: {\n          message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" + \"ter and 1 alphabet.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1;\n          }\n        },\n        passwordMismatch: {\n          message: \"confirm password must match with password field.\",\n          rule: function rule(val, params, validator) {\n            return document.getElementById(\"password_input\").value === val ? true : false;\n          }\n        },\n        AlertquantityStock: {\n          message: \"alert quantity should be less than quantity Instock.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('quantity_stock').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        priceCostValid: {\n          message: \"Selling price should be less than original price.\",\n          rule: function rule(val, params, validator) {\n            var qty = document.getElementById('price_cost').value;\n\n            if (Number(qty) > Number(val)) {\n              return true;\n            } else {\n              return false;\n            }\n          }\n        },\n        whitespace: {\n          message: \"The :attribute not allowed first whitespace   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1;\n          }\n        },\n        specialChar: {\n          message: \"The :attribute not allowed special   characters.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        specialCharText: {\n          message: \"The :attribute may only contain letters, dot and spaces.\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1;\n          }\n        },\n        zip: {\n          message: \"Invalid Pin Code\",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1;\n          }\n        },\n        website: {\n          message: \"The Url should be example.com \",\n          rule: function rule(val, params, validator) {\n            // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\n            // params.indexOf(val) === -1\n            return validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1;\n          }\n        },\n        Fax: {\n          message: \"Invalid fax number \",\n          rule: function rule(val, params, validator) {\n            return validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1;\n          }\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(AddEmployee, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(SidebarPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"all-content-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(HeaderPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"breadcome-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcome-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-wp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"breadcomb-ctn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Users\")))))))))), React.createElement(\"div\", {\n        className: \"single-product-tab-area mg-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"single-pro-review-area\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"review-tab-pro-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Add Users\"), React.createElement(\"div\", {\n        className: \"product-tab-list tab-pane fade active in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"Add-products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-b-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"First Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"First Name\",\n        name: \"first_name\",\n        onChange: this.handleChange,\n        value: this.state.first_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \" \", this.state.error_message))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Last Name\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Last Name\",\n        name: \"last_name\",\n        onChange: this.handleChange,\n        value: this.state.last_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), \" \", this.validator.message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\"), React.createElement(\"div\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \" \", this.state.error_message))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"E-mail Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"E-mail Address\",\n        name: \"email\",\n        id: \"price_cost\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }), \" \", this.validator.message(\"E-mail Address\", this.state.email, \"required|email\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Country\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"form-control mb-30\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.setCountryName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, \"Select Country\"), this.state.countryName.map(function (data, index) {\n        return React.createElement(\"option\", {\n          value: data.name,\n          id: data.shortName,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, data.name);\n      })), this.validator.message(\"Country\", this.state.country, \"required\"), \" \")), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"City\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"select\", (_React$createElement = {\n        name: \"select\",\n        className: \"form-control pro-edt-select form-control-primary\"\n      }, _defineProperty(_React$createElement, \"name\", \"city\"), _defineProperty(_React$createElement, \"onChange\", this.handleChange), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Select City\"), this.state.City && this.state.City.map(function (data, index) {\n        return React.createElement(\"option\", {\n          value: data.city,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, data.city);\n      })), this.validator.message(\"City\", this.state.city, \"required\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Mobile Number\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Mobile Number\",\n        name: \"mobile_number\",\n        onChange: this.handleChange,\n        value: this.state.mobile_number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), \" \", this.validator.message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\"))), React.createElement(\"div\", {\n        className: \"row m-b-20 class-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-2 col-md-2 col-sm-2 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Address\", React.createElement(\"span\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Address\",\n        name: \"address\",\n        onChange: this.handleChange,\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }), \" \", this.validator.message(\"Address\", this.state.address, \"required|min:5|max:150\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6 col-sm-6 col-xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center custom-pro-edt-ds\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-ctl-bt waves-effect waves-light m-r-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Link, {\n        to: \"/EmployeeList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-ctl-bt waves-effect waves-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Cancel\")))))))))))))), React.createElement(FooterPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddEmployee;\n}(React.Component);\n\nexport default AddEmployee;","map":{"version":3,"sources":["D:\\Git\\New folder\\im-possibillion\\src\\component\\add_employee.js"],"names":["React","HeaderPage","FooterPage","SidebarPage","firebase","Form","SimpleReactValidator","Link","getCountriesList","require","AddEmployee","props","setCountryName","e","index","target","selectedIndex","el","childNodes","option","getAttribute","selectedCountryName","value","statesList","getStatesByShort","setState","stateName","selectedCountry","country","console","log","state","setStateName","stateValue","cityList","getCities","cityName","setCityName","cityValue","city","handleChange","event","name","handleSubmit","preventDefault","validator","allValid","validError","user","auth","createUserWithEmailAndPassword","email","password","then","result","userId","currentUser","sendEmailVerification","sessionId","sessionStorage","getItem","userName","dbCon","database","ref","uid","set","employeeId","Math","round","Date","getTime","role","first_name","last_name","designation","mobile_number","department","uploadImage","avatarURL","address","phone_emergency","reporting_manager","salesTracker","file","location","status","date","history","push","showMessages","forceUpdate","countryName","getCountries","error_message","toLocaleString","className","validators","passwordvalid","message","rule","val","params","helpers","testRegex","indexOf","passwordMismatch","document","getElementById","AlertquantityStock","qty","Number","priceCostValid","whitespace","specialChar","specialCharText","zip","website","Fax","color","map","data","shortName","City","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport HeaderPage from \"./header\";\r\nimport FooterPage from \"./footer\";\r\nimport SidebarPage from \"./sidebar\";\r\nimport firebase from '../config';\r\nimport {Form} from 'reactstrap';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {Link} from \"react-router-dom\";\r\nconst getCountriesList = require('countrycitystatejson');\r\n\r\nclass AddEmployee extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: '',\r\n            password:'a@123456',\r\n            designation: '',\r\n            mobile_number: '',\r\n            countryName: getCountriesList.getCountries(),\r\n            stateName: [],\r\n\t\t\tcityName: [],\r\n\t\t\tselectedCountry: '',\r\n            selectedCountryName: '',\r\n\r\n            city: '',\r\n            state: '',\r\n            country: '',\r\n            address: '',\r\n           \r\n           \r\n            error_message: '',\r\n            date: new Date().toLocaleString(),\r\n           \r\n        }\r\n\r\n        this.validator = new SimpleReactValidator({\r\n            className: \"text-danger\",\r\n            validators: {\r\n                passwordvalid: {\r\n                    message: \"The :attribute must be at least 6 and at most 30 with 1 numeric,1 special charac\" +\r\n                            \"ter and 1 alphabet.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z]).{6,30}$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                passwordMismatch: {\r\n                    message: \"confirm password must match with password field.\",\r\n                    rule: function (val, params, validator) {\r\n                        return document\r\n                            .getElementById(\"password_input\")\r\n                            .value === val\r\n                            ? true\r\n                            : false;\r\n                    }\r\n                },\r\n                AlertquantityStock: {\r\n                    message: \"alert quantity should be less than quantity Instock.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('quantity_stock')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                priceCostValid: {\r\n                    message: \"Selling price should be less than original price.\",\r\n                    rule: function (val, params, validator) {\r\n                        var qty = document\r\n                            .getElementById('price_cost')\r\n                            .value;\r\n\r\n                        if (Number(qty) > Number(val)) {\r\n\r\n                            return true;\r\n                        } else {\r\n                            return false;\r\n                        }\r\n\r\n                    }\r\n                },\r\n                whitespace: {\r\n                    message: \"The :attribute not allowed first whitespace   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /[^\\s\\\\]/) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialChar: {\r\n                    message: \"The :attribute not allowed special   characters.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z0-9_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                specialCharText: {\r\n                    message: \"The :attribute may only contain letters, dot and spaces.\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^[ A-Za-z_@./#&+-]*$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n\r\n                zip: {\r\n                    message: \"Invalid Pin Code\",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /^(\\d{5}(\\d{4})?)?$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                website: {\r\n                    message: \"The Url should be example.com \",\r\n                    rule: function (val, params, validator) {\r\n                        // return validator.helpers.testRegex(val,/^[a-zA-Z0-9]{6,30}$/i) &&\r\n                        // params.indexOf(val) === -1\r\n                        return (validator.helpers.testRegex(val, /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g) && params.indexOf(val) === -1);\r\n                    }\r\n                },\r\n                Fax: {\r\n                    message: \"Invalid fax number \",\r\n                    rule: function (val, params, validator) {\r\n                        return (validator.helpers.testRegex(val, /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/i) && params.indexOf(val) === -1);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setCountryName = (e) => {\r\n        let index = e.target.selectedIndex;\r\n        let el = e.target.childNodes[index]\r\n        let option = el.getAttribute('id');\r\n        let selectedCountryName = e.target.value;\r\n\r\n        const statesList = getCountriesList.getStatesByShort(option);\r\n        // console.log(statesList);\r\n\r\n        this.setState({\r\n            stateName: statesList,\r\n            selectedCountry: option,\r\n            country:selectedCountryName\r\n        }, () => {\r\n            console.log(this.state.stateName, 'stateName');\r\n        });\r\n\r\n        //console.log(this.state.stateName);\r\n\r\n    };\r\n    setStateName = (e) => {\r\n        let stateValue = e.target.value;\r\n        let option = this.state.selectedCountry;\r\n        // console.log(option);\r\n        const cityList = getCountriesList.getCities(option, stateValue);\r\n        // console.log(cityList);\r\n        this.setState({\r\n            cityName: cityList,\r\n            state: stateValue\r\n        }, () => {\r\n            console.log(this.state.cityName, 'stateName');\r\n        });\r\n\r\n        console.log(this.state.state);\r\n\r\n    };\r\n\r\n    setCityName = (e) => {\r\n        let cityValue = e.target.value;\r\n\r\n        this.setState({\r\n            city: cityValue\r\n        }, () => {\r\n            console.log(this.state.city, 'city');\r\n        });\r\n\r\n        //console.log(this.state.stateName);\r\n\r\n    };\r\n   \r\n   \r\nhandleChange = (event) => {\r\n            // console.log(event.target.value);\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n    \r\n  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n          if (this.validator.allValid()&&this.state.validError===true) {\r\n              var user = null;\r\n               firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n                .then((result) => {\r\n                    var userId = result.user;\r\n                    user = firebase\r\n                        .auth()\r\n                        .currentUser;\r\n                    user.sendEmailVerification();\r\n                    console.log(user);\r\n                    var sessionId = sessionStorage.getItem(\"RoleId\"); \r\n                    var userName = sessionStorage.getItem(\"user_name\");\r\n                    let dbCon = firebase\r\n                        .database()\r\n                        .ref('Employees/' + userId.uid);\r\n                      dbCon.set({\r\n                                    employeeId: Math.round((new Date().getTime() / 1000)),\r\n                                    role:\"employee\",\r\n                                    first_name: this.state.first_name,\r\n                                    last_name: this.state.last_name,\r\n                                    email: this.state.email,\r\n                                    designation: this.state.designation,\r\n                                    mobile_number: this.state.mobile_number,\r\n                                    department: this.state.department,\r\n                                    city: this.state.city,\r\n                                    uploadImage: this.state.avatarURL,\r\n                                    address: this.state.address,\r\n                                    phone_emergency:this.state.phone_emergency,\r\n                                    reporting_manager:this.state.reporting_manager,\r\n                                    password:this.state.password,\r\n                                    salesTracker:this.state.salesTracker,\r\n                                    file:this.state.file,\r\n                                    location:this.state.location,\r\n                                    status:'Active',\r\n                                    sessionId:sessionId,\r\n                                    userName:userName,\r\n                                    date: this.state.date,})\r\n                                 });\r\n                      this.props.history.push(\"/EmployeeList/Created\");    \r\n                     } \r\n                     else \r\n                     {                     \r\n        this\r\n            .validator\r\n            .showMessages();\r\n        this.forceUpdate();\r\n    }\r\n };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <SidebarPage/>\r\n\r\n                <div className=\"all-content-wrapper\">\r\n                    <HeaderPage/>\r\n\r\n                    <div className=\"breadcome-area\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                    <div className=\"breadcome-list\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\r\n                                                <div className=\"breadcomb-wp\">\r\n\r\n                                                    <div className=\"breadcomb-ctn\">\r\n                                                        <h2>Users</h2>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"single-product-tab-area mg-b-30\">\r\n\r\n                        <div className=\"single-pro-review-area\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div className=\"review-tab-pro-inner\">\r\n\r\n                                            <h4>Add Users</h4>\r\n                                            <div className=\"product-tab-list tab-pane fade active in\">\r\n                                                <Form onSubmit={this.handleSubmit} id=\"Add-products\">\r\n\r\n                                                    <div className=\"row m-b-20\">\r\n                                                    <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                       \r\n                                                            <label>First Name<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"First Name\"\r\n                                                                name=\"first_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.first_name}/> {this\r\n                                                                .validator\r\n                                                                .message(\"First Name\", this.state.first_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                            <div className=\"text-danger\">\r\n                                                                {\" \"}\r\n                                                                {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                      \r\n                                                            <label>Last Name<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Last Name\"\r\n                                                                name=\"last_name\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.last_name}/> {this\r\n                                                                    .validator\r\n                                                                    .message(\"First Name\", this.state.last_name, \"required|specialCharText|whitespace|min:2|max:70\")}\r\n                                                                <div className=\"text-danger\">\r\n                                                                    {\" \"}\r\n                                                                    {this.state.error_message}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>E-mail Address<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            </div>\r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"E-mail Address\"\r\n                                                                name=\"email\"\r\n                                                                id=\"price_cost\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.email}/> {this\r\n                                                                .validator\r\n                                                                .message(\"E-mail Address\", this.state.email, \"required|email\")}\r\n\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Country<span style={{color: 'red' }}>*</span></label>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        <select\r\n                                                                        className=\"form-control mb-30\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                                                        onChange={this.setCountryName}>\r\n\r\n                                                                        <option >Select Country</option>\r\n                                                                        {this\r\n                                                                            .state\r\n                                                                            .countryName\r\n                                                                            .map((data, index) => {\r\n\r\n                                                                                return (\r\n                                                                                    <option value={data.name} id={data.shortName} key={index}>{data.name}</option>\r\n                                                                                )\r\n\r\n                                                                            })}\r\n                                                                       \r\n                                                                    </select>\r\n                                                                    {this\r\n                                                                            .validator\r\n                                                                            .message(\"Country\", this.state.country, \"required\")} </div>\r\n                                                        </div>\r\n                                                        \r\n                                                      \r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>City<span style={{color: 'red' }}>*</span></label>\r\n                                                        </div>\r\n                                                        \r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <select\r\n                                                                name=\"select\"\r\n                                                                className=\"form-control pro-edt-select form-control-primary\"\r\n                                                                name=\"city\"\r\n                                                                onChange={this.handleChange}>\r\n                                                                <option>Select City</option>\r\n                                                                {this.state.City && this\r\n                                                                    .state\r\n                                                                    .City\r\n                                                                    .map((data, index) => {\r\n\r\n                                                                        return(\r\n                                                                            <option value={data.city} key={index}>{data.city}</option>\r\n                                                                          )\r\n                                                                 } )}\r\n                                                                </select>\r\n                                                                \r\n                                                                 {this.validator.message(\"City\", this.state.city, \"required\")}\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Mobile Number<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            </div>  \r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <input\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Mobile Number\"\r\n                                                                name=\"mobile_number\"\r\n                                                                onChange={this.handleChange}\r\n                                                                value={this.state.mobile_number}/> {this\r\n                                                                .validator\r\n                                                                .message(\" Mobile Number\", this.state.mobile_number, \"required||numeric|max:10\")}\r\n                                                        </div>\r\n                                                        </div>\r\n\r\n                                                       \r\n\r\n                                                      \r\n                                                        <div className=\"row m-b-20 class-row\">\r\n                                                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-12\">\r\n                                                            <label>Address<span style={{color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            </div>\r\n                                                            \r\n                                                        <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <textarea\r\n                                                                type=\"text\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"Address\"\r\n                                                                name=\"address\"\r\n                                                                onChange={this.handleChange}\r\n                                                               \r\n                                                                value={this.state.address}/> {this\r\n                                                                .validator\r\n                                                                .message(\"Address\", this.state.address, \"required|min:5|max:150\")}\r\n                                                       \r\n                                                        </div>\r\n                                                        {/* <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                            <label>Password<span style={{ color: 'red'}}>*</span>\r\n                                                            </label>\r\n                                                            <input\r\n                                                             type=\"Password\"\r\n                                                             name=\"password\"\r\n                                                             value=\"\"\r\n                                                             className=\"form-control\"\r\n                                                          \r\n                                                            \r\n                                                               />\r\n                                                        </div> */}\r\n                                                       \r\n                                                    </div>\r\n\r\n                                                    \r\n                                                  \r\n\r\n                                                   \r\n\r\n                                                    <div className=\"row\">\r\n                                                    <div className=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                                                        {/* <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\"> */}\r\n                                                            <div className=\"text-center custom-pro-edt-ds\">\r\n                                                                <button\r\n                                                                    type=\"submit\"\r\n                                                                    className=\"btn btn-ctl-bt waves-effect waves-light m-r-10\">Save\r\n                                                                </button>\r\n                                                                <Link to=\"/EmployeeList\">\r\n                                                                    <button type=\"button\" className=\"btn btn-ctl-bt waves-effect waves-light\">Cancel\r\n                                                                    </button>\r\n                                                                </Link>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Form>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FooterPage/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEmployee;\r\n"]},"metadata":{},"sourceType":"module"}